<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LPD</title>
  
  <subtitle>自说自话</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.luopandeng.com/"/>
  <updated>2019-10-30T09:47:47.855Z</updated>
  <id>http://www.luopandeng.com/</id>
  
  <author>
    <name>LPD</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序开发（一）</title>
    <link href="http://www.luopandeng.com/2019/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.luopandeng.com/2019/10/30/小程序/微信小程序开发（一）/</id>
    <published>2019-10-30T09:37:02.000Z</published>
    <updated>2019-10-30T09:47:47.855Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>马上要双十一了，有一个不太成熟的想法。想在双 11 前写出一个小程序来。<br>今天是开始写的第二天，找到了一份还不错的教学视频，感觉靠谱。今天学习一下，把要写的界面和功能先列一下，明天动手写代码实现。希望能在双 11 前上线。</p><a id="more"></a><h4 id="想法："><a href="#想法：" class="headerlink" title="想法："></a>想法：</h4><p>​    这个小程序里某些展示的东西只会在特定的时间对用户可见，意味着一但设定之后就没有办法在开放期间进行修改也不能查看，只有等到特定时间时用户写的东西才能再次可见。当然这不是绝对的，不然我怎么赚钱，付费后经审核可以查看或者删除。做到一个单向性。未来可能考虑使用手机或者邮箱通知用户。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;马上要双十一了，有一个不太成熟的想法。想在双 11 前写出一个小程序来。&lt;br&gt;今天是开始写的第二天，找到了一份还不错的教学视频，感觉靠谱。今天学习一下，把要写的界面和功能先列一下，明天动手写代码实现。希望能在双 11 前上线。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用 Cloudflare 实现端口映射</title>
    <link href="http://www.luopandeng.com/2019/10/28/%E6%8A%80%E6%9C%AF/%E5%88%A9%E7%94%A8Cloudflare%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/"/>
    <id>http://www.luopandeng.com/2019/10/28/技术/利用Cloudflare实现端口映射/</id>
    <published>2019-10-28T13:28:40.000Z</published>
    <updated>2019-10-30T09:35:36.133Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>新装的宽带给了公网IP刚好光猫上也有虚拟服务器功能，于是乎想到了要搞一个端口映射的东西。由于使用的是windows 所以自然选择了powershell 作为驱动脚本。上海电信 80、8080、443 端口是完全不给的，其它一率开放。</p><a id="more"></a><p>简单解释一下思路，首先是获取本地的外网 IP 地址，然后把 CF 上的解析记录改一下。在此之前要先在 CF 上设置对应的解析记录。因为这里调用的是 CF 的更新记录 API。 为保证服务的持续有效，设置了一个十分钟的检查，这个可以设置成更短的时间，但是由于DNS生效可能需要一点时间，具体的参数值，自己摸索吧。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$getip</span> = <span class="built_in">Invoke-WebRequest</span> iiip.co</span><br><span class="line"><span class="variable">$iip</span> = <span class="variable">$getip</span>.Content.Trim()</span><br><span class="line"><span class="variable">$apitoken</span> = <span class="string">'xxxx'</span></span><br><span class="line"><span class="variable">$zoneId</span> = <span class="string">'xxxx'</span></span><br><span class="line"><span class="variable">$url</span> =<span class="string">"https://api.cloudflare.com/client/v4/zones/"</span>+<span class="variable">$zoneId</span>+<span class="string">"/dns_records?type=A&amp;name=domain.domain.xxx&amp;match=all"</span></span><br><span class="line"><span class="variable">$headers</span> = @&#123;<span class="string">"Authorization"</span>=<span class="string">"bearer "</span>+<span class="variable">$apitoken</span>&#125;</span><br><span class="line"><span class="variable">$contentype</span> = <span class="string">"application/json"</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="variable">$out</span> = <span class="built_in">Invoke-WebRequest</span> -Uri <span class="variable">$url</span> -Headers <span class="variable">$headers</span> -ContentType <span class="variable">$contentype</span></span><br><span class="line">    <span class="variable">$dataa</span> = <span class="variable">$out</span>.Content | <span class="built_in">ConvertFrom-Json</span></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$dataa</span>.result | <span class="built_in">ConvertTo-Json</span> | <span class="built_in">ConvertFrom-Json</span></span><br><span class="line">    <span class="variable">$JSON</span> = @&#123;</span><br><span class="line">            type = <span class="string">"A"</span></span><br><span class="line">            name = <span class="string">"domain.domain.xxx"</span></span><br><span class="line">            content = <span class="variable">$iip</span></span><br><span class="line">        &#125; | <span class="built_in">ConvertTo-Json</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$iip</span> <span class="nomarkup">-ne</span> <span class="variable">$result</span>.content)&#123;</span><br><span class="line">        echo <span class="string">"they are not equal"</span></span><br><span class="line">        <span class="variable">$posturl</span> = <span class="string">"https://api.cloudflare.com/client/v4/zones/"</span>+<span class="variable">$zoneId</span>+<span class="string">"/dns_records/"</span>+<span class="variable">$result</span>.id</span><br><span class="line">        <span class="variable">$test</span> = <span class="built_in">Invoke-WebRequest</span> -Uri <span class="variable">$posturl</span> -Headers <span class="variable">$headers</span> -ContentType <span class="variable">$contentype</span> -Method Put -Body <span class="variable">$JSON</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">"commit success!"</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">"step into sleep"</span></span><br><span class="line">        </span><br><span class="line">         <span class="built_in">Start-Sleep</span> -s <span class="number">600</span> <span class="comment">#这个是暂停时间</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>更新：</strong></p><blockquote><p>今天把上面的循环语句删掉了。改成了<code>windows</code>系统自带的定时任务功能。真香。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新装的宽带给了公网IP刚好光猫上也有虚拟服务器功能，于是乎想到了要搞一个端口映射的东西。由于使用的是windows 所以自然选择了powershell 作为驱动脚本。上海电信 80、8080、443 端口是完全不给的，其它一率开放。&lt;/p&gt;
    
    </summary>
    
    
      <category term="DDNS" scheme="http://www.luopandeng.com/tags/DDNS/"/>
    
  </entry>
  
  <entry>
    <title>Day 15:LinkedList</title>
    <link href="http://www.luopandeng.com/2019/10/22/HackerRank/Day-15-LinkedList/"/>
    <id>http://www.luopandeng.com/2019/10/22/HackerRank/Day-15-LinkedList/</id>
    <published>2019-10-22T08:17:20.000Z</published>
    <updated>2019-10-22T08:17:20.171Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>集合默认大小</title>
    <link href="http://www.luopandeng.com/2019/10/14/%E6%8A%80%E6%9C%AF/%E9%9B%86%E5%90%88%E9%BB%98%E8%AE%A4%E5%A4%A7%E5%B0%8F/"/>
    <id>http://www.luopandeng.com/2019/10/14/技术/集合默认大小/</id>
    <published>2019-10-14T03:04:32.000Z</published>
    <updated>2019-10-14T03:30:09.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这个是前天电话面试被问到了，之前是看了的，但是记得不是很清楚。今天又找到了一篇说这个的文章，这里抄下来，以便今后查阅。</p><a id="more"></a><p>List 元素是有序的、可重复</p><p>ArrayList、Vector默认初始容量为10</p><p>Vector：线程安全，但速度慢</p><p>　　　　底层数据结构是数组结构</p><p>　　　　加载因子为1：即当 元素个数 超过 容量长度 时，进行扩容</p><p>　　　　扩容增量：原容量的 1倍</p><p>　　　　　　如 Vector的容量为10，一次扩容后是容量为20</p><p>ArrayList：线程不安全，查询速度快</p><p>　　　　底层数据结构是数组结构</p><p>　　　　扩容增量：原容量的 1.5倍</p><p>　　　　　　如 ArrayList的容量为10，一次扩容后是容量为15</p><p>见ArrayList源码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;   <span class="comment">// 原来的容量</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);  <span class="comment">// 新的容量，原来容量的1.5倍。</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)  <span class="comment">// 如果大于ArrayList 可以容许的最大容量，则设置为最大容量。</span></span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);  <span class="comment">// 最终利用Arrays.coppy 进行扩容，生成一个1.5倍元素的数组。（即例子中的15个元素的数组。）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Set(集) 元素无序的、不可重复。</p><p>HashSet：线程不安全，存取速度快</p><p>　　　　　底层实现是一个HashMap（保存数据），实现Set接口</p><p>　　　　　默认初始容量为16（为何是16，见下方对HashMap的描述）</p><p>　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容</p><p>　　　　　扩容增量：原容量的 1 倍</p><p>　　　　　　如 HashSet的容量为16，一次扩容后是容量为32</p><p>Map是一个双列集合</p><p>HashMap：默认初始容量为16</p><p>　　　　　（为何是16：16是2^4，可以提高查询效率，另外，32=16&lt;&lt;1       –&gt;至于详细的原因可另行分析，或分析源代码）</p><p>　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容</p><p>　　　　　扩容增量：原容量的 1 倍</p><p>　　　　　　如 HashSet的容量为16，一次扩容后是容量为32</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个是前天电话面试被问到了，之前是看了的，但是记得不是很清楚。今天又找到了一篇说这个的文章，这里抄下来，以便今后查阅。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.luopandeng.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Day 14 Scope</title>
    <link href="http://www.luopandeng.com/2019/10/14/HackerRank/Day-14-Scope/"/>
    <id>http://www.luopandeng.com/2019/10/14/HackerRank/Day-14-Scope/</id>
    <published>2019-10-14T02:51:29.000Z</published>
    <updated>2019-10-14T03:27:17.205Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Today’s challenge is so solve problem that you need to calculate maximum absolute sum of given a array every two.</p><a id="more"></a><p><img src="/images/day14.1.png" alt="day14.1"></p><p><img src="/images/day14.2.png" alt="day14.2"></p><p>Here is my solution:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng.hackerrank;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/10/14:9:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Difference</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] elements;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> maximumDifference;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Difference</span><span class="params">(<span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.elements = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">computeDifference</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Integer&gt; integers = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elements.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; elements.length; j++) &#123;</span><br><span class="line">                integers.add(Math.abs(elements[i] - elements[j]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maximumDifference = Collections.max(integers);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="comment">// End of Difference class</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Day14Scope</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            a[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">        Difference difference = <span class="keyword">new</span> Difference(a);</span><br><span class="line"></span><br><span class="line">        difference.computeDifference();</span><br><span class="line"></span><br><span class="line">        System.out.print(difference.maximumDifference);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Solution-From-Others"><a href="#Solution-From-Others" class="headerlink" title="Solution From Others:"></a>Solution From Others:</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Difference</span><span class="params">(<span class="keyword">int</span>[] elements)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.elements = elements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">computeDifference</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Arrays.sort(elements);</span><br><span class="line">        <span class="keyword">this</span>.maximumDifference = Math.abs(elements[elements.length - <span class="number">1</span>] - elements[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Today’s challenge is so solve problem that you need to calculate maximum absolute sum of given a array every two.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Day 13 Abstract Class</title>
    <link href="http://www.luopandeng.com/2019/10/13/HackerRank/Day-13-Abstract-Class/"/>
    <id>http://www.luopandeng.com/2019/10/13/HackerRank/Day-13-Abstract-Class/</id>
    <published>2019-10-13T01:25:30.000Z</published>
    <updated>2019-10-13T03:53:07.300Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> <strong>Objective</strong><br>Today, we’re taking what we learned yesterday about <a href="https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html" target="_blank" rel="noopener"><em>Inheritance</em></a> and extending it to <a href="https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html" target="_blank" rel="noopener"><em>Abstract Classes</em></a>. Because this is a very specific Object-Oriented concept, submissions are limited to the few languages that use this construct. Check out the <a href="https://www.hackerrank.com/challenges/30-abstract-classes/tutorial" target="_blank" rel="noopener">Tutorial</a> tab for learning materials and an instructional video! </p><a id="more"></a><p><img src="/images/day13.1.png" alt="day13.1.png"></p><p><img src="/images/day13.2.png" alt="day13.2.png"></p><p>Here is my solution:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">abstract class Book &#123;</span><br><span class="line">    String title;</span><br><span class="line">    String author;</span><br><span class="line">    </span><br><span class="line">    Book(String title, String author) &#123;</span><br><span class="line">        this.title = title;</span><br><span class="line">        this.author = author;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    abstract void display();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Declare your class here. Do not use the &apos;public&apos; access modifier.</span><br><span class="line">    // Declare the price instance variable</span><br><span class="line">    </span><br><span class="line">    /**   </span><br><span class="line">    *   Class Constructor</span><br><span class="line">    *   </span><br><span class="line">    *   @param title The book&apos;s title.</span><br><span class="line">    *   @param author The book&apos;s author.</span><br><span class="line">    *   @param price The book&apos;s price.</span><br><span class="line">    **/</span><br><span class="line">    // Write your constructor here</span><br><span class="line">    </span><br><span class="line">    /**   </span><br><span class="line">    *   Method Name: display</span><br><span class="line">    *   </span><br><span class="line">    *   Print the title, author, and price in the specified format.</span><br><span class="line">    **/</span><br><span class="line">    // Write your method here</span><br><span class="line">    </span><br><span class="line">// End class</span><br><span class="line"></span><br><span class="line">public class Solution &#123;</span><br><span class="line">   </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner scanner = new Scanner(System.in);</span><br><span class="line">        String title = scanner.nextLine();</span><br><span class="line">        String author = scanner.nextLine();</span><br><span class="line">        int price = scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        Book book = new MyBook(title, author, price);</span><br><span class="line">        book.display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;Objective&lt;/strong&gt;&lt;br&gt;Today, we’re taking what we learned yesterday about &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Inheritance&lt;/em&gt;&lt;/a&gt; and extending it to &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Abstract Classes&lt;/em&gt;&lt;/a&gt;. Because this is a very specific Object-Oriented concept, submissions are limited to the few languages that use this construct. Check out the &lt;a href=&quot;https://www.hackerrank.com/challenges/30-abstract-classes/tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tutorial&lt;/a&gt; tab for learning materials and an instructional video! &lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Starting Today</title>
    <link href="http://www.luopandeng.com/2019/10/12/%E6%9D%82%E4%BA%8B/Starting-Today/"/>
    <id>http://www.luopandeng.com/2019/10/12/杂事/Starting-Today/</id>
    <published>2019-10-12T03:10:00.000Z</published>
    <updated>2019-10-12T03:14:22.913Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="杂事" scheme="http://www.luopandeng.com/tags/%E6%9D%82%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>Day 12 Inheritance</title>
    <link href="http://www.luopandeng.com/2019/10/12/HackerRank/Day-12-Inheritance/"/>
    <id>http://www.luopandeng.com/2019/10/12/HackerRank/Day-12-Inheritance/</id>
    <published>2019-10-12T02:50:24.000Z</published>
    <updated>2019-10-12T03:07:51.886Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>today’s challenge is inheritance. given a class you need to complete some methods that calculate the average score of a student and return a mark which is given in the initial script. And here is my solution below.</p><a id="more"></a><p><img src="/images/day12.1.png" alt="1"></p><p><img src="/images/day12.2.png" alt="2"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng.hackerrank;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/10/12:10:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Inheritance</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> String firstName;</span><br><span class="line">        <span class="keyword">protected</span> String lastName;</span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">int</span> idNumber;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Constructor</span></span><br><span class="line">        Person(String firstName, String lastName, <span class="keyword">int</span> identification)&#123;</span><br><span class="line">            <span class="keyword">this</span>.firstName = firstName;</span><br><span class="line">            <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">            <span class="keyword">this</span>.idNumber = identification;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print person data</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printPerson</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(</span><br><span class="line">                    <span class="string">"Name: "</span> + lastName + <span class="string">", "</span> + firstName</span><br><span class="line">                            + <span class="string">"\nID: "</span> + idNumber);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String firstName;</span><br><span class="line">        <span class="keyword">private</span> String lastName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span>[] testScores;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String firstName, String lastName, <span class="keyword">int</span> identification)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(firstName, lastName, identification);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String firstName, String lastName, <span class="keyword">int</span> identification,  <span class="keyword">int</span>[] testScores)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(firstName, lastName, identification);</span><br><span class="line">            <span class="keyword">this</span>.testScores = testScores;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">calculate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; testScores.length; i++) &#123;</span><br><span class="line">                sum+=testScores[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> average = sum/testScores.length;</span><br><span class="line">            <span class="keyword">if</span> (average&gt;=<span class="number">90</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"O"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (average&gt;=<span class="number">80</span>&amp;&amp;average&lt;<span class="number">90</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"E"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (average&gt;=<span class="number">70</span>&amp;&amp;average&lt;<span class="number">80</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"A"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (average&gt;=<span class="number">55</span>&amp;&amp;average&lt;<span class="number">70</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"P"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (average&gt;=<span class="number">40</span>&amp;&amp;average&lt;<span class="number">55</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"D"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"T"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            String firstName = scan.next();</span><br><span class="line">            String lastName = scan.next();</span><br><span class="line">            <span class="keyword">int</span> id = scan.nextInt();</span><br><span class="line">            <span class="keyword">int</span> numScores = scan.nextInt();</span><br><span class="line">            <span class="keyword">int</span>[] testScores = <span class="keyword">new</span> <span class="keyword">int</span>[numScores];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numScores; i++)&#123;</span><br><span class="line">                testScores[i] = scan.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">            scan.close();</span><br><span class="line"></span><br><span class="line">            Student s = <span class="keyword">new</span> Student(firstName, lastName, id, testScores);</span><br><span class="line">            s.printPerson();</span><br><span class="line">            System.out.println(<span class="string">"Grade: "</span> + s.calculate() );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="solution-from-others"><a href="#solution-from-others" class="headerlink" title="solution from others"></a>solution from others</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] testScores;</span><br><span class="line">    </span><br><span class="line">    Student(String firstName, String lastName, <span class="keyword">int</span> identification, <span class="keyword">int</span>[] scores)&#123;</span><br><span class="line"><span class="keyword">super</span>(firstName, lastName, identification);</span><br><span class="line"><span class="keyword">this</span>.testScores = scores;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">calculate</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> average = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; testScores.length; i++)&#123;</span><br><span class="line">average += testScores[i];</span><br><span class="line">&#125;</span><br><span class="line">average = average / testScores.length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(average &gt;= <span class="number">90</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'O'</span>; <span class="comment">// Outstanding</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(average &gt;= <span class="number">80</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'E'</span>; <span class="comment">// Exceeds Expectations</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(average &gt;= <span class="number">70</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'A'</span>; <span class="comment">// Acceptable</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(average &gt;= <span class="number">55</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'P'</span>; <span class="comment">// Dreadful</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(average &gt;= <span class="number">40</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'D'</span>; <span class="comment">// Dreadful</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'T'</span>; <span class="comment">// Troll</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;today’s challenge is inheritance. given a class you need to complete some methods that calculate the average score of a student and return a mark which is given in the initial script. And here is my solution below.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Day 11 2D Arrays</title>
    <link href="http://www.luopandeng.com/2019/10/11/HackerRank/Day-11-2D-Arrays/"/>
    <id>http://www.luopandeng.com/2019/10/11/HackerRank/Day-11-2D-Arrays/</id>
    <published>2019-10-11T01:48:19.000Z</published>
    <updated>2019-10-11T06:01:41.873Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Context</strong><br>Given a 6 * 6 <em>2D Array</em>, A:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 0 0 0</span><br><span class="line">0 1 0 0 0 0</span><br><span class="line">1 1 1 0 0 0</span><br><span class="line">0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0</span><br></pre></td></tr></table></figure><p>We define an hourglass in  A to be a subset of values with indices falling in this pattern in A’s graphical representation:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a b c</span><br><span class="line">  d</span><br><span class="line">e f g</span><br></pre></td></tr></table></figure><p>There are  16 hourglasses in A, and an <em>hourglass sum</em> is the sum of an hourglass’ values.</p><p><strong>Task</strong><br>Calculate the hourglass sum for every hourglass in A, then print the <em>maximum</em> hourglass sum.</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng.hackerrank;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/10/11:10:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Day10</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">            String[] arrRowItems = scanner.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">            scanner.skip(<span class="string">"(\r\n|[\n\r\u2028\u2029\u0085])?"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> arrItem = Integer.parseInt(arrRowItems[j]);</span><br><span class="line">                arr[i][j] = arrItem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        HashSet&lt;Integer&gt; result = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr[i].length-<span class="number">2</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//顶</span></span><br><span class="line">                <span class="keyword">int</span> top = arr[i][j] + arr[i][j+<span class="number">1</span>] + arr[i][j+<span class="number">2</span>];</span><br><span class="line"><span class="comment">//                System.out.println(top);</span></span><br><span class="line">                <span class="keyword">int</span> mid = arr[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="comment">//                System.out.println(mid);</span></span><br><span class="line">                <span class="keyword">int</span> bottom = arr[i+<span class="number">2</span>][j] + arr[i+<span class="number">2</span>][j+<span class="number">1</span>] + arr[i+<span class="number">2</span>][j+<span class="number">2</span>];</span><br><span class="line">                result.add(top+mid+bottom);</span><br><span class="line"><span class="comment">//                System.out.println(bottom+top+mid);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Collections.max(result));</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>My solution is not good. Perhaps there are some smart way to solve it.</p><p>Below is a another solution from others.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.text.*;</span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> _MAX = <span class="number">6</span>; <span class="comment">// size of matrix</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> _OFFSET = <span class="number">2</span>; <span class="comment">// hourglass width</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> matrix[][] = <span class="keyword">new</span> <span class="keyword">int</span>[_MAX][_MAX];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxHourglass = -<span class="number">63</span>; <span class="comment">// initialize to lowest possible sum (-9 x 7)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Given a starting index for an hourglass, sets maxHourglass</span></span><br><span class="line"><span class="comment">    *   <span class="doctag">@param</span> i row </span></span><br><span class="line"><span class="comment">    *   <span class="doctag">@param</span> j column </span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hourglass</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>; <span class="comment">// current hourglass sum</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = j; k &lt;= j + _OFFSET; k++)&#123;</span><br><span class="line">            tmp += matrix[i][k]; <span class="comment">// top 3 elements</span></span><br><span class="line">            tmp += matrix[i + _OFFSET][k]; <span class="comment">// bottom 3 elements</span></span><br><span class="line">        &#125;</span><br><span class="line">        tmp += matrix[i + <span class="number">1</span>][j + <span class="number">1</span>]; <span class="comment">// middle element</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(maxHourglass &lt; tmp)&#123;</span><br><span class="line">            maxHourglass = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// read inputs</span></span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; _MAX; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j &lt; _MAX; j++)&#123;</span><br><span class="line">                matrix[i][j] = scan.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        scan.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// find maximum hourglass</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; _MAX - _OFFSET; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j &lt; _MAX - _OFFSET; j++)&#123;</span><br><span class="line">                hourglass(i, j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// print maximum hourglass</span></span><br><span class="line">        System.out.println(maxHourglass);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt;&lt;br&gt;Given a 6 * 6 &lt;em&gt;2D Array&lt;/em&gt;, A:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 1 1 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 1 0 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 1 1 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 0 0 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 0 0 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 0 0 0 0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;We define an hourglass in  A to be a subset of values with indices falling in this pattern in A’s graphical representation:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a b c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e f g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;There are  16 hourglasses in A, and an &lt;em&gt;hourglass sum&lt;/em&gt; is the sum of an hourglass’ values.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;&lt;br&gt;Calculate the hourglass sum for every hourglass in A, then print the &lt;em&gt;maximum&lt;/em&gt; hourglass sum.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Day 10 Binary Numbers</title>
    <link href="http://www.luopandeng.com/2019/10/10/HackerRank/Day-10-Binary-Numbers/"/>
    <id>http://www.luopandeng.com/2019/10/10/HackerRank/Day-10-Binary-Numbers/</id>
    <published>2019-10-10T04:03:48.000Z</published>
    <updated>2019-10-10T14:56:36.085Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>输入一个正整数，转为二进制将二进制中连续的1的个数的最大值求出来。</p><p><strong>Task</strong><br>Given a base-10 integer,N , convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1’s in N’s binary representation.</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/10/10:11:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinaryNumbers</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        scanner.skip(<span class="string">"(\r\n|[\n\r\u2028\u2029\u0085])?"</span>);</span><br><span class="line">        String s = Integer.toBinaryString(n);</span><br><span class="line">        String[] split = s.split(<span class="string">"0"</span>);</span><br><span class="line">        HashSet&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; split.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (split[i]!=<span class="string">""</span>&amp;&amp;!split[i].equals(<span class="string">""</span>)) &#123;</span><br><span class="line">                set.add(Integer.valueOf(split[i].length()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Integer max = Collections.max(set);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;输入一个正整数，转为二进制将二进制中连续的1的个数的最大值求出来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;&lt;br&gt;Given a base-10 integer,N , convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1’s in N’s binary representation.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Days 9 Recursion</title>
    <link href="http://www.luopandeng.com/2019/10/08/HackerRank/Days-9-Recursion/"/>
    <id>http://www.luopandeng.com/2019/10/08/HackerRank/Days-9-Recursion/</id>
    <published>2019-10-08T08:09:37.000Z</published>
    <updated>2019-10-09T02:08:58.989Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>利用递归算法求阶乘。这个破系统不知道怎么回事，我都提交了，却显示我明天才能看题目。</p><p><strong>Task</strong><br>Write a <em>factorial</em> function that takes a positive integer,  N as a parameter and prints the result of  N (N factorial).</p><p><strong>Note:</strong> If you fail to use recursion or fail to name your recursive function <em>factorial</em> or <em>Factorial</em>, you will get a score of 0.</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/10/8:15:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recursion</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Complete the factorial function below.</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> n*factorial(n-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        scanner.skip(<span class="string">"(\r\n|[\n\r\u2028\u2029\u0085])?"</span>);</span><br><span class="line">        <span class="keyword">int</span> result = factorial(n);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用递归算法求阶乘。这个破系统不知道怎么回事，我都提交了，却显示我明天才能看题目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;&lt;br&gt;Write a &lt;em&gt;factorial&lt;/em&gt; function that takes a positive integer,  N as a parameter and prints the result of  N (N factorial).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you fail to use recursion or fail to name your recursive function &lt;em&gt;factorial&lt;/em&gt; or &lt;em&gt;Factorial&lt;/em&gt;, you will get a score of 0.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Adsense 今天被暂停了</title>
    <link href="http://www.luopandeng.com/2019/10/08/%E6%9D%82%E4%BA%8B/Adsense-%E4%BB%8A%E5%A4%A9%E8%A2%AB%E6%9A%82%E5%81%9C%E4%BA%86/"/>
    <id>http://www.luopandeng.com/2019/10/08/杂事/Adsense-今天被暂停了/</id>
    <published>2019-10-08T07:30:15.000Z</published>
    <updated>2019-10-08T07:35:36.874Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>唉，查流量吧。</p><a id="more"></a><p>话不多说，直接上图。</p><p><img src="/images/service_suspended.png" alt="暂停"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;唉，查流量吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Adsense" scheme="http://www.luopandeng.com/tags/Adsense/"/>
    
  </entry>
  
  <entry>
    <title>Day 8 Phone a Friend</title>
    <link href="http://www.luopandeng.com/2019/10/08/HackerRank/Day-8-Phone-a-Friend/"/>
    <id>http://www.luopandeng.com/2019/10/08/HackerRank/Day-8-Phone-a-Friend/</id>
    <published>2019-10-08T06:56:17.000Z</published>
    <updated>2019-10-08T07:00:51.514Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Task</strong><br>Given <code>n</code> names and phone numbers, assemble a phone book that maps friends’ names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each <code>name</code> queried, print the associated entry from your phone book on a new line in the form <code>name=phoneNumber</code>; if an entry for <code>name</code> is not found, print <code>Not found</code> instead.</p><p><strong>Note:</strong> Your phone book should be a Dictionary/Map/HashMap data structure.</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/10/8:14:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DicAndMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        Map&lt;String, Integer&gt; aMap = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            String name = in.next();</span><br><span class="line">            <span class="keyword">int</span> phone = in.nextInt();</span><br><span class="line">            <span class="comment">// Write code here</span></span><br><span class="line">            aMap.put(name, phone);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(in.hasNext())&#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line"><span class="comment">//             Write code here</span></span><br><span class="line">            <span class="keyword">if</span> (aMap.get(s)==<span class="keyword">null</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">"Not found."</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(s+<span class="string">"="</span>+aMap.get(s));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;&lt;br&gt;Given &lt;code&gt;n&lt;/code&gt; names and phone numbers, assemble a phone book that maps friends’ names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each &lt;code&gt;name&lt;/code&gt; queried, print the associated entry from your phone book on a new line in the form &lt;code&gt;name=phoneNumber&lt;/code&gt;; if an entry for &lt;code&gt;name&lt;/code&gt; is not found, print &lt;code&gt;Not found&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Your phone book should be a Dictionary/Map/HashMap data structure.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Day 7: Arrays</title>
    <link href="http://www.luopandeng.com/2019/10/07/HackerRank/Day-7-Arrays/"/>
    <id>http://www.luopandeng.com/2019/10/07/HackerRank/Day-7-Arrays/</id>
    <published>2019-10-07T07:54:16.000Z</published>
    <updated>2019-10-07T08:05:05.271Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>task:</p><p>Given an array, A , of  N integers, print A’s elements in <em>reverse</em> order as a single line of space-separated numbers.</p><p>给定一个定长的数组，翻转这个数组。</p><a id="more"></a><p>My solution:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: LPD0155</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019:2019/10/7:14:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReverseArray</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        scanner.skip(<span class="string">"(\r\n|[\n\r\u2028\u2029\u0085])?"</span>);</span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">1</span> &amp; n &lt;= <span class="number">1000</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">            String[] arrItems = scanner.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">            scanner.skip(<span class="string">"(\r\n|[\n\r\u2028\u2029\u0085])?"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arrItems.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (Integer.parseInt(arrItems[j]) &lt; <span class="number">1</span> || Integer.parseInt(arrItems[j]) &gt; <span class="number">10000</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"You just input a wrong number"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> arrItem = Integer.parseInt(arrItems[i]);</span><br><span class="line">                arr[i] = arrItem;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//all code goes here below</span></span><br><span class="line">            <span class="keyword">int</span> midT = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">                midT = arr[i];</span><br><span class="line">                arr[i] = arr[arr.length - <span class="number">1</span> - i];</span><br><span class="line">                arr[arr.length - i - <span class="number">1</span>] = midT;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                System.out.print(arr[i] + <span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"You just input a wrong number"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他实现方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Collections.reverse()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invertUsingCollectionsReverse</span><span class="params">(Object[] array)</span> </span>&#123;</span><br><span class="line">    List&lt;Object&gt; list = Arrays.asList(array);</span><br><span class="line">    Collections.reverse(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用Stream API实现:</span></span><br><span class="line">Object[] invertUsingStreams(Object[] array) &#123;</span><br><span class="line">    <span class="keyword">return</span> IntStream.rangeClosed(<span class="number">1</span>, array.length)</span><br><span class="line">      .mapToObj(i -&gt; array[array.length - i])</span><br><span class="line">      .toArray();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      the seventh
    
    </summary>
    
    
      <category term="hackerrank" scheme="http://www.luopandeng.com/tags/hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>ASCII码表</title>
    <link href="http://www.luopandeng.com/2019/10/07/%E6%8A%80%E6%9C%AF/ASCII%E7%A0%81%E8%A1%A8/"/>
    <id>http://www.luopandeng.com/2019/10/07/技术/ASCII码表/</id>
    <published>2019-10-07T06:43:45.000Z</published>
    <updated>2019-10-07T06:55:06.972Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这个表还是很有用的，这里摘出来放在这里以务不时之需。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Dec  Char                           Dec  Char     Dec  Char     Dec  Char</span><br><span class="line">---------                           ---------     ---------     ----------</span><br><span class="line">  0  NUL (null)                      32  SPACE     64  @         96  `</span><br><span class="line">  1  SOH (start of heading)          33  !         65  A         97  a</span><br><span class="line">  2  STX (start of text)             34  &quot;         66  B         98  b</span><br><span class="line">  3  ETX (end of text)               35  #         67  C         99  c</span><br><span class="line">  4  EOT (end of transmission)       36  $         68  D        100  d</span><br><span class="line">  5  ENQ (enquiry)                   37  %         69  E        101  e</span><br><span class="line">  6  ACK (acknowledge)               38  &amp;         70  F        102  f</span><br><span class="line">  7  BEL (bell)                      39  &apos;         71  G        103  g</span><br><span class="line">  8  BS  (backspace)                 40  (         72  H        104  h</span><br><span class="line">  9  TAB (horizontal tab)            41  )         73  I        105  i</span><br><span class="line"> 10  LF  (NL line feed, new line)    42  *         74  J        106  j</span><br><span class="line"> 11  VT  (vertical tab)              43  +         75  K        107  k</span><br><span class="line"> 12  FF  (NP form feed, new page)    44  ,         76  L        108  l</span><br><span class="line"> 13  CR  (carriage return)           45  -         77  M        109  m</span><br><span class="line"> 14  SO  (shift out)                 46  .         78  N        110  n</span><br><span class="line"> 15  SI  (shift in)                  47  /         79  O        111  o</span><br><span class="line"> 16  DLE (data link escape)          48  0         80  P        112  p</span><br><span class="line"> 17  DC1 (device control 1)          49  1         81  Q        113  q</span><br><span class="line"> 18  DC2 (device control 2)          50  2         82  R        114  r</span><br><span class="line"> 19  DC3 (device control 3)          51  3         83  S        115  s</span><br><span class="line"> 20  DC4 (device control 4)          52  4         84  T        116  t</span><br><span class="line"> 21  NAK (negative acknowledge)      53  5         85  U        117  u</span><br><span class="line"> 22  SYN (synchronous idle)          54  6         86  V        118  v</span><br><span class="line"> 23  ETB (end of trans. block)       55  7         87  W        119  w</span><br><span class="line"> 24  CAN (cancel)                    56  8         88  X        120  x</span><br><span class="line"> 25  EM  (end of medium)             57  9         89  Y        121  y</span><br><span class="line"> 26  SUB (substitute)                58  :         90  Z        122  z</span><br><span class="line"> 27  ESC (escape)                    59  ;         91  [        123  &#123;</span><br><span class="line"> 28  FS  (file separator)            60  &lt;         92  \        124  |</span><br><span class="line"> 29  GS  (group separator)           61  =         93  ]        125  &#125;</span><br><span class="line"> 30  RS  (record separator)          62  &gt;         94  ^        126  ~</span><br><span class="line"> 31  US  (unit separator)            63  ?         95  _        127  DEL</span><br></pre></td></tr></table></figure><p>大小字母之间相差32。</p>]]></content>
    
    <summary type="html">
    
      ascii码表
    
    </summary>
    
    
      <category term="cheatsheet" scheme="http://www.luopandeng.com/tags/cheatsheet/"/>
    
  </entry>
  
  <entry>
    <title>奇偶分组——HackerRank</title>
    <link href="http://www.luopandeng.com/2019/10/07/HackerRank/%E5%A5%87%E5%81%B6%E5%88%86%E7%BB%84%E2%80%94%E2%80%94HackerRank/"/>
    <id>http://www.luopandeng.com/2019/10/07/HackerRank/奇偶分组——HackerRank/</id>
    <published>2019-10-07T04:59:55.000Z</published>
    <updated>2019-10-07T05:56:18.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>要求：给出一个字符串，把字符串中的字母按奇偶分成两组打印出来。</p><a id="more"></a><p>我的解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.luopandeng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EvenSplit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(<span class="keyword">new</span> BufferedInputStream(System.in));</span><br><span class="line">        <span class="keyword">int</span> T = sc.nextInt();</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; outter = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            *这里是个坑，起初这个inner 是在循环外的。单个输入的时候能输出正确答案</span></span><br><span class="line"><span class="comment">            *但是输入一个以上的串时出现的情况是，outter这个列表里出现相同的值，且都为最后输入的那个</span></span><br><span class="line"><span class="comment">            *为什么会出现这种情况呢？这就不得不提到两概念了，值传递和引用传递。</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            List&lt;String&gt; innner = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            String s = sc.next();</span><br><span class="line">            <span class="keyword">char</span>[] chars = s.toCharArray();</span><br><span class="line">            StringBuilder evenChar = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            StringBuilder oddChar = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chars.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                    oddChar.append(chars[j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    evenChar.append(chars[j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            innner.add(evenChar.toString());</span><br><span class="line">            innner.add(oddChar.toString());</span><br><span class="line">            outter.add(innner);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(outter);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; outter.size(); k++) &#123;</span><br><span class="line">            System.out.println(outter.get(k).get(<span class="number">0</span>) + <span class="string">" "</span> + outter.get(k).get(<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="值传递和引用传递"><a href="#值传递和引用传递" class="headerlink" title="值传递和引用传递"></a>值传递和引用传递</h2><p>先来看在外面和在里面不同的输出结果。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><img src="/images/out.png" alt="外面"></td><td><img src="/images/inner.png" alt="里面"></td></tr></tbody></table><p>重点看红框里的部分。从hello拆出来的应该是在列表内的第一个列表内，从world拆出来的应该是在第二个列表里。</p><p><strong>（1）基本数据类型传值，对形参的修改不会影响实参；</strong><br><strong>（2）引用类型传引用，形参和实参指向同一个内存地址（同一个对象），所以对参数的修改会影响到实际的对象；</strong><br><strong>（3）String, Integer, Double等immutable的类型特殊处理，可以理解为传值，最后的操作不会修改实参对象。</strong></p><p>参考链接：<a href="https://www.cnblogs.com/binyue/p/3862276.html" target="_blank" rel="noopener">理解Java中的引用传递和值传递</a></p><p>由此我们可以知道，当<code>inner</code> 在外面时 <code>outter</code> 每次<code>add</code>的都是 <code>inner</code> 对象的地址，一旦 <code>inner</code>的值发生变化 ，则<code>outter</code>也会发生变化，就算是已经加进去的也会发生改变；当<code>inner</code>在里面时，每一次循环都会重新建立一个<code>inner</code>对象，<code>outter</code>的<code>add</code>接收的都是新的对象，因此能得到正确答案。</p><p>另外，这道题目遇到的另一个问题是：<code>Scanner</code>接收输入的问题。有机会再总结。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要求：给出一个字符串，把字符串中的字母按奇偶分成两组打印出来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法 hackerrank" scheme="http://www.luopandeng.com/tags/%E7%AE%97%E6%B3%95-hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>Adsense被暂停投放广告了</title>
    <link href="http://www.luopandeng.com/2019/10/05/%E6%9D%82%E4%BA%8B/Adsense%E8%A2%AB%E6%9A%82%E5%81%9C%E6%8A%95%E6%94%BE%E5%B9%BF%E5%91%8A%E4%BA%86/"/>
    <id>http://www.luopandeng.com/2019/10/05/杂事/Adsense被暂停投放广告了/</id>
    <published>2019-10-05T07:23:52.000Z</published>
    <updated>2019-10-05T07:56:49.959Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天上午，Adsense突然告诉我。广告投放暂停了，百思不得解，用analystic 看了一下有很多未知设备访问。</p><a id="more"></a><p>估计是因为这个被停的吧。网上查了一上，要等一个周左右才能解封，按照每天20刀的话，我至少损失150刀的广告费。但是现在还不知道能不能解封呢。唉。。。</p><p>附图：</p><p><img src="/images/suspend.png" alt="suspend"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天上午，Adsense突然告诉我。广告投放暂停了，百思不得解，用analystic 看了一下有很多未知设备访问。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Adsense" scheme="http://www.luopandeng.com/tags/Adsense/"/>
    
  </entry>
  
  <entry>
    <title>一道笔试题</title>
    <link href="http://www.luopandeng.com/2019/10/04/%E6%8A%80%E6%9C%AF/%E4%B8%80%E9%81%93%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    <id>http://www.luopandeng.com/2019/10/04/技术/一道笔试题/</id>
    <published>2019-10-04T07:24:07.000Z</published>
    <updated>2019-10-05T07:28:18.936Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天按照约定的时间，在电脑上做了一道算法题。现在把题目贴出来。</p><a id="more"></a><p><img src="/images/%E7%AC%94%E8%AF%95%E9%A2%98.png" alt="题目"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天按照约定的时间，在电脑上做了一道算法题。现在把题目贴出来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法题" scheme="http://www.luopandeng.com/tags/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>有用的学习链接</title>
    <link href="http://www.luopandeng.com/2019/10/04/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E4%B8%9C%E8%A5%BF/%E6%9C%89%E7%94%A8%E7%9A%84%E5%AD%A6%E4%B9%A0%E9%93%BE%E6%8E%A5/"/>
    <id>http://www.luopandeng.com/2019/10/04/有意思的东西/有用的学习链接/</id>
    <published>2019-10-04T03:34:23.000Z</published>
    <updated>2019-10-08T15:30:22.591Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>主要写一些查相关资料时，看到的有用的链接</p><a id="more"></a><p>算法的时间与空间复杂度</p><ul><li>时间维度：是指执行当前算法所消耗的时间，我们通常用「时间复杂度」来描述。</li><li>空间维度：是指执行当前算法需要占用多少内存空间，我们通常用「空间复杂度」来描述。</li></ul><ol><li>在 大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：<strong>算法的渐进时间复杂度</strong>。</li><li>空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度，同样反映的是一个趋势，我们用 S(n) 来定义。</li></ol><p>来源：<a href="https://zhuanlan.zhihu.com/p/50479555" target="_blank" rel="noopener">知乎</a></p><p><a href="http://www.fileformat.info/" target="_blank" rel="noopener">http://www.fileformat.info</a></p><p>安卓相关：</p><p><a href="https://web.stanford.edu/class/cs231m/syllabus.html" target="_blank" rel="noopener">斯坦福安卓课程2015年</a></p><p>关于JVM优化的一些链接：</p><p><a href="https://tech.meituan.com/2017/12/29/jvm-optimize.html" target="_blank" rel="noopener">美团技术</a></p><p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-jvm-optimize-experience/index.html" target="_blank" rel="noopener">IBM技术社区</a></p><p><a href="https://crowhawk.github.io/2017/08/09/jvm_1/" target="_blank" rel="noopener">一个华科硕士博客</a></p><p><a href="https://www.cnblogs.com/chanshuyi/p/jvm_serial_07_jvm_class_loader_mechanism.html" target="_blank" rel="noopener">博客园-陈树义</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要写一些查相关资料时，看到的有用的链接&lt;/p&gt;
    
    </summary>
    
    
      <category term="有意思的东西" scheme="http://www.luopandeng.com/tags/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
  </entry>
  
  <entry>
    <title>无事可写</title>
    <link href="http://www.luopandeng.com/2019/10/03/%E6%9D%82%E4%BA%8B/%E6%97%A0%E4%BA%8B%E5%8F%AF%E5%86%99/"/>
    <id>http://www.luopandeng.com/2019/10/03/杂事/无事可写/</id>
    <published>2019-10-03T14:15:41.000Z</published>
    <updated>2019-10-03T14:25:32.828Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天学的东西不多，写了一道算法题。然后把最近两天困扰我的逆向问题解决了。</p><a id="more"></a><p>解决的方法已经写在另一篇文章了，感觉目前这家公司的问题在于管理体系不完善，应对问题的能力有点弱。问题想的也不周全，另外一个很大的原因是系统开发部门能力太弱鸡了。这只是我的猜测。如果是我要做这样一件事的话，我肯定会把系统固件在recovery这里加密，每次升级只能通过系统自己下载，像手机一样自动升级。当然这个风险很大，也许他们经过测算，或许目前的方式更好吧。商业有商业的逻辑，技术有技术的思考。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天学的东西不多，写了一道算法题。然后把最近两天困扰我的逆向问题解决了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="废话" scheme="http://www.luopandeng.com/tags/%E5%BA%9F%E8%AF%9D/"/>
    
  </entry>
  
</feed>
