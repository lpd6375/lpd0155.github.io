{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/ads.txt","path":"ads.txt","modified":1,"renderable":0},{"_id":"source/images/15.2.png","path":"images/15.2.png","modified":1,"renderable":0},{"_id":"source/images/day13.1.png","path":"images/day13.1.png","modified":1,"renderable":0},{"_id":"source/images/day13.2.png","path":"images/day13.2.png","modified":1,"renderable":0},{"_id":"source/images/day14.2.png","path":"images/day14.2.png","modified":1,"renderable":0},{"_id":"source/images/debug.log","path":"images/debug.log","modified":1,"renderable":0},{"_id":"source/images/inner.png","path":"images/inner.png","modified":1,"renderable":0},{"_id":"source/images/out.png","path":"images/out.png","modified":1,"renderable":0},{"_id":"source/images/service_suspended.png","path":"images/service_suspended.png","modified":1,"renderable":0},{"_id":"source/images/suspend.png","path":"images/suspend.png","modified":1,"renderable":0},{"_id":"source/images/day12.1.png","path":"images/day12.1.png","modified":1,"renderable":0},{"_id":"source/images/day12.2.png","path":"images/day12.2.png","modified":1,"renderable":0},{"_id":"source/images/day14.1.png","path":"images/day14.1.png","modified":1,"renderable":0},{"_id":"source/images/day15.1.png","path":"images/day15.1.png","modified":1,"renderable":0},{"_id":"source/images/pic.png","path":"images/pic.png","modified":1,"renderable":0},{"_id":"source/images/接见.png","path":"images/接见.png","modified":1,"renderable":0},{"_id":"source/images/笔试题.png","path":"images/笔试题.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"source/images/特别.png","path":"images/特别.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/ads.txt","hash":"a7e5365fe9b7830a119fed5b7736f68bd7756499","modified":1569693920423},{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1566792980254},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1566792980254},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1566792980254},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1566792980254},{"_id":"themes/landscape/_config.yml","hash":"5830794805a802aebba0103fc9997b05e7e7d985","modified":1584690155353},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1566792980300},{"_id":"source/images/15.2.png","hash":"bc30952af7b7b5e444148a29be9d133c95532405","modified":1571732586742},{"_id":"source/images/day13.1.png","hash":"a70b16c0415049254f8d1594c778532fc399be61","modified":1570930092343},{"_id":"source/images/day13.2.png","hash":"f5daa117edda7239bbe3f418ce9da269873020e8","modified":1570930050072},{"_id":"source/images/day14.2.png","hash":"06dd7979957bd4d26e23ff72c2e92a45b6cb3765","modified":1571023496918},{"_id":"source/images/debug.log","hash":"ed9d1fcef717798893fe8a888c6e748094661519","modified":1584690269237},{"_id":"source/images/inner.png","hash":"7154712e8f9396dae8ede9609c76aec513a5b722","modified":1570426341781},{"_id":"source/images/out.png","hash":"ce8ffca6056d047fa4ef61000be4390f769daf5f","modified":1570426817415},{"_id":"source/images/service_suspended.png","hash":"c10419b65e7b1d2a5d91548f3f30a577d3dc897c","modified":1570502211819},{"_id":"source/images/suspend.png","hash":"36e473f64199694b226e47002954dcb42b8224a6","modified":1570262134679},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1566792980269},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1566792980269},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1566792980269},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1566792980269},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1566792980269},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1566792980269},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1566792980269},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1566792980269},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1566792980269},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1566792980269},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1566792980269},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1566792980269},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1566792980285},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1566792980285},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1566792980285},{"_id":"themes/landscape/layout/layout.ejs","hash":"e09e65696cd1ed0dfcccd8775e600c47bd744c07","modified":1584690155372},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1566792980300},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1566792980300},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1566792980300},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1566792980300},{"_id":"source/images/day12.1.png","hash":"a4f6d30917be7f02be5ab47ba00166b84380ab71","modified":1570848776477},{"_id":"source/images/day12.2.png","hash":"93a5b07f021ed32074d60bdc028b4e2aaef58d15","modified":1570848815771},{"_id":"source/images/day14.1.png","hash":"fad08e9e4d35e8b35fe3345c1a6e798abcb624a8","modified":1571023483647},{"_id":"source/images/day15.1.png","hash":"24b86bea8e35223bef7dd65ac27b83bef3cc412b","modified":1571732555147},{"_id":"source/images/pic.png","hash":"4747064555bd53b8df54b6cc1e2a6ab60b479aa8","modified":1566792980254},{"_id":"source/images/接见.png","hash":"dcfd21b33d71011a9cecf98586dce2a83e4c66a0","modified":1569846663976},{"_id":"source/images/笔试题.png","hash":"f2f0ff2faaa57581c616834f229acd6f5cfe056c","modified":1570260157988},{"_id":"source/_posts/HackerRank/Day-10-Binary-Numbers.md","hash":"f8514d6663eda3aeec0cad55548b329e4d0fffbe","modified":1570719396085},{"_id":"source/_posts/HackerRank/Day-11-2D-Arrays.md","hash":"0ea3b93f244e60bef5d1b0911aa18e95cddfc502","modified":1570773701873},{"_id":"source/_posts/HackerRank/Day-12-Inheritance.md","hash":"44632cd5cf4ba114200db2245d236a5471cf4048","modified":1570849671886},{"_id":"source/_posts/HackerRank/Day-13-Abstract-Class.md","hash":"461bcf44f528134176c7bbb05982113b07d13b28","modified":1570938787300},{"_id":"source/_posts/HackerRank/Day-14-Scope.md","hash":"f70858d47d61f3fdb7c2e912df8bb2e0311d44b8","modified":1571023637205},{"_id":"source/_posts/HackerRank/Day-15-LinkedList.md","hash":"b78327cfbe86ffaabbb1a73cec2b99f491226169","modified":1571732240171},{"_id":"source/_posts/HackerRank/Day-7-Arrays.md","hash":"856e3617c2cc9ef1e5f9123b511381e64ea37468","modified":1570435505271},{"_id":"source/_posts/HackerRank/Day-8-Phone-a-Friend.md","hash":"d3941503f8e03d4b8f698d5737b1d550549de3a8","modified":1570518051514},{"_id":"source/_posts/HackerRank/Days-9-Recursion.md","hash":"739a97d2c09ea0c2a95aa16ad7cb212ae6648484","modified":1570586938989},{"_id":"source/_posts/HackerRank/奇偶分组——HackerRank.md","hash":"8e0e33e08ef6e70785967827dd2a951d64679251","modified":1570427778703},{"_id":"source/_posts/chaos/Adsense-今天被暂停了.md","hash":"123d8c47aa5b70edea7460f966533ecc384e3816","modified":1585269249087},{"_id":"source/_posts/chaos/Adsense-过了封锁期了.md","hash":"12df4fdae8ac7e05bddc6387949267b39d8740e5","modified":1584690155181},{"_id":"source/_posts/chaos/Adsense被暂停投放广告了.md","hash":"68636c7dad9a2119c919d83734ee0d89dda531c9","modified":1584690155184},{"_id":"source/_posts/chaos/In-The-Midnight.md","hash":"a65f8605edb2f6264e20d3941b1b88731e72c86b","modified":1584690155186},{"_id":"source/_posts/chaos/Something-You-Should-Not-Ignore.md","hash":"b4fa0a4037fb467e7b3281cff6c566a9547b750f","modified":1584690155189},{"_id":"source/_posts/chaos/Starting-Today.md","hash":"8f5efd0a684272d42218cb109266e7748d3d1313","modified":1584690155191},{"_id":"source/_posts/chaos/feel-like-to-write-something.md","hash":"094e490f7767bca59f984693ff5e7310812674fc","modified":1584690155193},{"_id":"source/_posts/chaos/什么是隐私.md","hash":"862f21d7238453df332b2d447bf7d1b1b3d1eb18","modified":1585268399817},{"_id":"source/_posts/chaos/备案今日过审.md","hash":"e94b6e1b05d89d2ebd37bf1a7e18339308cced72","modified":1584690155196},{"_id":"source/_posts/chaos/无事可写.md","hash":"addd4d6b898633729a565dace2c17437b264cf2d","modified":1584690155198},{"_id":"source/_posts/chaos/看新闻有感.md","hash":"0e475c9e876058dce7f95ecc39f46cde7e774ee6","modified":1584690155200},{"_id":"source/_posts/chaos/碎碎念.md","hash":"3c95467ac0f7a18894d8868bb9a859624d94741e","modified":1585269118877},{"_id":"source/_posts/chaos/观礼有感.md","hash":"ce7ea811192bd5236baa032cfec71ff7a36b9d61","modified":1584690155202},{"_id":"source/_posts/chaos/跌跌撞撞写博客.md","hash":"5cad43956b25ee4d7465b378e2c87a7c9e764ca1","modified":1584690155204},{"_id":"source/_posts/fun/优秀博客收集.md","hash":"20fd4e879131c091ed761dd56fb08110b355df6f","modified":1584690155208},{"_id":"source/_posts/fun/有用的学习链接.md","hash":"2590a80c36e13574d7bdda89677d3ac2b374ea83","modified":1584690155210},{"_id":"source/_posts/gone/恢复：一年前的踩坑记录.md","hash":"13183ab9c25abde8ca8973a11b3465dcd344802e","modified":1584690155214},{"_id":"source/_posts/invest/About-Africa.md","hash":"e801d059a7e789bc3b7754111c6d25e7a3bada51","modified":1584690155217},{"_id":"source/_posts/invest/About-China.md","hash":"c6cbe2238d79cffda7651c09bd06879ede81cbd2","modified":1584690155219},{"_id":"source/_posts/invest/About-EU.md","hash":"fa6548ce781783defd9ab91e86bbf4f19d12ad2d","modified":1584690155221},{"_id":"source/_posts/invest/About-German.md","hash":"59714a27da13c72cddc5b0ff69f2a8afa7c43a91","modified":1584690155223},{"_id":"source/_posts/invest/About-India.md","hash":"89dfd07382b2f1a6ede8d8376284830e7ff8b1fc","modified":1584690155225},{"_id":"source/_posts/invest/About-Japan.md","hash":"ec441f13e513ade466c1bd5355f2f6d5f4743315","modified":1584690155227},{"_id":"source/_posts/invest/About-Korea.md","hash":"cdd22037bc96006bbb1d32f8c8a6eb4a01199b04","modified":1584690155230},{"_id":"source/_posts/invest/About-Latin-America.md","hash":"850fc2a729d846c8f9b85d8ac1c8c843fecca63b","modified":1584690155232},{"_id":"source/_posts/invest/About-Middle-East.md","hash":"73004fcda8864718ea40f8252d72fcda1be4332e","modified":1584690155235},{"_id":"source/_posts/invest/About-North-Korea.md","hash":"cda5c1c9a6a5251bdc3f02bdedce1374cf80b309","modified":1584690155237},{"_id":"source/_posts/invest/About-Russia.md","hash":"53a1bbe3ca214f4c3a471dc9a1306b37ec389029","modified":1584690155240},{"_id":"source/_posts/invest/About-South-East-Asia.md","hash":"3cdcab3ec4afd785194aa0c8ff39f62c34e4beca","modified":1584690155242},{"_id":"source/_posts/invest/About-UK.md","hash":"36e5ba5b8e5558ef1bf4b04df5671fe77f3b673b","modified":1584690155245},{"_id":"source/_posts/invest/About-US.md","hash":"d40f29604e5931df1a7e9cf0e43154df7baa2ee8","modified":1584690155247},{"_id":"source/_posts/invest/Something-Usefull.md","hash":"ad6a554fe0b6ddd3aad4f5494b7f0f20a2b9d084","modified":1584690155249},{"_id":"source/_posts/invest/Something-that-irregular.md","hash":"91ddbe925ef861c7265e8b148cf94bb355f1c577","modified":1585206951213},{"_id":"source/_posts/invest/投资失败.md","hash":"211772385d4bc9b1f806afa994b6802c5df07d77","modified":1584690155254},{"_id":"source/_posts/living/2020-should-be-a-tough-year.md","hash":"d6f8ad9e7a5b0ac91f1e4fb480a43def24748313","modified":1584690155258},{"_id":"source/_posts/living/My-Equipment.md","hash":"05e048b2d61405ce689c5756aed89afedf9c73bb","modified":1584690155260},{"_id":"source/_posts/living/上海.md","hash":"864fb0eaedc5eeff484a4b4683e79bd9e0d0907d","modified":1584690155263},{"_id":"source/_posts/living/南柯一梦.md","hash":"7b0ba39c4fd967db9def8d212ebdd23943d113ea","modified":1584690155266},{"_id":"source/_posts/living/最近在忙什么.md","hash":"fdfba56eb60181355e1251167075180a4051178a","modified":1584690155268},{"_id":"source/_posts/living/没事就瞎写点东西，做个小总结.md","hash":"c568a23279682cae653a7448359b710404843cc5","modified":1584690155271},{"_id":"source/_posts/living/生活竟是如此的无趣.md","hash":"1afde6256b1b8d28746deefd582d667fb85bbddc","modified":1584690155273},{"_id":"source/_posts/living/面试失败有感.md","hash":"ba253f6b78240a333d317b41150cfca031d3544c","modified":1584690155275},{"_id":"source/_posts/miniprogram/WeERP小程序后台搭建.md","hash":"97d44e04e92de5a6f1c122d38459f0f2a66d84f2","modified":1584690155279},{"_id":"source/_posts/miniprogram/微信小程序开发（一）.md","hash":"469fdd2b5d33f04d725e16558794017cf1e85452","modified":1584690155282},{"_id":"source/_posts/miniprogram/微信小程序开发（三）.md","hash":"9aa708b936d3a8d248c79523e94f02969413393e","modified":1584690155284},{"_id":"source/_posts/miniprogram/微信小程序开发（二）.md","hash":"a8c9f088ba64217827616f9af6855ebf1461ceb0","modified":1584690155287},{"_id":"source/_posts/miniprogram/首个小程序暂告一段落.md","hash":"854490694d82c7f17259cad979f0add50ced1629","modified":1584690155289},{"_id":"source/_posts/proj/开个新坑-WERP.md","hash":"2f75e675d11d670a4468f0b69e57e62583649fda","modified":1584690155303},{"_id":"source/_posts/read/最近看了微服务相关的书.md","hash":"3dbb4bde0587a190a3b136b6dace60b6128878f4","modified":1584690155308},{"_id":"source/_posts/technique/ASCII码表.md","hash":"897146e8c045ecc81c19fc5827c646df45c7787e","modified":1584690155312},{"_id":"source/_posts/technique/Django-数据库操作.md","hash":"d2060a15fe921c4a2f9fa9cf61ead9866634531a","modified":1584690155315},{"_id":"source/_posts/technique/Java面试题整理-一.md","hash":"06a0b6119facdb861c0ba694592b7cbfeb1cacdd","modified":1584690155318},{"_id":"source/_posts/technique/MYSQL技巧.md","hash":"7476e1d85829caeeb207543ff70aba5108dc310e","modified":1584690155320},{"_id":"source/_posts/technique/Memcached与Redis对比.md","hash":"a0847e53b24b0e3b3e6d6dfd1be6cbd38eb51ef9","modified":1584690155323},{"_id":"source/_posts/technique/TODO.md","hash":"696139f5ca9d38fca35b6d28a9b3e403568212da","modified":1584690155325},{"_id":"source/_posts/technique/oracle数据库-从备份文件恢复.md","hash":"3fe40e2f7ce84330981568acd562c269071f66c5","modified":1584690155329},{"_id":"source/_posts/technique/一道笔试题.md","hash":"bdc6a8ecba2fd408d3a1cdfd595ec826c07ca5d9","modified":1584690155330},{"_id":"source/_posts/technique/利用Cloudflare实现端口映射.md","hash":"7ea1a5715cd849cf9773aea695ff1a7da2271bbd","modified":1584690155333},{"_id":"source/_posts/technique/又一个大坑.md","hash":"bb8207ca8860d52a30ce5a91b72cfbf184b2d3e5","modified":1584690155336},{"_id":"source/_posts/technique/如何实现SS客户端自动切换服务器.md","hash":"438226e69cfb3cc5de47b95a6c6032685e2561fe","modified":1584690155340},{"_id":"source/_posts/technique/数据结构.md","hash":"b61e0abace0f04c8dac48804fc21fd15f1995ac6","modified":1584690155343},{"_id":"source/_posts/technique/记录一下136版本的修改结果.md","hash":"fb672c1c9ca069d897b34728ef2fcdc02863ec66","modified":1584690155346},{"_id":"source/_posts/technique/集合默认大小.md","hash":"8aeccc8b84066d13f268a9452771d5836642e948","modified":1584690155349},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1566792980269},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1566792980269},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1566792980269},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1566792980269},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"058aceceb34eff75207688e76416a2fd499c9c6f","modified":1585269569192},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1566792980269},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"3669d320277e41e3fa08e52cf7837e7ea32ab2cc","modified":1585036134992},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1566792980285},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1566792980285},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1566792980285},{"_id":"themes/landscape/layout/_widget/friends.ejs","hash":"0d8538e6eff5393c01572f4a41726e9d1f66c19e","modified":1584690155367},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1566792980285},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1566792980285},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1566792980285},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1566792980300},{"_id":"themes/landscape/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1566792980316},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1566792980316},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1566792980316},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1566792980332},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1566792980332},{"_id":"source/_posts/mynote/Cloud/Try-on-BCH.md","hash":"d09b83df55f0619f3fcabde72ef60c2017f45f69","modified":1585269372494},{"_id":"source/_posts/mynote/Linux/notes-of-daily-use.md","hash":"af3ec4fadd0165f521dab4e36da7d1a3b6fb2794","modified":1584690155295},{"_id":"source/_posts/mynote/Spring/20190827学习笔记.md","hash":"c1c46c4b363cadd5caff5c5e4a1215fb6b1ae2ff","modified":1584690155300},{"_id":"source/images/特别.png","hash":"c46f5e177e3fa5af1d3a7380c3ac4c1dcb8be521","modified":1569847062923},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1566792980285},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1566792980285},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"0d7f3e49a17e5f72560ba2a74ddbe1cbca92f3af","modified":1572432078857},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1566792980300},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1566792980300},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1566792980300},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1566792980316},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1566792980316},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1566792980316},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1566792980316},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1566792980332},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1566792980332},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1566792980316},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1566792980316},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1566792980316},{"_id":"public/CNAME","hash":"f157a19b965f1f057bd6bad8d44fc49d14534ed2","modified":1585359127902},{"_id":"public/atom.xml","hash":"51fc0815c27629498443361431b025e92cc40d10","modified":1585359127902},{"_id":"public/sitemap.xml","hash":"224d8aa7dc6dfd9536e75fd9f9f10b38d5756abb","modified":1585359127902},{"_id":"public/2020/03/26/chaos/碎碎念/index.html","hash":"c922ba9ccfd3baa5f0747ddfe0bf13fae689ed9a","modified":1585359127902},{"_id":"public/2020/03/26/chaos/什么是隐私/index.html","hash":"ee49c785a41d402449a748748dd56948eb9b012f","modified":1585359127902},{"_id":"public/2020/03/26/mynote/Cloud/Try-on-BCH/index.html","hash":"44d2a06363c5fc194aca55769e77b3b164ad72cc","modified":1585359127902},{"_id":"public/2020/03/13/living/My-Equipment/index.html","hash":"6b3504e03b45354c2503662743840654b64bdd0d","modified":1585359127902},{"_id":"public/2020/03/09/invest/Something-that-irregular/index.html","hash":"abfe804d55e16c56d6bbcb978d1dbda72467c645","modified":1585359127902},{"_id":"public/2020/03/08/invest/Something-Usefull/index.html","hash":"beaffbc240a61ee1afdc942e8b4e8980a09f8e68","modified":1585359127902},{"_id":"public/2020/03/08/invest/About-US/index.html","hash":"93e8f6f31f05327f86368e0e10b367d71bf23e29","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-North-Korea/index.html","hash":"f4294ba6ee0ea798775fa8c3f5c599a6186a3400","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-Latin-America/index.html","hash":"0235ec4a8416eba39ecb069de68b328ebea4d2f7","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-South-East-Asia/index.html","hash":"56a183d135d011d94dcc39de70d6a6424f11b117","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-Africa/index.html","hash":"f77b8572154d386814e49d8058f1f5f8b79f7d68","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-EU/index.html","hash":"0ead3c49932563eaf9b861c72428af3d05fffc80","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-UK/index.html","hash":"6e7a7394b35d9a19810cb1e9cb4c44903401c400","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-German/index.html","hash":"f873537231beea15bd9a0c79b3c861b10956e5b5","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-India/index.html","hash":"c99408b4d0cef8ee6a81af0ca52ae086a0a1dac6","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-Japan/index.html","hash":"a869ddd5e6abfc9d6cf51b3c3b47268c0fef94fe","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-Korea/index.html","hash":"69ad13902135a9b4c8e5a59b42cea447019b81ac","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-China/index.html","hash":"920a4978240687daad142150299bf9f93f9e1962","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-Russia/index.html","hash":"189843ea4e632aa7fbb7bdbcd2ca2199a3ccfcc3","modified":1585359127902},{"_id":"public/2020/02/06/chaos/Something-You-Should-Not-Ignore/index.html","hash":"e8688e8d75f52c8b65878f35980d5570c4b896a7","modified":1585359127902},{"_id":"public/2020/01/20/mynote/Linux/notes-of-daily-use/index.html","hash":"80c52bf3da7dc35ff5d4a4f6d01c16cbd0f32251","modified":1585359127902},{"_id":"public/2020/01/09/chaos/In-The-Midnight/index.html","hash":"666c260c78426912c9b5dce7025da06d547d90b1","modified":1585359127902},{"_id":"public/2020/01/07/chaos/feel-like-to-write-something/index.html","hash":"a56014a48448e8969dd5900566aac75ec5174b07","modified":1585359127902},{"_id":"public/2020/01/04/living/2020-should-be-a-tough-year/index.html","hash":"35540f9c97fcacf24ef0c506a2ae0e378129f103","modified":1585359127902},{"_id":"public/2019/11/24/miniprogram/WeERP小程序后台搭建/index.html","hash":"2cb44c551e1b2d07c6c2d825c7eed767952de77d","modified":1585359127902},{"_id":"public/2019/11/23/miniprogram/首个小程序暂告一段落/index.html","hash":"7e25fae163ad77f5ad119fa693519d7ed6b1ce9d","modified":1585359127902},{"_id":"public/2019/11/20/proj/开个新坑-WERP/index.html","hash":"2fa464abeb2aaa8173d0dc243fef692d96f4dea5","modified":1585359127902},{"_id":"public/2019/11/18/chaos/备案今日过审/index.html","hash":"06eee2d5fd72f1db3dc2f2cf7d2df914bb542b5d","modified":1585359127902},{"_id":"public/2019/11/14/miniprogram/微信小程序开发（三）/index.html","hash":"24947c7fc77d2a98bcaab178d0d916fa6395cdbe","modified":1585359127902},{"_id":"public/2019/11/13/miniprogram/微信小程序开发（二）/index.html","hash":"e7fe6b88e9f2f89f845f92ec2581fefceefeb846","modified":1585359127902},{"_id":"public/2019/11/13/technique/MYSQL技巧/index.html","hash":"ead721aad7c5906a41397b27d01024ed77f3ff04","modified":1585359127902},{"_id":"public/2019/11/10/living/南柯一梦/index.html","hash":"e221666e1b61630c39564db6824c67bda6bb8354","modified":1585359127902},{"_id":"public/2019/11/10/chaos/Adsense-过了封锁期了/index.html","hash":"14790c10f5039f8f72a95964b57a15115dcb6b6d","modified":1585359127902},{"_id":"public/2019/10/30/miniprogram/微信小程序开发（一）/index.html","hash":"a91e793fc467602382bb8d4d905e71321b7e27c7","modified":1585359127902},{"_id":"public/2019/10/22/HackerRank/Day-15-LinkedList/index.html","hash":"7ea2ab98daad4e8be937227c354844d0f7ba8d03","modified":1585359127902},{"_id":"public/2019/10/12/chaos/Starting-Today/index.html","hash":"4ea2d8b6eef2d537f8aa25f74430e95defabcbaa","modified":1585359127902},{"_id":"public/2019/10/08/chaos/Adsense-今天被暂停了/index.html","hash":"1940f26a3febdff21d2cadf77a580ec95132b8ab","modified":1585359127902},{"_id":"public/2019/10/05/chaos/Adsense被暂停投放广告了/index.html","hash":"0b1b60aad9be64c8bdd53d1b6cd1400e50544b46","modified":1585359127902},{"_id":"public/2019/10/04/technique/一道笔试题/index.html","hash":"c7a72f21fa3aa630a7411ba929d60eff5ddf13e2","modified":1585359127902},{"_id":"public/2019/10/04/fun/有用的学习链接/index.html","hash":"ebd7213010d3448e537ffa27db4a7cc015b0e4b5","modified":1585359127902},{"_id":"public/2019/10/03/chaos/无事可写/index.html","hash":"e428f5d6de1e02ba60238ba5c323d6f8aaf4ded1","modified":1585359127902},{"_id":"public/2019/10/01/chaos/观礼有感/index.html","hash":"233ecc278b041c314c51e9f7aa37c3a25736b09c","modified":1585359127902},{"_id":"public/2019/09/30/chaos/看新闻有感/index.html","hash":"6ce0c9230e9fe8bb73c540956798ef7035367406","modified":1585359127902},{"_id":"public/2019/09/29/fun/优秀博客收集/index.html","hash":"bc089cd228699dcba8d27d1134d833b93c4dfae1","modified":1585359127902},{"_id":"public/2019/09/29/technique/Django-数据库操作/index.html","hash":"a274c62b90ac3d1962329851a5d3c2aa2e876131","modified":1585359127902},{"_id":"public/2019/09/28/chaos/跌跌撞撞写博客/index.html","hash":"514df1c257a860a386d929fada88972f6a18f016","modified":1585359127902},{"_id":"public/2019/09/21/technique/oracle数据库-从备份文件恢复/index.html","hash":"3e30cc6f7034b925741af99224974a1e1647671e","modified":1585359127902},{"_id":"public/2019/09/21/living/上海/index.html","hash":"16dada524b8ff303743b5de5c8a3eb1a3459f79d","modified":1585359127902},{"_id":"public/2019/09/10/read/最近看了微服务相关的书/index.html","hash":"24cfa510e09984e393f0a1488a551525ebdd4f58","modified":1585359127902},{"_id":"public/2019/08/28/invest/投资失败/index.html","hash":"1539fd533a9401f2fbdbdd63a737a1fa85f98f22","modified":1585359127902},{"_id":"public/2019/08/27/living/面试失败有感/index.html","hash":"5ca3a2302c0b2bdf2c75361a260d3dca4fd1d69c","modified":1585359127902},{"_id":"public/2019/08/27/living/最近在忙什么/index.html","hash":"035c1ac9d593b7a387ed4d1963c4417f8bbf2c83","modified":1585359127902},{"_id":"public/2019/08/27/technique/又一个大坑/index.html","hash":"c2066b42b73011564b2f335ee487a133186b7e60","modified":1585359127902},{"_id":"public/2019/07/29/living/没事就瞎写点东西，做个小总结/index.html","hash":"ab5ff2383a6291bbdc0e96e88c190ca266b08c6f","modified":1585359127902},{"_id":"public/2019/07/19/gone/恢复：一年前的踩坑记录/index.html","hash":"7dfec02fe5f78b820ac7edaacff80284a8d9e3f3","modified":1585359127902},{"_id":"public/1970/01/01/living/生活竟是如此的无趣/index.html","hash":"6ac5411ac4495e707c0066883b911382bc05276f","modified":1585359127902},{"_id":"public/archives/index.html","hash":"d15bbfe382a6a1c93672ef3cc90ae4cdf081a534","modified":1585359127902},{"_id":"public/archives/page/2/index.html","hash":"2fbc628de2b1667c1e637a535d16e8235cc230d1","modified":1585359127902},{"_id":"public/archives/page/3/index.html","hash":"c99b68587e131b78498c43812ad5762dc212c02a","modified":1585359127902},{"_id":"public/archives/page/4/index.html","hash":"5e80eab4ef80c9c0b66d40c8c1905abd9df79359","modified":1585359127902},{"_id":"public/archives/page/5/index.html","hash":"1bce64ea60237b272435d47583e5c269b74273d1","modified":1585359127902},{"_id":"public/archives/page/6/index.html","hash":"206e96cbc863005c1eb5589622f98b598772c836","modified":1585359127902},{"_id":"public/archives/page/7/index.html","hash":"372da7bcc4841d04d1f971570a9e3cb7ed0613ad","modified":1585359127902},{"_id":"public/archives/page/8/index.html","hash":"07f5b36a64b25759b8cd645c6453ce61eeb17f93","modified":1585359127902},{"_id":"public/archives/page/9/index.html","hash":"8d3001140d3240148a95dfd99743fda768b997a8","modified":1585359127902},{"_id":"public/archives/page/10/index.html","hash":"3c04050ce905d3c39559f93db4f216e5d651901f","modified":1585359127902},{"_id":"public/archives/page/11/index.html","hash":"1cd86cfb545759ce081965b8b84f54fbe94fd393","modified":1585359127902},{"_id":"public/archives/page/12/index.html","hash":"744ecb6433fcc7149b181414fae68927f2d477dd","modified":1585359127902},{"_id":"public/archives/page/13/index.html","hash":"33f34bb0a1099d9cfe425b2842d826e8bd49c77f","modified":1585359127902},{"_id":"public/archives/page/14/index.html","hash":"283abf7522d5971ab9d9e4012c2b47d2c37b83af","modified":1585359127902},{"_id":"public/archives/page/15/index.html","hash":"cfb79095e651c660fbdc6f0b96edb8b5d98c3466","modified":1585359127902},{"_id":"public/archives/page/16/index.html","hash":"c80fb71c62037d69d75c4b9e11dcab5ecc4ff24a","modified":1585359127902},{"_id":"public/archives/1970/index.html","hash":"3c969e00773cf39e4e31f716077f1dadcf1df9d4","modified":1585359127902},{"_id":"public/archives/1970/01/index.html","hash":"64ffe20ba598efaeb215fb75cdedf6569fb4e2e8","modified":1585359127902},{"_id":"public/archives/2019/index.html","hash":"aeb2f1657cb603e524820b9bf4dd0115429ba43f","modified":1585359127902},{"_id":"public/archives/2019/page/2/index.html","hash":"76a2a9b93d08779b44325845309f90b8459938ee","modified":1585359127902},{"_id":"public/archives/2019/page/3/index.html","hash":"abd44f8dab2ac1c4c03898903fc116a1caa11e6b","modified":1585359127902},{"_id":"public/archives/2019/page/4/index.html","hash":"41cc27220b91304dc8b0d5ab4e3d24c1b357c82d","modified":1585359127902},{"_id":"public/archives/2019/page/5/index.html","hash":"661150566197a972caaeb291b8ea8fb612062d1b","modified":1585359127902},{"_id":"public/archives/2019/page/6/index.html","hash":"5688a8c0ab092875fef375f9113faa94c4175358","modified":1585359127902},{"_id":"public/archives/2019/page/7/index.html","hash":"5a826918e97dd9721b7558f4c07bfbf725235ff1","modified":1585359127902},{"_id":"public/archives/2019/page/8/index.html","hash":"f5d50b736dc9817a6ad73a077d85a20b9a9e22d9","modified":1585359127902},{"_id":"public/archives/2019/page/9/index.html","hash":"f78ed922ce4c2ceed9dd7b8e2de13d91be68ba2f","modified":1585359127902},{"_id":"public/archives/2019/page/10/index.html","hash":"126b55b903611c1b87d501628c7d22a9f8319f9a","modified":1585359127902},{"_id":"public/archives/2019/07/index.html","hash":"9e75a96245423d1c73daf7e95ecd4f2650da5b13","modified":1585359127902},{"_id":"public/archives/2019/08/index.html","hash":"1c79415936378699222398f2a4ad91124885f61a","modified":1585359127902},{"_id":"public/archives/2019/09/index.html","hash":"0280caa128d5c0b1577687780e44fefd2fb18499","modified":1585359127902},{"_id":"public/archives/2019/09/page/2/index.html","hash":"f2e7102b8b81404db6958d4366b5a58f530f0d0d","modified":1585359127902},{"_id":"public/archives/2019/10/index.html","hash":"b462ed0fdd43e0ae646e3375f4d1b6746de6132b","modified":1585359127902},{"_id":"public/archives/2019/10/page/2/index.html","hash":"e50a34a93a3f04957774b180f0a5f0f7d6949aa1","modified":1585359127902},{"_id":"public/archives/2019/10/page/3/index.html","hash":"7f6a17baed20aa9e87ba0d6bcd4042f6e2e2c39d","modified":1585359127902},{"_id":"public/archives/2019/10/page/4/index.html","hash":"bbf67d5f2eaa4a0e30a27e2b667aab884ddb6e23","modified":1585359127902},{"_id":"public/archives/2019/10/page/5/index.html","hash":"877af165d31a8826f9234f52dd71879d2e80f89d","modified":1585359127902},{"_id":"public/archives/2019/11/index.html","hash":"5be6d5f1c8ebe8ee648e998afc5596867ae9265b","modified":1585359127902},{"_id":"public/archives/2019/11/page/2/index.html","hash":"25a9d664a504d4c86fd7ce6eef3956c338479c62","modified":1585359127902},{"_id":"public/archives/2019/11/page/3/index.html","hash":"97d7e74f93231d8ed106fb4f6f30a4e65162a438","modified":1585359127902},{"_id":"public/archives/2019/12/index.html","hash":"b18a79c2bb93bb592ca8d373fd52a28d71bd85b2","modified":1585359127902},{"_id":"public/archives/2020/index.html","hash":"3901cff7fcce3655020a3d1f6a194b014422f13a","modified":1585359127902},{"_id":"public/archives/2020/page/2/index.html","hash":"8a8b8e631c512413751e28d34719c31db1d686ba","modified":1585359127902},{"_id":"public/archives/2020/page/3/index.html","hash":"383724faf49e95ac2a0f0b4472a30e7f3a16eeaf","modified":1585359127902},{"_id":"public/archives/2020/page/4/index.html","hash":"cb6b72a677259b74b2ab5077887cbd4320d6f115","modified":1585359127902},{"_id":"public/archives/2020/page/5/index.html","hash":"31942c74629d2e292e9637fb709151e53d15dcdd","modified":1585359127902},{"_id":"public/archives/2020/01/index.html","hash":"c0681df1e6c2ba39142059992ef13fe044be34c9","modified":1585359127902},{"_id":"public/archives/2020/02/index.html","hash":"0a87dc3468445d93f2a71089d0c31305f4a23b8a","modified":1585359127902},{"_id":"public/archives/2020/03/index.html","hash":"fb95671f996d8fa3a26e26aa6064fbc5a9f28a13","modified":1585359127902},{"_id":"public/archives/2020/03/page/2/index.html","hash":"2d4cf30b0617bb36a7d9e4cc6e783ccb71dad1b0","modified":1585359127902},{"_id":"public/archives/2020/03/page/3/index.html","hash":"17ab1ec4190efa9db0e2d707252606b2b342937b","modified":1585359127902},{"_id":"public/archives/2020/03/page/4/index.html","hash":"735a31cebe7fd9ab5b020d4c0bf324e47d8fd7bc","modified":1585359127902},{"_id":"public/page/2/index.html","hash":"9320ffc0f35e6a14b8d4316edf4f1707606ee6e4","modified":1585359127902},{"_id":"public/page/3/index.html","hash":"ee8b8277eee0a3d78c5b0d4593e9a3feef68d0f7","modified":1585359127902},{"_id":"public/page/4/index.html","hash":"f9d13a6460020940cda4dc84d91138b4d133a0ca","modified":1585359127902},{"_id":"public/page/16/index.html","hash":"62b92dda525c64dac2f99b7e6219fc622ffe8e1a","modified":1585359127902},{"_id":"public/tags/hackerrank/index.html","hash":"f7e81a09fffe0918eb95d1fd7222eccc2b05f7e0","modified":1585359127902},{"_id":"public/tags/hackerrank/page/2/index.html","hash":"99b74064b3bea23f2da197f3a9b7495ac7bd033a","modified":1585359127902},{"_id":"public/tags/算法-hackerrank/index.html","hash":"870dcd3c37ad65cbc3f985a46df52f5a34796f12","modified":1585359127902},{"_id":"public/tags/杂事/index.html","hash":"122484122379a2cb2a655df557c78b45d2b82801","modified":1585359127902},{"_id":"public/tags/杂事/page/2/index.html","hash":"cac0ef9135eb05b0119a7f1baa37a39c870034d1","modified":1585359127902},{"_id":"public/tags/chaos/index.html","hash":"16db73419ccec28ad415eedfc6ac3db3443e08bd","modified":1585359127902},{"_id":"public/tags/有意的东西/index.html","hash":"7de7434b8e7042e1b490f4142023f523fcecebc5","modified":1585359127902},{"_id":"public/tags/有意思的东西/index.html","hash":"b6d1a9f2ae275e9ee5c8f2c88d1c7c0a9a44e792","modified":1585359127902},{"_id":"public/tags/过去/index.html","hash":"745391d6e2a97d88396c352f6678a7806055b616","modified":1585359127902},{"_id":"public/tags/invest/index.html","hash":"033b35c8904b27488a82385139566a3c51a88ef9","modified":1585359127902},{"_id":"public/tags/OPEC/index.html","hash":"ea35a213c2f1b5dc744db3593641ebc8306db8a7","modified":1585359127902},{"_id":"public/tags/investment/index.html","hash":"818954acec5a76782339f11e6c1316a2b009e3e1","modified":1585359127902},{"_id":"public/tags/小钱钱/index.html","hash":"44d2e89b11a6d118ade2f9cb63ae3cbe556f11e7","modified":1585359127902},{"_id":"public/tags/生活/index.html","hash":"b280009ba7e561e291c61e8ba5c38fe4e2e2e0fd","modified":1585359127902},{"_id":"public/tags/生活/page/2/index.html","hash":"273b0c43f3ae7661c6e4821fa25cbd0715ce19c6","modified":1585359127902},{"_id":"public/tags/life/index.html","hash":"828dd34641d4205cc925caf515bade79dabc003f","modified":1585359127902},{"_id":"public/tags/小程序/index.html","hash":"915d83f695fca8e8b006a319dc1dd1c966ff9756","modified":1585359127902},{"_id":"public/tags/项目/index.html","hash":"70f197e23cf186f7d38c1b3bd8279e44e1bc7b1b","modified":1585359127902},{"_id":"public/tags/读后感/index.html","hash":"e46785fc6e5cb143746591fc9a9b8ac7120afadd","modified":1585359127902},{"_id":"public/tags/cheatsheet/index.html","hash":"75045e198d055dc63e4cf9bef257bd88881fe645","modified":1585359127902},{"_id":"public/tags/技术/index.html","hash":"9a5bca92376c81476ce61cd792fe1318bcc5a706","modified":1585359127902},{"_id":"public/tags/技术/page/2/index.html","hash":"27782efad9a28741230c63de49cc95c3152ae917","modified":1585359127902},{"_id":"public/tags/技术/page/3/index.html","hash":"6da6a87ced73019f21dbe0ebfd69732587b41083","modified":1585359127902},{"_id":"public/tags/坑/index.html","hash":"4d97e990c5a398dd261bc0b4ed22e90ea1380d4d","modified":1585359127902},{"_id":"public/tags/Cloud/index.html","hash":"e1b7109a9ea394c7a0b9b52afc6caf3927ac82d1","modified":1585359127902},{"_id":"public/tags/mynotes-Linux/index.html","hash":"31244b7e131de493aa5a1e59500c19dc0df542e2","modified":1585359127902},{"_id":"public/tags/学习笔记/index.html","hash":"8731e63f6155265f5002f04544b15d444a799e77","modified":1585359127902},{"_id":"public/2020/03/07/invest/About-Middle-East/index.html","hash":"a049e2cf40f78f8097befa5096342e43c620fa96","modified":1585359127902},{"_id":"public/2019/12/04/technique/Memcached与Redis对比/index.html","hash":"030f9d9e106877ef58498e56ef31045dc5a9e9c3","modified":1585359127902},{"_id":"public/2019/11/15/technique/如何实现SS客户端自动切换服务器/index.html","hash":"dd6b8e65aee2e2aad4175e1f04351ad2e9266811","modified":1585359127902},{"_id":"public/2019/11/13/technique/TODO/index.html","hash":"dca2cb1e7e8d105f6260647b0f6c369d74bbeb8e","modified":1585359127902},{"_id":"public/2019/10/28/technique/利用Cloudflare实现端口映射/index.html","hash":"48ba055ce90e874cd7d94a363f33902e7ba8891c","modified":1585359127902},{"_id":"public/2019/10/14/technique/集合默认大小/index.html","hash":"f12b0b793c56c700f3c18c47b160b86dc8298845","modified":1585359127902},{"_id":"public/2019/10/14/HackerRank/Day-14-Scope/index.html","hash":"374bcdec3f87871de27af87f840d7a3243045d62","modified":1585359127902},{"_id":"public/2019/10/13/HackerRank/Day-13-Abstract-Class/index.html","hash":"83624f21ab18caab1db9b55fcc5e5ee13d39b2d5","modified":1585359127902},{"_id":"public/2019/10/12/HackerRank/Day-12-Inheritance/index.html","hash":"70523d6a79468134873f6f3e4d1f375fa1bd4150","modified":1585359127902},{"_id":"public/2019/10/11/HackerRank/Day-11-2D-Arrays/index.html","hash":"486f4db77927e0ceb4ad164a36703677b36f8837","modified":1585359127902},{"_id":"public/2019/10/10/HackerRank/Day-10-Binary-Numbers/index.html","hash":"002a50564b5dddf6df0b0fc16763ee999e375422","modified":1585359127902},{"_id":"public/2019/10/08/HackerRank/Days-9-Recursion/index.html","hash":"632e6ece86ecbfee2e34951ca45d326546becfee","modified":1585359127902},{"_id":"public/2019/10/08/HackerRank/Day-8-Phone-a-Friend/index.html","hash":"e525052b96646d646d7fc0bcf16f1ac3f4cf11fb","modified":1585359127902},{"_id":"public/2019/10/07/HackerRank/Day-7-Arrays/index.html","hash":"241efd1a3df3ab7cc4287acf661fa0ceb1ce24f4","modified":1585359127902},{"_id":"public/2019/10/07/technique/ASCII码表/index.html","hash":"e6fba105b1832396b30ab8ab691c35a8854281d3","modified":1585359127902},{"_id":"public/2019/10/07/HackerRank/奇偶分组——HackerRank/index.html","hash":"1cb3afdd5d3d703d73ec6dd6f995b0cbb2022c18","modified":1585359127902},{"_id":"public/2019/09/29/technique/数据结构/index.html","hash":"dad097756877a9c73b42bc9498c2fd09a671153d","modified":1585359127902},{"_id":"public/2019/09/22/technique/Java面试题整理-一/index.html","hash":"8d50c3ec8f2714278abbaf3d86073cfd201334af","modified":1585359127902},{"_id":"public/2019/08/27/mynote/Spring/20190827学习笔记/index.html","hash":"c867bd9ea53ba07302121b3d9f64972f353d9912","modified":1585359127902},{"_id":"public/2019/07/28/technique/记录一下136版本的修改结果/index.html","hash":"88f767ef7f78ce6f0aab548e89a2b49c130d042c","modified":1585359127902},{"_id":"public/index.html","hash":"748c428d2678c087dec793ae5e7841d6f80cf042","modified":1585359127902},{"_id":"public/page/5/index.html","hash":"7300857bf35eac9f6e2f024d4b706ef42f0b9073","modified":1585359127902},{"_id":"public/page/6/index.html","hash":"90a1117e7d9d8092d1c02e163c2db3b7b09b48ab","modified":1585359127902},{"_id":"public/page/7/index.html","hash":"93057ad2d9b96e20e5db68d16c45468aa403074c","modified":1585359127902},{"_id":"public/page/8/index.html","hash":"6a8b844b25180bfa2c10d154659eca0184a3d766","modified":1585359127902},{"_id":"public/page/9/index.html","hash":"9d86eb5c980a3850bdbf304af2cc50502855e74a","modified":1585359127902},{"_id":"public/page/10/index.html","hash":"c1a32e6edda4860a465826ae784ec6b1d101432b","modified":1585359127902},{"_id":"public/page/11/index.html","hash":"6440e4aeb60c82e7d207ff04c0f260fc41b014ef","modified":1585359127902},{"_id":"public/page/12/index.html","hash":"2099b9a4b922074d2fe5235be76986636365cb31","modified":1585359127902},{"_id":"public/page/13/index.html","hash":"9f269277d0466a901a1fe7fdf1f24353273feafc","modified":1585359127902},{"_id":"public/page/14/index.html","hash":"86bc5419e986399f104cdc89f7dbea536f70bc43","modified":1585359127902},{"_id":"public/page/15/index.html","hash":"f526300a4ee1b017334e5ab3e1c77cea0a9532a7","modified":1585359127902},{"_id":"public/ads.txt","hash":"a7e5365fe9b7830a119fed5b7736f68bd7756499","modified":1585359127902},{"_id":"public/images/day13.1.png","hash":"a70b16c0415049254f8d1594c778532fc399be61","modified":1585359127902},{"_id":"public/images/debug.log","hash":"ed9d1fcef717798893fe8a888c6e748094661519","modified":1585359127902},{"_id":"public/images/inner.png","hash":"7154712e8f9396dae8ede9609c76aec513a5b722","modified":1585359127902},{"_id":"public/images/out.png","hash":"ce8ffca6056d047fa4ef61000be4390f769daf5f","modified":1585359127902},{"_id":"public/images/service_suspended.png","hash":"c10419b65e7b1d2a5d91548f3f30a577d3dc897c","modified":1585359127902},{"_id":"public/images/suspend.png","hash":"36e473f64199694b226e47002954dcb42b8224a6","modified":1585359127902},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1585359127902},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1585359127902},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1585359127902},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1585359127902},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1585359127902},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1585359127902},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1585359127902},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1585359127902},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1585359127902},{"_id":"public/assets/js/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1585359127902},{"_id":"public/assets/css/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1585359127902},{"_id":"public/assets/js/Meting.min.js","hash":"5e3fda3405bf0ff3a8323613bd91df7d9dbe8a1f","modified":1585359127902},{"_id":"public/images/15.2.png","hash":"bc30952af7b7b5e444148a29be9d133c95532405","modified":1585359127902},{"_id":"public/images/day13.2.png","hash":"f5daa117edda7239bbe3f418ce9da269873020e8","modified":1585359127902},{"_id":"public/images/day14.2.png","hash":"06dd7979957bd4d26e23ff72c2e92a45b6cb3765","modified":1585359127902},{"_id":"public/images/day12.1.png","hash":"a4f6d30917be7f02be5ab47ba00166b84380ab71","modified":1585359127902},{"_id":"public/images/day12.2.png","hash":"93a5b07f021ed32074d60bdc028b4e2aaef58d15","modified":1585359127902},{"_id":"public/images/day14.1.png","hash":"fad08e9e4d35e8b35fe3345c1a6e798abcb624a8","modified":1585359127902},{"_id":"public/images/day15.1.png","hash":"24b86bea8e35223bef7dd65ac27b83bef3cc412b","modified":1585359127902},{"_id":"public/images/笔试题.png","hash":"f2f0ff2faaa57581c616834f229acd6f5cfe056c","modified":1585359127902},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1585359127902},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1585359127902},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1585359127902},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1585359127902},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1585359127902},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1585359127902},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1585359127902},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1585359127902},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1585359127902},{"_id":"public/css/style.css","hash":"570f3b29b2ebf69baf907c63d52d8237906d2444","modified":1585359127902},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1585359127902},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1585359127902},{"_id":"public/images/pic.png","hash":"4747064555bd53b8df54b6cc1e2a6ab60b479aa8","modified":1585359127902},{"_id":"public/images/接见.png","hash":"dcfd21b33d71011a9cecf98586dce2a83e4c66a0","modified":1585359127902},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1585359127902},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1585359127902},{"_id":"public/images/特别.png","hash":"c46f5e177e3fa5af1d3a7380c3ac4c1dcb8be521","modified":1585359127902}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Day 10 Binary Numbers","date":"2019-10-10T04:03:48.000Z","keywords":null,"description":null,"_content":"\n输入一个正整数，转为二进制将二进制中连续的1的个数的最大值求出来。\n\n**Task**\nGiven a base-10 integer,N , convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1's in N's binary representation.\n\n\n\n<!--more-->\n\n\n\n```java\npackage com.luopandeng;\n\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/10:11:43\n */\n\n\npublic class BinaryNumbers {\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        String s = Integer.toBinaryString(n);\n        String[] split = s.split(\"0\");\n        HashSet<Integer> set = new HashSet<>();\n        for (int i = 0; i < split.length; i++) {\n            if (split[i]!=\"\"&&!split[i].equals(\"\")) {\n                set.add(Integer.valueOf(split[i].length()));\n            }\n        }\n        Integer max = Collections.max(set);\n        System.out.println(max);\n        scanner.close();\n    }\n}\n\n```\n\n","source":"_posts/HackerRank/Day-10-Binary-Numbers.md","raw":"---\ntitle: Day 10 Binary Numbers\ndate: 2019-10-10 12:03:48\ntags: hackerrank\nkeywords: \ndescription: \n---\n\n输入一个正整数，转为二进制将二进制中连续的1的个数的最大值求出来。\n\n**Task**\nGiven a base-10 integer,N , convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1's in N's binary representation.\n\n\n\n<!--more-->\n\n\n\n```java\npackage com.luopandeng;\n\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/10:11:43\n */\n\n\npublic class BinaryNumbers {\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        String s = Integer.toBinaryString(n);\n        String[] split = s.split(\"0\");\n        HashSet<Integer> set = new HashSet<>();\n        for (int i = 0; i < split.length; i++) {\n            if (split[i]!=\"\"&&!split[i].equals(\"\")) {\n                set.add(Integer.valueOf(split[i].length()));\n            }\n        }\n        Integer max = Collections.max(set);\n        System.out.println(max);\n        scanner.close();\n    }\n}\n\n```\n\n","slug":"HackerRank/Day-10-Binary-Numbers","published":1,"updated":"2019-10-10T14:56:36.085Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw647000098ki114kak73","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>输入一个正整数，转为二进制将二进制中连续的1的个数的最大值求出来。</p>\n<p><strong>Task</strong><br>Given a base-10 integer,N , convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1’s in N’s binary representation.</p>\n<a id=\"more\"></a>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/10:11:43</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryNumbers</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = scanner.nextInt();</span><br><span class=\"line\">        scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">        String s = Integer.toBinaryString(n);</span><br><span class=\"line\">        String[] split = s.split(<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">        HashSet&lt;Integer&gt; set = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; split.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (split[i]!=<span class=\"string\">\"\"</span>&amp;&amp;!split[i].equals(<span class=\"string\">\"\"</span>)) &#123;</span><br><span class=\"line\">                set.add(Integer.valueOf(split[i].length()));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Integer max = Collections.max(set);</span><br><span class=\"line\">        System.out.println(max);</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>输入一个正整数，转为二进制将二进制中连续的1的个数的最大值求出来。</p>\n<p><strong>Task</strong><br>Given a base-10 integer,N , convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1’s in N’s binary representation.</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/10:11:43</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryNumbers</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = scanner.nextInt();</span><br><span class=\"line\">        scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">        String s = Integer.toBinaryString(n);</span><br><span class=\"line\">        String[] split = s.split(<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">        HashSet&lt;Integer&gt; set = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; split.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (split[i]!=<span class=\"string\">\"\"</span>&amp;&amp;!split[i].equals(<span class=\"string\">\"\"</span>)) &#123;</span><br><span class=\"line\">                set.add(Integer.valueOf(split[i].length()));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Integer max = Collections.max(set);</span><br><span class=\"line\">        System.out.println(max);</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Day 11 2D Arrays","date":"2019-10-11T01:48:19.000Z","keywords":null,"description":null,"_content":"\n**Context**\nGiven a 6 * 6 *2D Array*, A:\n\n```\n1 1 1 0 0 0\n0 1 0 0 0 0\n1 1 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n```\n\nWe define an hourglass in  A to be a subset of values with indices falling in this pattern in A's graphical representation:\n\n```\na b c\n  d\ne f g\n```\n\nThere are  16 hourglasses in A, and an *hourglass sum* is the sum of an hourglass' values.\n\n**Task**\nCalculate the hourglass sum for every hourglass in A, then print the *maximum* hourglass sum.\n\n\n\n<!--more-->\n\n\n\n```java\npackage com.luopandeng.hackerrank;\n\nimport java.util.*;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/11:10:03\n */\n\n\npublic class Day10 {\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int[][] arr = new int[6][6];\n        for (int i = 0; i < 6; i++) {\n            String[] arrRowItems = scanner.nextLine().split(\" \");\n            scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n            for (int j = 0; j < 6; j++) {\n                int arrItem = Integer.parseInt(arrRowItems[j]);\n                arr[i][j] = arrItem;\n            }\n        }\n        HashSet<Integer> result = new HashSet<>();\n        for (int i = 0; i < arr.length-2; i++) {\n            for (int j = 0; j < arr[i].length-2; j++) {\n                //顶\n                int top = arr[i][j] + arr[i][j+1] + arr[i][j+2];\n//                System.out.println(top);\n                int mid = arr[i + 1][j + 1];\n//                System.out.println(mid);\n                int bottom = arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2];\n                result.add(top+mid+bottom);\n//                System.out.println(bottom+top+mid);\n            }\n        }\n        System.out.println(Collections.max(result));\n        scanner.close();\n    }\n}\n\n```\n\n\n\nMy solution is not good. Perhaps there are some smart way to solve it.\n\n\n\nBelow is a another solution from others.\n\n```java\nimport java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    private static final int _MAX = 6; // size of matrix\n    private static final int _OFFSET = 2; // hourglass width\n    private static int matrix[][] = new int[_MAX][_MAX];\n    private static int maxHourglass = -63; // initialize to lowest possible sum (-9 x 7)\n    \n    /** Given a starting index for an hourglass, sets maxHourglass\n    *   @param i row \n    *   @param j column \n    **/\n    private static void hourglass(int i, int j){\n        int tmp = 0; // current hourglass sum\n        for(int k = j; k <= j + _OFFSET; k++){\n            tmp += matrix[i][k]; // top 3 elements\n            tmp += matrix[i + _OFFSET][k]; // bottom 3 elements\n        }\n        tmp += matrix[i + 1][j + 1]; // middle element\n        \n        if(maxHourglass < tmp){\n            maxHourglass = tmp;\n        }\n    }\n\n    public static void main(String[] args) {\n        // read inputs\n        Scanner scan = new Scanner(System.in); \n        for(int i=0; i < _MAX; i++){\n            for(int j=0; j < _MAX; j++){\n                matrix[i][j] = scan.nextInt();\n            }\n        }\n        scan.close();\n        \n        // find maximum hourglass\n        for(int i=0; i < _MAX - _OFFSET; i++){\n            for(int j=0; j < _MAX - _OFFSET; j++){\n                hourglass(i, j);\n            }\n        }\n        \n        // print maximum hourglass\n        System.out.println(maxHourglass);\n    }\n}\n```\n\n","source":"_posts/HackerRank/Day-11-2D-Arrays.md","raw":"---\ntitle: Day 11 2D Arrays\ndate: 2019-10-11 09:48:19\ntags: hackerrank\nkeywords:\ndescription:\n---\n\n**Context**\nGiven a 6 * 6 *2D Array*, A:\n\n```\n1 1 1 0 0 0\n0 1 0 0 0 0\n1 1 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n```\n\nWe define an hourglass in  A to be a subset of values with indices falling in this pattern in A's graphical representation:\n\n```\na b c\n  d\ne f g\n```\n\nThere are  16 hourglasses in A, and an *hourglass sum* is the sum of an hourglass' values.\n\n**Task**\nCalculate the hourglass sum for every hourglass in A, then print the *maximum* hourglass sum.\n\n\n\n<!--more-->\n\n\n\n```java\npackage com.luopandeng.hackerrank;\n\nimport java.util.*;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/11:10:03\n */\n\n\npublic class Day10 {\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int[][] arr = new int[6][6];\n        for (int i = 0; i < 6; i++) {\n            String[] arrRowItems = scanner.nextLine().split(\" \");\n            scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n            for (int j = 0; j < 6; j++) {\n                int arrItem = Integer.parseInt(arrRowItems[j]);\n                arr[i][j] = arrItem;\n            }\n        }\n        HashSet<Integer> result = new HashSet<>();\n        for (int i = 0; i < arr.length-2; i++) {\n            for (int j = 0; j < arr[i].length-2; j++) {\n                //顶\n                int top = arr[i][j] + arr[i][j+1] + arr[i][j+2];\n//                System.out.println(top);\n                int mid = arr[i + 1][j + 1];\n//                System.out.println(mid);\n                int bottom = arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2];\n                result.add(top+mid+bottom);\n//                System.out.println(bottom+top+mid);\n            }\n        }\n        System.out.println(Collections.max(result));\n        scanner.close();\n    }\n}\n\n```\n\n\n\nMy solution is not good. Perhaps there are some smart way to solve it.\n\n\n\nBelow is a another solution from others.\n\n```java\nimport java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    private static final int _MAX = 6; // size of matrix\n    private static final int _OFFSET = 2; // hourglass width\n    private static int matrix[][] = new int[_MAX][_MAX];\n    private static int maxHourglass = -63; // initialize to lowest possible sum (-9 x 7)\n    \n    /** Given a starting index for an hourglass, sets maxHourglass\n    *   @param i row \n    *   @param j column \n    **/\n    private static void hourglass(int i, int j){\n        int tmp = 0; // current hourglass sum\n        for(int k = j; k <= j + _OFFSET; k++){\n            tmp += matrix[i][k]; // top 3 elements\n            tmp += matrix[i + _OFFSET][k]; // bottom 3 elements\n        }\n        tmp += matrix[i + 1][j + 1]; // middle element\n        \n        if(maxHourglass < tmp){\n            maxHourglass = tmp;\n        }\n    }\n\n    public static void main(String[] args) {\n        // read inputs\n        Scanner scan = new Scanner(System.in); \n        for(int i=0; i < _MAX; i++){\n            for(int j=0; j < _MAX; j++){\n                matrix[i][j] = scan.nextInt();\n            }\n        }\n        scan.close();\n        \n        // find maximum hourglass\n        for(int i=0; i < _MAX - _OFFSET; i++){\n            for(int j=0; j < _MAX - _OFFSET; j++){\n                hourglass(i, j);\n            }\n        }\n        \n        // print maximum hourglass\n        System.out.println(maxHourglass);\n    }\n}\n```\n\n","slug":"HackerRank/Day-11-2D-Arrays","published":1,"updated":"2019-10-11T06:01:41.873Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64i000198kigw1ybhzu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><strong>Context</strong><br>Given a 6 * 6 <em>2D Array</em>, A:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 1 1 0 0 0</span><br><span class=\"line\">0 1 0 0 0 0</span><br><span class=\"line\">1 1 1 0 0 0</span><br><span class=\"line\">0 0 0 0 0 0</span><br><span class=\"line\">0 0 0 0 0 0</span><br><span class=\"line\">0 0 0 0 0 0</span><br></pre></td></tr></table></figure>\n\n<p>We define an hourglass in  A to be a subset of values with indices falling in this pattern in A’s graphical representation:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a b c</span><br><span class=\"line\">  d</span><br><span class=\"line\">e f g</span><br></pre></td></tr></table></figure>\n\n<p>There are  16 hourglasses in A, and an <em>hourglass sum</em> is the sum of an hourglass’ values.</p>\n<p><strong>Task</strong><br>Calculate the hourglass sum for every hourglass in A, then print the <em>maximum</em> hourglass sum.</p>\n<a id=\"more\"></a>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng.hackerrank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/11:10:03</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Day10</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">6</span>][<span class=\"number\">6</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">            String[] arrRowItems = scanner.nextLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">6</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> arrItem = Integer.parseInt(arrRowItems[j]);</span><br><span class=\"line\">                arr[i][j] = arrItem;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        HashSet&lt;Integer&gt; result = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length-<span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arr[i].length-<span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//顶</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> top = arr[i][j] + arr[i][j+<span class=\"number\">1</span>] + arr[i][j+<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"comment\">//                System.out.println(top);</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> mid = arr[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">//                System.out.println(mid);</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> bottom = arr[i+<span class=\"number\">2</span>][j] + arr[i+<span class=\"number\">2</span>][j+<span class=\"number\">1</span>] + arr[i+<span class=\"number\">2</span>][j+<span class=\"number\">2</span>];</span><br><span class=\"line\">                result.add(top+mid+bottom);</span><br><span class=\"line\"><span class=\"comment\">//                System.out.println(bottom+top+mid);</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(Collections.max(result));</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>My solution is not good. Perhaps there are some smart way to solve it.</p>\n<p>Below is a another solution from others.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.regex.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> _MAX = <span class=\"number\">6</span>; <span class=\"comment\">// size of matrix</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> _OFFSET = <span class=\"number\">2</span>; <span class=\"comment\">// hourglass width</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> matrix[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[_MAX][_MAX];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> maxHourglass = -<span class=\"number\">63</span>; <span class=\"comment\">// initialize to lowest possible sum (-9 x 7)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/** Given a starting index for an hourglass, sets maxHourglass</span></span><br><span class=\"line\"><span class=\"comment\">    *   <span class=\"doctag\">@param</span> i row </span></span><br><span class=\"line\"><span class=\"comment\">    *   <span class=\"doctag\">@param</span> j column </span></span><br><span class=\"line\"><span class=\"comment\">    **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">hourglass</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tmp = <span class=\"number\">0</span>; <span class=\"comment\">// current hourglass sum</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = j; k &lt;= j + _OFFSET; k++)&#123;</span><br><span class=\"line\">            tmp += matrix[i][k]; <span class=\"comment\">// top 3 elements</span></span><br><span class=\"line\">            tmp += matrix[i + _OFFSET][k]; <span class=\"comment\">// bottom 3 elements</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tmp += matrix[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>]; <span class=\"comment\">// middle element</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(maxHourglass &lt; tmp)&#123;</span><br><span class=\"line\">            maxHourglass = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// read inputs</span></span><br><span class=\"line\">        Scanner scan = <span class=\"keyword\">new</span> Scanner(System.in); </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i &lt; _MAX; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j &lt; _MAX; j++)&#123;</span><br><span class=\"line\">                matrix[i][j] = scan.nextInt();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// find maximum hourglass</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i &lt; _MAX - _OFFSET; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j &lt; _MAX - _OFFSET; j++)&#123;</span><br><span class=\"line\">                hourglass(i, j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// print maximum hourglass</span></span><br><span class=\"line\">        System.out.println(maxHourglass);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p><strong>Context</strong><br>Given a 6 * 6 <em>2D Array</em>, A:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 1 1 0 0 0</span><br><span class=\"line\">0 1 0 0 0 0</span><br><span class=\"line\">1 1 1 0 0 0</span><br><span class=\"line\">0 0 0 0 0 0</span><br><span class=\"line\">0 0 0 0 0 0</span><br><span class=\"line\">0 0 0 0 0 0</span><br></pre></td></tr></table></figure>\n\n<p>We define an hourglass in  A to be a subset of values with indices falling in this pattern in A’s graphical representation:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a b c</span><br><span class=\"line\">  d</span><br><span class=\"line\">e f g</span><br></pre></td></tr></table></figure>\n\n<p>There are  16 hourglasses in A, and an <em>hourglass sum</em> is the sum of an hourglass’ values.</p>\n<p><strong>Task</strong><br>Calculate the hourglass sum for every hourglass in A, then print the <em>maximum</em> hourglass sum.</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng.hackerrank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/11:10:03</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Day10</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">6</span>][<span class=\"number\">6</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">            String[] arrRowItems = scanner.nextLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">6</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> arrItem = Integer.parseInt(arrRowItems[j]);</span><br><span class=\"line\">                arr[i][j] = arrItem;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        HashSet&lt;Integer&gt; result = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length-<span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arr[i].length-<span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//顶</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> top = arr[i][j] + arr[i][j+<span class=\"number\">1</span>] + arr[i][j+<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"comment\">//                System.out.println(top);</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> mid = arr[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">//                System.out.println(mid);</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> bottom = arr[i+<span class=\"number\">2</span>][j] + arr[i+<span class=\"number\">2</span>][j+<span class=\"number\">1</span>] + arr[i+<span class=\"number\">2</span>][j+<span class=\"number\">2</span>];</span><br><span class=\"line\">                result.add(top+mid+bottom);</span><br><span class=\"line\"><span class=\"comment\">//                System.out.println(bottom+top+mid);</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(Collections.max(result));</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>My solution is not good. Perhaps there are some smart way to solve it.</p>\n<p>Below is a another solution from others.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.regex.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> _MAX = <span class=\"number\">6</span>; <span class=\"comment\">// size of matrix</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> _OFFSET = <span class=\"number\">2</span>; <span class=\"comment\">// hourglass width</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> matrix[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[_MAX][_MAX];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> maxHourglass = -<span class=\"number\">63</span>; <span class=\"comment\">// initialize to lowest possible sum (-9 x 7)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/** Given a starting index for an hourglass, sets maxHourglass</span></span><br><span class=\"line\"><span class=\"comment\">    *   <span class=\"doctag\">@param</span> i row </span></span><br><span class=\"line\"><span class=\"comment\">    *   <span class=\"doctag\">@param</span> j column </span></span><br><span class=\"line\"><span class=\"comment\">    **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">hourglass</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tmp = <span class=\"number\">0</span>; <span class=\"comment\">// current hourglass sum</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = j; k &lt;= j + _OFFSET; k++)&#123;</span><br><span class=\"line\">            tmp += matrix[i][k]; <span class=\"comment\">// top 3 elements</span></span><br><span class=\"line\">            tmp += matrix[i + _OFFSET][k]; <span class=\"comment\">// bottom 3 elements</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tmp += matrix[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>]; <span class=\"comment\">// middle element</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(maxHourglass &lt; tmp)&#123;</span><br><span class=\"line\">            maxHourglass = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// read inputs</span></span><br><span class=\"line\">        Scanner scan = <span class=\"keyword\">new</span> Scanner(System.in); </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i &lt; _MAX; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j &lt; _MAX; j++)&#123;</span><br><span class=\"line\">                matrix[i][j] = scan.nextInt();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// find maximum hourglass</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i &lt; _MAX - _OFFSET; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j &lt; _MAX - _OFFSET; j++)&#123;</span><br><span class=\"line\">                hourglass(i, j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// print maximum hourglass</span></span><br><span class=\"line\">        System.out.println(maxHourglass);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Day 12 Inheritance","date":"2019-10-12T02:50:24.000Z","keywords":null,"description":null,"_content":"\ntoday's challenge is inheritance. given a class you need to complete some methods that calculate the average score of a student and return a mark which is given in the initial script. And here is my solution below.\n\n\n\n<!--more-->\n\n\n\n![1](/images/day12.1.png)\n\n![2](/images/day12.2.png)\n\n```java\npackage com.luopandeng.hackerrank;\n\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/12:10:29\n */\n\n\nclass Inheritance {\n    class Person {\n        protected String firstName;\n        protected String lastName;\n        protected int idNumber;\n\n        // Constructor\n        Person(String firstName, String lastName, int identification){\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.idNumber = identification;\n        }\n\n        // Print person data\n        public void printPerson(){\n            System.out.println(\n                    \"Name: \" + lastName + \", \" + firstName\n                            + \t\"\\nID: \" + idNumber);\n        }\n\n    }\n\n    class Student extends Person{\n        private String firstName;\n        private String lastName;\n        private int id;\n        private int[] testScores;\n\n        public Student(String firstName, String lastName, int identification) {\n            super(firstName, lastName, identification);\n        }\n\n        public Student(String firstName, String lastName, int identification,  int[] testScores) {\n            super(firstName, lastName, identification);\n            this.testScores = testScores;\n        }\n\n        public String calculate() {\n            int sum = 0;\n            for (int i = 0; i < testScores.length; i++) {\n                sum+=testScores[i];\n            }\n            int average = sum/testScores.length;\n            if (average>=90){\n                return \"O\";\n            }else if (average>=80&&average<90){\n                return \"E\";\n            }else if (average>=70&&average<80){\n                return \"A\";\n            }else if (average>=55&&average<70){\n                return \"P\";\n            }else if (average>=40&&average<55){\n                return \"D\";\n            }\n            return \"T\";\n        }\n    }\n\n    class Solution {\n        public void main(String[] args) {\n            Scanner scan = new Scanner(System.in);\n            String firstName = scan.next();\n            String lastName = scan.next();\n            int id = scan.nextInt();\n            int numScores = scan.nextInt();\n            int[] testScores = new int[numScores];\n            for(int i = 0; i < numScores; i++){\n                testScores[i] = scan.nextInt();\n            }\n            scan.close();\n\n            Student s = new Student(firstName, lastName, id, testScores);\n            s.printPerson();\n            System.out.println(\"Grade: \" + s.calculate() );\n        }\n    }\n}\n\n```\n\n\n\n\n\n### solution from others\n\n```java\nclass Student extends Person{\n    private int[] testScores;\n    \n    Student(String firstName, String lastName, int identification, int[] scores){\n\t\tsuper(firstName, lastName, identification);\n\t\tthis.testScores = scores;\n\t}\n\t\n\tpublic char calculate(){\n\t\tint average = 0;\n\t\tfor(int i = 0; i < testScores.length; i++){\n\t\t\taverage += testScores[i];\n\t\t}\n\t\taverage = average / testScores.length;\n\t\t\n\t\tif(average >= 90){\n\t\t\treturn 'O'; // Outstanding\n\t\t}\n\t\telse if(average >= 80){\n\t\t\treturn 'E'; // Exceeds Expectations\n\t\t}\n\t\telse if(average >= 70){\n\t\t\treturn 'A'; // Acceptable\n\t\t}\n\t\telse if(average >= 55){\n\t\t\treturn 'P'; // Dreadful\n\t\t}\n\t\telse if(average >= 40){\n\t\t\treturn 'D'; // Dreadful\n\t\t}\n\t\telse{\n\t\t\treturn 'T'; // Troll\n\t\t}\n\t}\n}\n```\n\n","source":"_posts/HackerRank/Day-12-Inheritance.md","raw":"---\ntitle: Day 12 Inheritance\ndate: 2019-10-12 10:50:24\ntags: hackerrank\nkeywords:\ndescription:\n---\n\ntoday's challenge is inheritance. given a class you need to complete some methods that calculate the average score of a student and return a mark which is given in the initial script. And here is my solution below.\n\n\n\n<!--more-->\n\n\n\n![1](/images/day12.1.png)\n\n![2](/images/day12.2.png)\n\n```java\npackage com.luopandeng.hackerrank;\n\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/12:10:29\n */\n\n\nclass Inheritance {\n    class Person {\n        protected String firstName;\n        protected String lastName;\n        protected int idNumber;\n\n        // Constructor\n        Person(String firstName, String lastName, int identification){\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.idNumber = identification;\n        }\n\n        // Print person data\n        public void printPerson(){\n            System.out.println(\n                    \"Name: \" + lastName + \", \" + firstName\n                            + \t\"\\nID: \" + idNumber);\n        }\n\n    }\n\n    class Student extends Person{\n        private String firstName;\n        private String lastName;\n        private int id;\n        private int[] testScores;\n\n        public Student(String firstName, String lastName, int identification) {\n            super(firstName, lastName, identification);\n        }\n\n        public Student(String firstName, String lastName, int identification,  int[] testScores) {\n            super(firstName, lastName, identification);\n            this.testScores = testScores;\n        }\n\n        public String calculate() {\n            int sum = 0;\n            for (int i = 0; i < testScores.length; i++) {\n                sum+=testScores[i];\n            }\n            int average = sum/testScores.length;\n            if (average>=90){\n                return \"O\";\n            }else if (average>=80&&average<90){\n                return \"E\";\n            }else if (average>=70&&average<80){\n                return \"A\";\n            }else if (average>=55&&average<70){\n                return \"P\";\n            }else if (average>=40&&average<55){\n                return \"D\";\n            }\n            return \"T\";\n        }\n    }\n\n    class Solution {\n        public void main(String[] args) {\n            Scanner scan = new Scanner(System.in);\n            String firstName = scan.next();\n            String lastName = scan.next();\n            int id = scan.nextInt();\n            int numScores = scan.nextInt();\n            int[] testScores = new int[numScores];\n            for(int i = 0; i < numScores; i++){\n                testScores[i] = scan.nextInt();\n            }\n            scan.close();\n\n            Student s = new Student(firstName, lastName, id, testScores);\n            s.printPerson();\n            System.out.println(\"Grade: \" + s.calculate() );\n        }\n    }\n}\n\n```\n\n\n\n\n\n### solution from others\n\n```java\nclass Student extends Person{\n    private int[] testScores;\n    \n    Student(String firstName, String lastName, int identification, int[] scores){\n\t\tsuper(firstName, lastName, identification);\n\t\tthis.testScores = scores;\n\t}\n\t\n\tpublic char calculate(){\n\t\tint average = 0;\n\t\tfor(int i = 0; i < testScores.length; i++){\n\t\t\taverage += testScores[i];\n\t\t}\n\t\taverage = average / testScores.length;\n\t\t\n\t\tif(average >= 90){\n\t\t\treturn 'O'; // Outstanding\n\t\t}\n\t\telse if(average >= 80){\n\t\t\treturn 'E'; // Exceeds Expectations\n\t\t}\n\t\telse if(average >= 70){\n\t\t\treturn 'A'; // Acceptable\n\t\t}\n\t\telse if(average >= 55){\n\t\t\treturn 'P'; // Dreadful\n\t\t}\n\t\telse if(average >= 40){\n\t\t\treturn 'D'; // Dreadful\n\t\t}\n\t\telse{\n\t\t\treturn 'T'; // Troll\n\t\t}\n\t}\n}\n```\n\n","slug":"HackerRank/Day-12-Inheritance","published":1,"updated":"2019-10-12T03:07:51.886Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64m000398ki5cm6fqfk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>today’s challenge is inheritance. given a class you need to complete some methods that calculate the average score of a student and return a mark which is given in the initial script. And here is my solution below.</p>\n<a id=\"more\"></a>\n\n\n\n<p><img src=\"/images/day12.1.png\" alt=\"1\"></p>\n<p><img src=\"/images/day12.2.png\" alt=\"2\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng.hackerrank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/12:10:29</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inheritance</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> String firstName;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> String lastName;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> idNumber;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Constructor</span></span><br><span class=\"line\">        Person(String firstName, String lastName, <span class=\"keyword\">int</span> identification)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.firstName = firstName;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.lastName = lastName;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.idNumber = identification;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Print person data</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printPerson</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            System.out.println(</span><br><span class=\"line\">                    <span class=\"string\">\"Name: \"</span> + lastName + <span class=\"string\">\", \"</span> + firstName</span><br><span class=\"line\">                            + \t<span class=\"string\">\"\\nID: \"</span> + idNumber);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String firstName;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String lastName;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] testScores;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String firstName, String lastName, <span class=\"keyword\">int</span> identification)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(firstName, lastName, identification);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String firstName, String lastName, <span class=\"keyword\">int</span> identification,  <span class=\"keyword\">int</span>[] testScores)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(firstName, lastName, identification);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.testScores = testScores;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">calculate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; testScores.length; i++) &#123;</span><br><span class=\"line\">                sum+=testScores[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> average = sum/testScores.length;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">90</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"O\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">80</span>&amp;&amp;average&lt;<span class=\"number\">90</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"E\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">70</span>&amp;&amp;average&lt;<span class=\"number\">80</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"A\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">55</span>&amp;&amp;average&lt;<span class=\"number\">70</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"P\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">40</span>&amp;&amp;average&lt;<span class=\"number\">55</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"D\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"T\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">            Scanner scan = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">            String firstName = scan.next();</span><br><span class=\"line\">            String lastName = scan.next();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> id = scan.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> numScores = scan.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] testScores = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[numScores];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; numScores; i++)&#123;</span><br><span class=\"line\">                testScores[i] = scan.nextInt();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            scan.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            Student s = <span class=\"keyword\">new</span> Student(firstName, lastName, id, testScores);</span><br><span class=\"line\">            s.printPerson();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Grade: \"</span> + s.calculate() );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"solution-from-others\"><a href=\"#solution-from-others\" class=\"headerlink\" title=\"solution from others\"></a>solution from others</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] testScores;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Student(String firstName, String lastName, <span class=\"keyword\">int</span> identification, <span class=\"keyword\">int</span>[] scores)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(firstName, lastName, identification);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.testScores = scores;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">char</span> <span class=\"title\">calculate</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> average = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; testScores.length; i++)&#123;</span><br><span class=\"line\">\t\t\taverage += testScores[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\taverage = average / testScores.length;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">90</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'O'</span>; <span class=\"comment\">// Outstanding</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">80</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'E'</span>; <span class=\"comment\">// Exceeds Expectations</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">70</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'A'</span>; <span class=\"comment\">// Acceptable</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">55</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'P'</span>; <span class=\"comment\">// Dreadful</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">40</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'D'</span>; <span class=\"comment\">// Dreadful</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'T'</span>; <span class=\"comment\">// Troll</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>today’s challenge is inheritance. given a class you need to complete some methods that calculate the average score of a student and return a mark which is given in the initial script. And here is my solution below.</p>","more":"<p><img src=\"/images/day12.1.png\" alt=\"1\"></p>\n<p><img src=\"/images/day12.2.png\" alt=\"2\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng.hackerrank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/12:10:29</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inheritance</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> String firstName;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> String lastName;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> idNumber;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Constructor</span></span><br><span class=\"line\">        Person(String firstName, String lastName, <span class=\"keyword\">int</span> identification)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.firstName = firstName;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.lastName = lastName;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.idNumber = identification;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Print person data</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printPerson</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            System.out.println(</span><br><span class=\"line\">                    <span class=\"string\">\"Name: \"</span> + lastName + <span class=\"string\">\", \"</span> + firstName</span><br><span class=\"line\">                            + \t<span class=\"string\">\"\\nID: \"</span> + idNumber);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String firstName;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String lastName;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] testScores;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String firstName, String lastName, <span class=\"keyword\">int</span> identification)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(firstName, lastName, identification);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String firstName, String lastName, <span class=\"keyword\">int</span> identification,  <span class=\"keyword\">int</span>[] testScores)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(firstName, lastName, identification);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.testScores = testScores;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">calculate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; testScores.length; i++) &#123;</span><br><span class=\"line\">                sum+=testScores[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> average = sum/testScores.length;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">90</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"O\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">80</span>&amp;&amp;average&lt;<span class=\"number\">90</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"E\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">70</span>&amp;&amp;average&lt;<span class=\"number\">80</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"A\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">55</span>&amp;&amp;average&lt;<span class=\"number\">70</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"P\"</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (average&gt;=<span class=\"number\">40</span>&amp;&amp;average&lt;<span class=\"number\">55</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"D\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"T\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">            Scanner scan = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">            String firstName = scan.next();</span><br><span class=\"line\">            String lastName = scan.next();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> id = scan.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> numScores = scan.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] testScores = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[numScores];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; numScores; i++)&#123;</span><br><span class=\"line\">                testScores[i] = scan.nextInt();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            scan.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            Student s = <span class=\"keyword\">new</span> Student(firstName, lastName, id, testScores);</span><br><span class=\"line\">            s.printPerson();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Grade: \"</span> + s.calculate() );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"solution-from-others\"><a href=\"#solution-from-others\" class=\"headerlink\" title=\"solution from others\"></a>solution from others</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] testScores;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Student(String firstName, String lastName, <span class=\"keyword\">int</span> identification, <span class=\"keyword\">int</span>[] scores)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(firstName, lastName, identification);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.testScores = scores;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">char</span> <span class=\"title\">calculate</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> average = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; testScores.length; i++)&#123;</span><br><span class=\"line\">\t\t\taverage += testScores[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\taverage = average / testScores.length;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">90</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'O'</span>; <span class=\"comment\">// Outstanding</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">80</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'E'</span>; <span class=\"comment\">// Exceeds Expectations</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">70</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'A'</span>; <span class=\"comment\">// Acceptable</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">55</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'P'</span>; <span class=\"comment\">// Dreadful</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(average &gt;= <span class=\"number\">40</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'D'</span>; <span class=\"comment\">// Dreadful</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'T'</span>; <span class=\"comment\">// Troll</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Day 13 Abstract Class","date":"2019-10-13T01:25:30.000Z","keywords":null,"description":null,"_content":"\n **Objective**\nToday, we're taking what we learned yesterday about [*Inheritance*](https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html) and extending it to [*Abstract Classes*](https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html). Because this is a very specific Object-Oriented concept, submissions are limited to the few languages that use this construct. Check out the [Tutorial](https://www.hackerrank.com/challenges/30-abstract-classes/tutorial) tab for learning materials and an instructional video! \n\n\n\n<!--more-->\n\n\n\n![day13.1.png](/images/day13.1.png)\n\n![day13.2.png](/images/day13.2.png)\n\n\n\nHere is my solution:\n\n```\n\nabstract class Book {\n    String title;\n    String author;\n    \n    Book(String title, String author) {\n        this.title = title;\n        this.author = author;\n    }\n    \n    abstract void display();\n}\n\n// Declare your class here. Do not use the 'public' access modifier.\n    // Declare the price instance variable\n    \n    /**   \n    *   Class Constructor\n    *   \n    *   @param title The book's title.\n    *   @param author The book's author.\n    *   @param price The book's price.\n    **/\n    // Write your constructor here\n    \n    /**   \n    *   Method Name: display\n    *   \n    *   Print the title, author, and price in the specified format.\n    **/\n    // Write your method here\n    \n// End class\n\npublic class Solution {\n   \n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String title = scanner.nextLine();\n        String author = scanner.nextLine();\n        int price = scanner.nextInt();\n        scanner.close();\n\n        Book book = new MyBook(title, author, price);\n        book.display();\n    }\n}\n```\n\n","source":"_posts/HackerRank/Day-13-Abstract-Class.md","raw":"---\ntitle: Day 13 Abstract Class\ndate: 2019-10-13 09:25:30\ntags: hackerrank\nkeywords:\ndescription:\n---\n\n **Objective**\nToday, we're taking what we learned yesterday about [*Inheritance*](https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html) and extending it to [*Abstract Classes*](https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html). Because this is a very specific Object-Oriented concept, submissions are limited to the few languages that use this construct. Check out the [Tutorial](https://www.hackerrank.com/challenges/30-abstract-classes/tutorial) tab for learning materials and an instructional video! \n\n\n\n<!--more-->\n\n\n\n![day13.1.png](/images/day13.1.png)\n\n![day13.2.png](/images/day13.2.png)\n\n\n\nHere is my solution:\n\n```\n\nabstract class Book {\n    String title;\n    String author;\n    \n    Book(String title, String author) {\n        this.title = title;\n        this.author = author;\n    }\n    \n    abstract void display();\n}\n\n// Declare your class here. Do not use the 'public' access modifier.\n    // Declare the price instance variable\n    \n    /**   \n    *   Class Constructor\n    *   \n    *   @param title The book's title.\n    *   @param author The book's author.\n    *   @param price The book's price.\n    **/\n    // Write your constructor here\n    \n    /**   \n    *   Method Name: display\n    *   \n    *   Print the title, author, and price in the specified format.\n    **/\n    // Write your method here\n    \n// End class\n\npublic class Solution {\n   \n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String title = scanner.nextLine();\n        String author = scanner.nextLine();\n        int price = scanner.nextInt();\n        scanner.close();\n\n        Book book = new MyBook(title, author, price);\n        book.display();\n    }\n}\n```\n\n","slug":"HackerRank/Day-13-Abstract-Class","published":1,"updated":"2019-10-13T03:53:07.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64p000498ki6yh8eara","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p> <strong>Objective</strong><br>Today, we’re taking what we learned yesterday about <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html\" target=\"_blank\" rel=\"noopener\"><em>Inheritance</em></a> and extending it to <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html\" target=\"_blank\" rel=\"noopener\"><em>Abstract Classes</em></a>. Because this is a very specific Object-Oriented concept, submissions are limited to the few languages that use this construct. Check out the <a href=\"https://www.hackerrank.com/challenges/30-abstract-classes/tutorial\" target=\"_blank\" rel=\"noopener\">Tutorial</a> tab for learning materials and an instructional video! </p>\n<a id=\"more\"></a>\n\n\n\n<p><img src=\"/images/day13.1.png\" alt=\"day13.1.png\"></p>\n<p><img src=\"/images/day13.2.png\" alt=\"day13.2.png\"></p>\n<p>Here is my solution:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">abstract class Book &#123;</span><br><span class=\"line\">    String title;</span><br><span class=\"line\">    String author;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Book(String title, String author) &#123;</span><br><span class=\"line\">        this.title &#x3D; title;</span><br><span class=\"line\">        this.author &#x3D; author;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    abstract void display();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Declare your class here. Do not use the &#39;public&#39; access modifier.</span><br><span class=\"line\">    &#x2F;&#x2F; Declare the price instance variable</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;**   </span><br><span class=\"line\">    *   Class Constructor</span><br><span class=\"line\">    *   </span><br><span class=\"line\">    *   @param title The book&#39;s title.</span><br><span class=\"line\">    *   @param author The book&#39;s author.</span><br><span class=\"line\">    *   @param price The book&#39;s price.</span><br><span class=\"line\">    **&#x2F;</span><br><span class=\"line\">    &#x2F;&#x2F; Write your constructor here</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;**   </span><br><span class=\"line\">    *   Method Name: display</span><br><span class=\"line\">    *   </span><br><span class=\"line\">    *   Print the title, author, and price in the specified format.</span><br><span class=\"line\">    **&#x2F;</span><br><span class=\"line\">    &#x2F;&#x2F; Write your method here</span><br><span class=\"line\">    </span><br><span class=\"line\">&#x2F;&#x2F; End class</span><br><span class=\"line\"></span><br><span class=\"line\">public class Solution &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        Scanner scanner &#x3D; new Scanner(System.in);</span><br><span class=\"line\">        String title &#x3D; scanner.nextLine();</span><br><span class=\"line\">        String author &#x3D; scanner.nextLine();</span><br><span class=\"line\">        int price &#x3D; scanner.nextInt();</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        Book book &#x3D; new MyBook(title, author, price);</span><br><span class=\"line\">        book.display();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p> <strong>Objective</strong><br>Today, we’re taking what we learned yesterday about <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html\" target=\"_blank\" rel=\"noopener\"><em>Inheritance</em></a> and extending it to <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html\" target=\"_blank\" rel=\"noopener\"><em>Abstract Classes</em></a>. Because this is a very specific Object-Oriented concept, submissions are limited to the few languages that use this construct. Check out the <a href=\"https://www.hackerrank.com/challenges/30-abstract-classes/tutorial\" target=\"_blank\" rel=\"noopener\">Tutorial</a> tab for learning materials and an instructional video! </p>","more":"<p><img src=\"/images/day13.1.png\" alt=\"day13.1.png\"></p>\n<p><img src=\"/images/day13.2.png\" alt=\"day13.2.png\"></p>\n<p>Here is my solution:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">abstract class Book &#123;</span><br><span class=\"line\">    String title;</span><br><span class=\"line\">    String author;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Book(String title, String author) &#123;</span><br><span class=\"line\">        this.title &#x3D; title;</span><br><span class=\"line\">        this.author &#x3D; author;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    abstract void display();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Declare your class here. Do not use the &#39;public&#39; access modifier.</span><br><span class=\"line\">    &#x2F;&#x2F; Declare the price instance variable</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;**   </span><br><span class=\"line\">    *   Class Constructor</span><br><span class=\"line\">    *   </span><br><span class=\"line\">    *   @param title The book&#39;s title.</span><br><span class=\"line\">    *   @param author The book&#39;s author.</span><br><span class=\"line\">    *   @param price The book&#39;s price.</span><br><span class=\"line\">    **&#x2F;</span><br><span class=\"line\">    &#x2F;&#x2F; Write your constructor here</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;**   </span><br><span class=\"line\">    *   Method Name: display</span><br><span class=\"line\">    *   </span><br><span class=\"line\">    *   Print the title, author, and price in the specified format.</span><br><span class=\"line\">    **&#x2F;</span><br><span class=\"line\">    &#x2F;&#x2F; Write your method here</span><br><span class=\"line\">    </span><br><span class=\"line\">&#x2F;&#x2F; End class</span><br><span class=\"line\"></span><br><span class=\"line\">public class Solution &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        Scanner scanner &#x3D; new Scanner(System.in);</span><br><span class=\"line\">        String title &#x3D; scanner.nextLine();</span><br><span class=\"line\">        String author &#x3D; scanner.nextLine();</span><br><span class=\"line\">        int price &#x3D; scanner.nextInt();</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        Book book &#x3D; new MyBook(title, author, price);</span><br><span class=\"line\">        book.display();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Day 14 Scope","date":"2019-10-14T02:51:29.000Z","keywords":null,"description":null,"_content":"\nToday's challenge is so solve problem that you need to calculate maximum absolute sum of given a array every two.\n\n\n\n<!--more-->\n\n\n\n![day14.1](/images/day14.1.png)\n\n![day14.2](/images/day14.2.png)\n\n\n\nHere is my solution:\n\n```java\npackage com.luopandeng.hackerrank;\n\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/14:9:58\n */\n\n\nclass Difference {\n    private int[] elements;\n    public int maximumDifference;\n\n    public Difference(int[] a) {\n        this.elements = a;\n    }\n\n    public void computeDifference() {\n        HashSet<Integer> integers = new HashSet<>();\n        for (int i = 0; i < elements.length; i++) {\n            for (int j = i; j < elements.length; j++) {\n                integers.add(Math.abs(elements[i] - elements[j]));\n            }\n        }\n        maximumDifference = Collections.max(integers);\n\n    }\n\n    // Add your code here\n\n} // End of Difference class\n\n\npublic class Day14Scope {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        sc.close();\n\n        Difference difference = new Difference(a);\n\n        difference.computeDifference();\n\n        System.out.print(difference.maximumDifference);\n    }\n\n\n}\n\n```\n\n\n\n\n\n## Solution From Others:\n\n```java\npublic Difference(int[] elements){\n        this.elements = elements;\n    }\n\n    public void computeDifference(){\n        Arrays.sort(elements);\n        this.maximumDifference = Math.abs(elements[elements.length - 1] - elements[0]);\n    }\n\n```\n\n","source":"_posts/HackerRank/Day-14-Scope.md","raw":"---\ntitle: Day 14 Scope\ndate: 2019-10-14 10:51:29\ntags: hackerrank\nkeywords:\ndescription:\n---\n\nToday's challenge is so solve problem that you need to calculate maximum absolute sum of given a array every two.\n\n\n\n<!--more-->\n\n\n\n![day14.1](/images/day14.1.png)\n\n![day14.2](/images/day14.2.png)\n\n\n\nHere is my solution:\n\n```java\npackage com.luopandeng.hackerrank;\n\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/14:9:58\n */\n\n\nclass Difference {\n    private int[] elements;\n    public int maximumDifference;\n\n    public Difference(int[] a) {\n        this.elements = a;\n    }\n\n    public void computeDifference() {\n        HashSet<Integer> integers = new HashSet<>();\n        for (int i = 0; i < elements.length; i++) {\n            for (int j = i; j < elements.length; j++) {\n                integers.add(Math.abs(elements[i] - elements[j]));\n            }\n        }\n        maximumDifference = Collections.max(integers);\n\n    }\n\n    // Add your code here\n\n} // End of Difference class\n\n\npublic class Day14Scope {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        sc.close();\n\n        Difference difference = new Difference(a);\n\n        difference.computeDifference();\n\n        System.out.print(difference.maximumDifference);\n    }\n\n\n}\n\n```\n\n\n\n\n\n## Solution From Others:\n\n```java\npublic Difference(int[] elements){\n        this.elements = elements;\n    }\n\n    public void computeDifference(){\n        Arrays.sort(elements);\n        this.maximumDifference = Math.abs(elements[elements.length - 1] - elements[0]);\n    }\n\n```\n\n","slug":"HackerRank/Day-14-Scope","published":1,"updated":"2019-10-14T03:27:17.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64r000598ki8nc02p0e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Today’s challenge is so solve problem that you need to calculate maximum absolute sum of given a array every two.</p>\n<a id=\"more\"></a>\n\n\n\n<p><img src=\"/images/day14.1.png\" alt=\"day14.1\"></p>\n<p><img src=\"/images/day14.2.png\" alt=\"day14.2\"></p>\n<p>Here is my solution:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng.hackerrank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/14:9:58</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Difference</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] elements;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> maximumDifference;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Difference</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.elements = a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">computeDifference</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        HashSet&lt;Integer&gt; integers = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; elements.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; elements.length; j++) &#123;</span><br><span class=\"line\">                integers.add(Math.abs(elements[i] - elements[j]));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maximumDifference = Collections.max(integers);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Add your code here</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"comment\">// End of Difference class</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Day14Scope</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            a[i] = sc.nextInt();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        Difference difference = <span class=\"keyword\">new</span> Difference(a);</span><br><span class=\"line\"></span><br><span class=\"line\">        difference.computeDifference();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.print(difference.maximumDifference);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"Solution-From-Others\"><a href=\"#Solution-From-Others\" class=\"headerlink\" title=\"Solution From Others:\"></a>Solution From Others:</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Difference</span><span class=\"params\">(<span class=\"keyword\">int</span>[] elements)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.elements = elements;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">computeDifference</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Arrays.sort(elements);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.maximumDifference = Math.abs(elements[elements.length - <span class=\"number\">1</span>] - elements[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Today’s challenge is so solve problem that you need to calculate maximum absolute sum of given a array every two.</p>","more":"<p><img src=\"/images/day14.1.png\" alt=\"day14.1\"></p>\n<p><img src=\"/images/day14.2.png\" alt=\"day14.2\"></p>\n<p>Here is my solution:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng.hackerrank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/14:9:58</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Difference</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] elements;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> maximumDifference;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Difference</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.elements = a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">computeDifference</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        HashSet&lt;Integer&gt; integers = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; elements.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; elements.length; j++) &#123;</span><br><span class=\"line\">                integers.add(Math.abs(elements[i] - elements[j]));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maximumDifference = Collections.max(integers);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Add your code here</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"comment\">// End of Difference class</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Day14Scope</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            a[i] = sc.nextInt();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        Difference difference = <span class=\"keyword\">new</span> Difference(a);</span><br><span class=\"line\"></span><br><span class=\"line\">        difference.computeDifference();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.print(difference.maximumDifference);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"Solution-From-Others\"><a href=\"#Solution-From-Others\" class=\"headerlink\" title=\"Solution From Others:\"></a>Solution From Others:</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Difference</span><span class=\"params\">(<span class=\"keyword\">int</span>[] elements)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.elements = elements;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">computeDifference</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Arrays.sort(elements);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.maximumDifference = Math.abs(elements[elements.length - <span class=\"number\">1</span>] - elements[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"title":"Day 15:LinkedList","date":"2019-10-22T08:17:20.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/HackerRank/Day-15-LinkedList.md","raw":"---\ntitle: 'Day 15:LinkedList'\ndate: 2019-10-22 16:17:20\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"HackerRank/Day-15-LinkedList","published":1,"updated":"2019-10-22T08:17:20.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64u000898kifgc42cua","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"Day 7: Arrays","date":"2019-10-07T07:54:16.000Z","keywords":null,"description":"the seventh","_content":"\ntask:\n\nGiven an array, A , of  N integers, print A's elements in *reverse* order as a single line of space-separated numbers.\n\n给定一个定长的数组，翻转这个数组。\n\n\n\n<!--more-->\n\n\n\nMy solution:\n\n```java\npackage com.luopandeng;\n\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019:2019/10/7:14:14\n */\n\n\npublic class ReverseArray {\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        if (n >= 1 & n <= 1000) {\n            int[] arr = new int[n];\n            String[] arrItems = scanner.nextLine().split(\" \");\n            scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n            for (int j = 0; j < arrItems.length; j++) {\n                if (Integer.parseInt(arrItems[j]) < 1 || Integer.parseInt(arrItems[j]) > 10000) {\n                    System.out.println(\"You just input a wrong number\");\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                int arrItem = Integer.parseInt(arrItems[i]);\n                arr[i] = arrItem;\n            }\n            //all code goes here below\n            int midT = 0;\n            for (int i = 0; i < arr.length / 2; i++) {\n                midT = arr[i];\n                arr[i] = arr[arr.length - 1 - i];\n                arr[arr.length - i - 1] = midT;\n            }\n            for (int i = 0; i < arr.length; i++) {\n                System.out.print(arr[i] + \" \");\n            }\n        } else {\n            System.out.println(\"You just input a wrong number\");\n        }\n        scanner.close();\n    }\n}\n\n```\n\n其他实现方法：\n\n```java\n//Collections.reverse()\npublic void invertUsingCollectionsReverse(Object[] array) {\n    List<Object> list = Arrays.asList(array);\n    Collections.reverse(list);\n}\n//使用Stream API实现:\nObject[] invertUsingStreams(Object[] array) {\n    return IntStream.rangeClosed(1, array.length)\n      .mapToObj(i -> array[array.length - i])\n      .toArray();\n}\n\n```\n\n","source":"_posts/HackerRank/Day-7-Arrays.md","raw":"---\ntitle: 'Day 7: Arrays'\ndate: 2019-10-07 15:54:16\ntags: hackerrank\nkeywords: \ndescription: the seventh\n---\n\ntask:\n\nGiven an array, A , of  N integers, print A's elements in *reverse* order as a single line of space-separated numbers.\n\n给定一个定长的数组，翻转这个数组。\n\n\n\n<!--more-->\n\n\n\nMy solution:\n\n```java\npackage com.luopandeng;\n\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019:2019/10/7:14:14\n */\n\n\npublic class ReverseArray {\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        if (n >= 1 & n <= 1000) {\n            int[] arr = new int[n];\n            String[] arrItems = scanner.nextLine().split(\" \");\n            scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n            for (int j = 0; j < arrItems.length; j++) {\n                if (Integer.parseInt(arrItems[j]) < 1 || Integer.parseInt(arrItems[j]) > 10000) {\n                    System.out.println(\"You just input a wrong number\");\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                int arrItem = Integer.parseInt(arrItems[i]);\n                arr[i] = arrItem;\n            }\n            //all code goes here below\n            int midT = 0;\n            for (int i = 0; i < arr.length / 2; i++) {\n                midT = arr[i];\n                arr[i] = arr[arr.length - 1 - i];\n                arr[arr.length - i - 1] = midT;\n            }\n            for (int i = 0; i < arr.length; i++) {\n                System.out.print(arr[i] + \" \");\n            }\n        } else {\n            System.out.println(\"You just input a wrong number\");\n        }\n        scanner.close();\n    }\n}\n\n```\n\n其他实现方法：\n\n```java\n//Collections.reverse()\npublic void invertUsingCollectionsReverse(Object[] array) {\n    List<Object> list = Arrays.asList(array);\n    Collections.reverse(list);\n}\n//使用Stream API实现:\nObject[] invertUsingStreams(Object[] array) {\n    return IntStream.rangeClosed(1, array.length)\n      .mapToObj(i -> array[array.length - i])\n      .toArray();\n}\n\n```\n\n","slug":"HackerRank/Day-7-Arrays","published":1,"updated":"2019-10-07T08:05:05.271Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64w000a98kibukv204l","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>task:</p>\n<p>Given an array, A , of  N integers, print A’s elements in <em>reverse</em> order as a single line of space-separated numbers.</p>\n<p>给定一个定长的数组，翻转这个数组。</p>\n<a id=\"more\"></a>\n\n\n\n<p>My solution:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019:2019/10/7:14:14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReverseArray</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = scanner.nextInt();</span><br><span class=\"line\">        scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &gt;= <span class=\"number\">1</span> &amp; n &lt;= <span class=\"number\">1000</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">            String[] arrItems = scanner.nextLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arrItems.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Integer.parseInt(arrItems[j]) &lt; <span class=\"number\">1</span> || Integer.parseInt(arrItems[j]) &gt; <span class=\"number\">10000</span>) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">\"You just input a wrong number\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> arrItem = Integer.parseInt(arrItems[i]);</span><br><span class=\"line\">                arr[i] = arrItem;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//all code goes here below</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> midT = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">                midT = arr[i];</span><br><span class=\"line\">                arr[i] = arr[arr.length - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">                arr[arr.length - i - <span class=\"number\">1</span>] = midT;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">                System.out.print(arr[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"You just input a wrong number\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其他实现方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Collections.reverse()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">invertUsingCollectionsReverse</span><span class=\"params\">(Object[] array)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;Object&gt; list = Arrays.asList(array);</span><br><span class=\"line\">    Collections.reverse(list);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用Stream API实现:</span></span><br><span class=\"line\">Object[] invertUsingStreams(Object[] array) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> IntStream.rangeClosed(<span class=\"number\">1</span>, array.length)</span><br><span class=\"line\">      .mapToObj(i -&gt; array[array.length - i])</span><br><span class=\"line\">      .toArray();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>task:</p>\n<p>Given an array, A , of  N integers, print A’s elements in <em>reverse</em> order as a single line of space-separated numbers.</p>\n<p>给定一个定长的数组，翻转这个数组。</p>","more":"<p>My solution:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019:2019/10/7:14:14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReverseArray</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = scanner.nextInt();</span><br><span class=\"line\">        scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &gt;= <span class=\"number\">1</span> &amp; n &lt;= <span class=\"number\">1000</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">            String[] arrItems = scanner.nextLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arrItems.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Integer.parseInt(arrItems[j]) &lt; <span class=\"number\">1</span> || Integer.parseInt(arrItems[j]) &gt; <span class=\"number\">10000</span>) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">\"You just input a wrong number\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> arrItem = Integer.parseInt(arrItems[i]);</span><br><span class=\"line\">                arr[i] = arrItem;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//all code goes here below</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> midT = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">                midT = arr[i];</span><br><span class=\"line\">                arr[i] = arr[arr.length - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">                arr[arr.length - i - <span class=\"number\">1</span>] = midT;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">                System.out.print(arr[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"You just input a wrong number\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其他实现方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Collections.reverse()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">invertUsingCollectionsReverse</span><span class=\"params\">(Object[] array)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;Object&gt; list = Arrays.asList(array);</span><br><span class=\"line\">    Collections.reverse(list);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用Stream API实现:</span></span><br><span class=\"line\">Object[] invertUsingStreams(Object[] array) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> IntStream.rangeClosed(<span class=\"number\">1</span>, array.length)</span><br><span class=\"line\">      .mapToObj(i -&gt; array[array.length - i])</span><br><span class=\"line\">      .toArray();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Day 8 Phone a Friend","date":"2019-10-08T06:56:17.000Z","keywords":"解题记录","description":null,"_content":"\n**Task**\nGiven `n` names and phone numbers, assemble a phone book that maps friends' names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each `name` queried, print the associated entry from your phone book on a new line in the form `name=phoneNumber`; if an entry for `name` is not found, print `Not found` instead.\n\n**Note:** Your phone book should be a Dictionary/Map/HashMap data structure.\n\n\n\n<!--more-->\n\n\n\n\n\n```java\npackage com.luopandeng;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/8:14:12\n */\n\n\npublic class DicAndMap {\n    public static void main(String []args){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        Map<String, Integer> aMap = new HashMap<String, Integer>(n);\n        for(int i = 0; i < n; i++){\n            String name = in.next();\n            int phone = in.nextInt();\n            // Write code here\n            aMap.put(name, phone);\n        }\n        while(in.hasNext()){\n            String s = in.next();\n//             Write code here\n            if (aMap.get(s)==null){\n                System.out.println(\"Not found.\");\n            }else{\n                System.out.println(s+\"=\"+aMap.get(s));\n            }\n        }\n        in.close();\n    }\n}\n\n```\n\n","source":"_posts/HackerRank/Day-8-Phone-a-Friend.md","raw":"---\ntitle: Day 8 Phone a Friend\ndate: 2019-10-08 14:56:17\ntags: hackerrank\nkeywords: 解题记录\ndescription:\n---\n\n**Task**\nGiven `n` names and phone numbers, assemble a phone book that maps friends' names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each `name` queried, print the associated entry from your phone book on a new line in the form `name=phoneNumber`; if an entry for `name` is not found, print `Not found` instead.\n\n**Note:** Your phone book should be a Dictionary/Map/HashMap data structure.\n\n\n\n<!--more-->\n\n\n\n\n\n```java\npackage com.luopandeng;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/8:14:12\n */\n\n\npublic class DicAndMap {\n    public static void main(String []args){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        Map<String, Integer> aMap = new HashMap<String, Integer>(n);\n        for(int i = 0; i < n; i++){\n            String name = in.next();\n            int phone = in.nextInt();\n            // Write code here\n            aMap.put(name, phone);\n        }\n        while(in.hasNext()){\n            String s = in.next();\n//             Write code here\n            if (aMap.get(s)==null){\n                System.out.println(\"Not found.\");\n            }else{\n                System.out.println(s+\"=\"+aMap.get(s));\n            }\n        }\n        in.close();\n    }\n}\n\n```\n\n","slug":"HackerRank/Day-8-Phone-a-Friend","published":1,"updated":"2019-10-08T07:00:51.514Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64y000d98kic52ze90v","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><strong>Task</strong><br>Given <code>n</code> names and phone numbers, assemble a phone book that maps friends’ names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each <code>name</code> queried, print the associated entry from your phone book on a new line in the form <code>name=phoneNumber</code>; if an entry for <code>name</code> is not found, print <code>Not found</code> instead.</p>\n<p><strong>Note:</strong> Your phone book should be a Dictionary/Map/HashMap data structure.</p>\n<a id=\"more\"></a>\n\n\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/8:14:12</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DicAndMap</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String []args)</span></span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = in.nextInt();</span><br><span class=\"line\">        Map&lt;String, Integer&gt; aMap = <span class=\"keyword\">new</span> HashMap&lt;String, Integer&gt;(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            String name = in.next();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> phone = in.nextInt();</span><br><span class=\"line\">            <span class=\"comment\">// Write code here</span></span><br><span class=\"line\">            aMap.put(name, phone);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(in.hasNext())&#123;</span><br><span class=\"line\">            String s = in.next();</span><br><span class=\"line\"><span class=\"comment\">//             Write code here</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (aMap.get(s)==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"Not found.\"</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(s+<span class=\"string\">\"=\"</span>+aMap.get(s));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        in.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p><strong>Task</strong><br>Given <code>n</code> names and phone numbers, assemble a phone book that maps friends’ names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each <code>name</code> queried, print the associated entry from your phone book on a new line in the form <code>name=phoneNumber</code>; if an entry for <code>name</code> is not found, print <code>Not found</code> instead.</p>\n<p><strong>Note:</strong> Your phone book should be a Dictionary/Map/HashMap data structure.</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/8:14:12</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DicAndMap</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String []args)</span></span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = in.nextInt();</span><br><span class=\"line\">        Map&lt;String, Integer&gt; aMap = <span class=\"keyword\">new</span> HashMap&lt;String, Integer&gt;(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            String name = in.next();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> phone = in.nextInt();</span><br><span class=\"line\">            <span class=\"comment\">// Write code here</span></span><br><span class=\"line\">            aMap.put(name, phone);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(in.hasNext())&#123;</span><br><span class=\"line\">            String s = in.next();</span><br><span class=\"line\"><span class=\"comment\">//             Write code here</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (aMap.get(s)==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"Not found.\"</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(s+<span class=\"string\">\"=\"</span>+aMap.get(s));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        in.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Days 9 Recursion","date":"2019-10-08T08:09:37.000Z","keywords":null,"description":null,"_content":"\n利用递归算法求阶乘。这个破系统不知道怎么回事，我都提交了，却显示我明天才能看题目。\n\n**Task**\nWrite a *factorial* function that takes a positive integer,  N as a parameter and prints the result of  N (N factorial).\n\n**Note:** If you fail to use recursion or fail to name your recursive function *factorial* or *Factorial*, you will get a score of 0.\n\n\n\n<!--more-->\n\n\n\n```java\npackage com.luopandeng;\n\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/8:15:16\n */\n\n\npublic class Recursion {\n\n    // Complete the factorial function below.\n    static int factorial(int n) {\n        if (n <= 1) {\n            return 1;\n        } else {\n            return n*factorial(n-1);\n\n        }\n    }\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) throws IOException {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        int result = factorial(n);\n        System.out.println(result);\n        scanner.close();\n    }\n\n}\n\n```\n\n","source":"_posts/HackerRank/Days-9-Recursion.md","raw":"---\ntitle: Days 9 Recursion\ndate: 2019-10-08 16:09:37\ntags: hackerrank\nkeywords:\ndescription:\n---\n\n利用递归算法求阶乘。这个破系统不知道怎么回事，我都提交了，却显示我明天才能看题目。\n\n**Task**\nWrite a *factorial* function that takes a positive integer,  N as a parameter and prints the result of  N (N factorial).\n\n**Note:** If you fail to use recursion or fail to name your recursive function *factorial* or *Factorial*, you will get a score of 0.\n\n\n\n<!--more-->\n\n\n\n```java\npackage com.luopandeng;\n\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.Scanner;\n\n/**\n * @Author: LPD0155\n * @Date: 2019/10/8:15:16\n */\n\n\npublic class Recursion {\n\n    // Complete the factorial function below.\n    static int factorial(int n) {\n        if (n <= 1) {\n            return 1;\n        } else {\n            return n*factorial(n-1);\n\n        }\n    }\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) throws IOException {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        int result = factorial(n);\n        System.out.println(result);\n        scanner.close();\n    }\n\n}\n\n```\n\n","slug":"HackerRank/Days-9-Recursion","published":1,"updated":"2019-10-09T02:08:58.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw64z000f98ki6dg4c7e7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>利用递归算法求阶乘。这个破系统不知道怎么回事，我都提交了，却显示我明天才能看题目。</p>\n<p><strong>Task</strong><br>Write a <em>factorial</em> function that takes a positive integer,  N as a parameter and prints the result of  N (N factorial).</p>\n<p><strong>Note:</strong> If you fail to use recursion or fail to name your recursive function <em>factorial</em> or <em>Factorial</em>, you will get a score of 0.</p>\n<a id=\"more\"></a>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/8:15:16</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Recursion</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Complete the factorial function below.</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">factorial</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n*factorial(n-<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = scanner.nextInt();</span><br><span class=\"line\">        scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> result = factorial(n);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>利用递归算法求阶乘。这个破系统不知道怎么回事，我都提交了，却显示我明天才能看题目。</p>\n<p><strong>Task</strong><br>Write a <em>factorial</em> function that takes a positive integer,  N as a parameter and prints the result of  N (N factorial).</p>\n<p><strong>Note:</strong> If you fail to use recursion or fail to name your recursive function <em>factorial</em> or <em>Factorial</em>, you will get a score of 0.</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: LPD0155</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span>: 2019/10/8:15:16</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Recursion</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Complete the factorial function below.</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">factorial</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n*factorial(n-<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = scanner.nextInt();</span><br><span class=\"line\">        scanner.skip(<span class=\"string\">\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> result = factorial(n);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"奇偶分组——HackerRank","date":"2019-10-07T04:59:55.000Z","_content":"\n要求：给出一个字符串，把字符串中的字母按奇偶分成两组打印出来。\n\n\n\n<!--more-->\n\n\n\n我的解：\n\n```java\npackage com.luopandeng;\n\nimport java.io.BufferedInputStream;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class EvenSplit {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(new BufferedInputStream(System.in));\n        int T = sc.nextInt();\n        List<List<String>> outter = new ArrayList<>();\n        for (int i = 0; i < T; i++) {\n            /*\n            *这里是个坑，起初这个inner 是在循环外的。单个输入的时候能输出正确答案\n            *但是输入一个以上的串时出现的情况是，outter这个列表里出现相同的值，且都为最后输入的那个\n            *为什么会出现这种情况呢？这就不得不提到两概念了，值传递和引用传递。\n            */\n            List<String> innner = new ArrayList<>();\n            String s = sc.next();\n            char[] chars = s.toCharArray();\n            StringBuilder evenChar = new StringBuilder();\n            StringBuilder oddChar = new StringBuilder();\n            for (int j = 0; j < chars.length; j++) {\n                if (j % 2 != 0) {\n                    oddChar.append(chars[j]);\n                } else {\n                    evenChar.append(chars[j]);\n                }\n            }\n            innner.add(evenChar.toString());\n            innner.add(oddChar.toString());\n            outter.add(innner);\n        }\n        System.out.println(outter);\n        for (int k = 0; k < outter.size(); k++) {\n            System.out.println(outter.get(k).get(0) + \" \" + outter.get(k).get(1));\n        }\n        sc.close();\n    }\n\n}\n```\n\n## 值传递和引用传递\n\n先来看在外面和在里面不同的输出结果。\n\n|                          |                            |\n| ------------------------ | -------------------------- |\n| ![外面](/images/out.png) | ![里面](/images/inner.png) |\n\n重点看红框里的部分。从hello拆出来的应该是在列表内的第一个列表内，从world拆出来的应该是在第二个列表里。\n\n**（1）基本数据类型传值，对形参的修改不会影响实参；**\n**（2）引用类型传引用，形参和实参指向同一个内存地址（同一个对象），所以对参数的修改会影响到实际的对象；**\n**（3）String, Integer, Double等immutable的类型特殊处理，可以理解为传值，最后的操作不会修改实参对象。**\n\n参考链接：[理解Java中的引用传递和值传递](https://www.cnblogs.com/binyue/p/3862276.html)\n\n由此我们可以知道，当`inner` 在外面时 `outter` 每次`add`的都是 `inner` 对象的地址，一旦 `inner`的值发生变化 ，则`outter`也会发生变化，就算是已经加进去的也会发生改变；当`inner`在里面时，每一次循环都会重新建立一个`inner`对象，`outter`的`add`接收的都是新的对象，因此能得到正确答案。\n\n另外，这道题目遇到的另一个问题是：`Scanner`接收输入的问题。有机会再总结。。。","source":"_posts/HackerRank/奇偶分组——HackerRank.md","raw":"---\ntitle: 奇偶分组——HackerRank\ndate: 2019-10-07 12:59:55\ntags: 算法 hackerrank\n---\n\n要求：给出一个字符串，把字符串中的字母按奇偶分成两组打印出来。\n\n\n\n<!--more-->\n\n\n\n我的解：\n\n```java\npackage com.luopandeng;\n\nimport java.io.BufferedInputStream;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class EvenSplit {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(new BufferedInputStream(System.in));\n        int T = sc.nextInt();\n        List<List<String>> outter = new ArrayList<>();\n        for (int i = 0; i < T; i++) {\n            /*\n            *这里是个坑，起初这个inner 是在循环外的。单个输入的时候能输出正确答案\n            *但是输入一个以上的串时出现的情况是，outter这个列表里出现相同的值，且都为最后输入的那个\n            *为什么会出现这种情况呢？这就不得不提到两概念了，值传递和引用传递。\n            */\n            List<String> innner = new ArrayList<>();\n            String s = sc.next();\n            char[] chars = s.toCharArray();\n            StringBuilder evenChar = new StringBuilder();\n            StringBuilder oddChar = new StringBuilder();\n            for (int j = 0; j < chars.length; j++) {\n                if (j % 2 != 0) {\n                    oddChar.append(chars[j]);\n                } else {\n                    evenChar.append(chars[j]);\n                }\n            }\n            innner.add(evenChar.toString());\n            innner.add(oddChar.toString());\n            outter.add(innner);\n        }\n        System.out.println(outter);\n        for (int k = 0; k < outter.size(); k++) {\n            System.out.println(outter.get(k).get(0) + \" \" + outter.get(k).get(1));\n        }\n        sc.close();\n    }\n\n}\n```\n\n## 值传递和引用传递\n\n先来看在外面和在里面不同的输出结果。\n\n|                          |                            |\n| ------------------------ | -------------------------- |\n| ![外面](/images/out.png) | ![里面](/images/inner.png) |\n\n重点看红框里的部分。从hello拆出来的应该是在列表内的第一个列表内，从world拆出来的应该是在第二个列表里。\n\n**（1）基本数据类型传值，对形参的修改不会影响实参；**\n**（2）引用类型传引用，形参和实参指向同一个内存地址（同一个对象），所以对参数的修改会影响到实际的对象；**\n**（3）String, Integer, Double等immutable的类型特殊处理，可以理解为传值，最后的操作不会修改实参对象。**\n\n参考链接：[理解Java中的引用传递和值传递](https://www.cnblogs.com/binyue/p/3862276.html)\n\n由此我们可以知道，当`inner` 在外面时 `outter` 每次`add`的都是 `inner` 对象的地址，一旦 `inner`的值发生变化 ，则`outter`也会发生变化，就算是已经加进去的也会发生改变；当`inner`在里面时，每一次循环都会重新建立一个`inner`对象，`outter`的`add`接收的都是新的对象，因此能得到正确答案。\n\n另外，这道题目遇到的另一个问题是：`Scanner`接收输入的问题。有机会再总结。。。","slug":"HackerRank/奇偶分组——HackerRank","published":1,"updated":"2019-10-07T05:56:18.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw651000h98ki8fshhz3n","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>要求：给出一个字符串，把字符串中的字母按奇偶分成两组打印出来。</p>\n<a id=\"more\"></a>\n\n\n\n<p>我的解：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EvenSplit</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> BufferedInputStream(System.in));</span><br><span class=\"line\">        <span class=\"keyword\">int</span> T = sc.nextInt();</span><br><span class=\"line\">        List&lt;List&lt;String&gt;&gt; outter = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            *这里是个坑，起初这个inner 是在循环外的。单个输入的时候能输出正确答案</span></span><br><span class=\"line\"><span class=\"comment\">            *但是输入一个以上的串时出现的情况是，outter这个列表里出现相同的值，且都为最后输入的那个</span></span><br><span class=\"line\"><span class=\"comment\">            *为什么会出现这种情况呢？这就不得不提到两概念了，值传递和引用传递。</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">            List&lt;String&gt; innner = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">            String s = sc.next();</span><br><span class=\"line\">            <span class=\"keyword\">char</span>[] chars = s.toCharArray();</span><br><span class=\"line\">            StringBuilder evenChar = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            StringBuilder oddChar = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; chars.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j % <span class=\"number\">2</span> != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    oddChar.append(chars[j]);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    evenChar.append(chars[j]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            innner.add(evenChar.toString());</span><br><span class=\"line\">            innner.add(oddChar.toString());</span><br><span class=\"line\">            outter.add(innner);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(outter);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; outter.size(); k++) &#123;</span><br><span class=\"line\">            System.out.println(outter.get(k).get(<span class=\"number\">0</span>) + <span class=\"string\">\" \"</span> + outter.get(k).get(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"值传递和引用传递\"><a href=\"#值传递和引用传递\" class=\"headerlink\" title=\"值传递和引用传递\"></a>值传递和引用传递</h2><p>先来看在外面和在里面不同的输出结果。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/images/out.png\" alt=\"外面\"></td>\n<td><img src=\"/images/inner.png\" alt=\"里面\"></td>\n</tr>\n</tbody></table>\n<p>重点看红框里的部分。从hello拆出来的应该是在列表内的第一个列表内，从world拆出来的应该是在第二个列表里。</p>\n<p><strong>（1）基本数据类型传值，对形参的修改不会影响实参；</strong><br><strong>（2）引用类型传引用，形参和实参指向同一个内存地址（同一个对象），所以对参数的修改会影响到实际的对象；</strong><br><strong>（3）String, Integer, Double等immutable的类型特殊处理，可以理解为传值，最后的操作不会修改实参对象。</strong></p>\n<p>参考链接：<a href=\"https://www.cnblogs.com/binyue/p/3862276.html\" target=\"_blank\" rel=\"noopener\">理解Java中的引用传递和值传递</a></p>\n<p>由此我们可以知道，当<code>inner</code> 在外面时 <code>outter</code> 每次<code>add</code>的都是 <code>inner</code> 对象的地址，一旦 <code>inner</code>的值发生变化 ，则<code>outter</code>也会发生变化，就算是已经加进去的也会发生改变；当<code>inner</code>在里面时，每一次循环都会重新建立一个<code>inner</code>对象，<code>outter</code>的<code>add</code>接收的都是新的对象，因此能得到正确答案。</p>\n<p>另外，这道题目遇到的另一个问题是：<code>Scanner</code>接收输入的问题。有机会再总结。。。</p>\n","site":{"data":{}},"excerpt":"<p>要求：给出一个字符串，把字符串中的字母按奇偶分成两组打印出来。</p>","more":"<p>我的解：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luopandeng;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EvenSplit</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> BufferedInputStream(System.in));</span><br><span class=\"line\">        <span class=\"keyword\">int</span> T = sc.nextInt();</span><br><span class=\"line\">        List&lt;List&lt;String&gt;&gt; outter = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            *这里是个坑，起初这个inner 是在循环外的。单个输入的时候能输出正确答案</span></span><br><span class=\"line\"><span class=\"comment\">            *但是输入一个以上的串时出现的情况是，outter这个列表里出现相同的值，且都为最后输入的那个</span></span><br><span class=\"line\"><span class=\"comment\">            *为什么会出现这种情况呢？这就不得不提到两概念了，值传递和引用传递。</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">            List&lt;String&gt; innner = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">            String s = sc.next();</span><br><span class=\"line\">            <span class=\"keyword\">char</span>[] chars = s.toCharArray();</span><br><span class=\"line\">            StringBuilder evenChar = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            StringBuilder oddChar = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; chars.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j % <span class=\"number\">2</span> != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    oddChar.append(chars[j]);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    evenChar.append(chars[j]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            innner.add(evenChar.toString());</span><br><span class=\"line\">            innner.add(oddChar.toString());</span><br><span class=\"line\">            outter.add(innner);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(outter);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; outter.size(); k++) &#123;</span><br><span class=\"line\">            System.out.println(outter.get(k).get(<span class=\"number\">0</span>) + <span class=\"string\">\" \"</span> + outter.get(k).get(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"值传递和引用传递\"><a href=\"#值传递和引用传递\" class=\"headerlink\" title=\"值传递和引用传递\"></a>值传递和引用传递</h2><p>先来看在外面和在里面不同的输出结果。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/images/out.png\" alt=\"外面\"></td>\n<td><img src=\"/images/inner.png\" alt=\"里面\"></td>\n</tr>\n</tbody></table>\n<p>重点看红框里的部分。从hello拆出来的应该是在列表内的第一个列表内，从world拆出来的应该是在第二个列表里。</p>\n<p><strong>（1）基本数据类型传值，对形参的修改不会影响实参；</strong><br><strong>（2）引用类型传引用，形参和实参指向同一个内存地址（同一个对象），所以对参数的修改会影响到实际的对象；</strong><br><strong>（3）String, Integer, Double等immutable的类型特殊处理，可以理解为传值，最后的操作不会修改实参对象。</strong></p>\n<p>参考链接：<a href=\"https://www.cnblogs.com/binyue/p/3862276.html\" target=\"_blank\" rel=\"noopener\">理解Java中的引用传递和值传递</a></p>\n<p>由此我们可以知道，当<code>inner</code> 在外面时 <code>outter</code> 每次<code>add</code>的都是 <code>inner</code> 对象的地址，一旦 <code>inner</code>的值发生变化 ，则<code>outter</code>也会发生变化，就算是已经加进去的也会发生改变；当<code>inner</code>在里面时，每一次循环都会重新建立一个<code>inner</code>对象，<code>outter</code>的<code>add</code>接收的都是新的对象，因此能得到正确答案。</p>\n<p>另外，这道题目遇到的另一个问题是：<code>Scanner</code>接收输入的问题。有机会再总结。。。</p>"},{"title":"Adsense 今天被暂停了","date":"2019-10-08T07:30:15.000Z","keywords":null,"description":null,"_content":"\n唉，查流量吧。\n\n\n\n<!--more-->\n\n\n\n话不多说，直接上图。\n\n![暂停](/images/service_suspended.png)\n\n<hr>\n\n#### 2019/11/19 \n\n今日被限制流量。\n\n**2020/3/18**\n\n今日账号被禁用，且申诉无效。","source":"_posts/chaos/Adsense-今天被暂停了.md","raw":"---\ntitle: Adsense 今天被暂停了\ndate: 2019-10-08 15:30:15\ntags: 杂事\nkeywords:\ndescription:\n---\n\n唉，查流量吧。\n\n\n\n<!--more-->\n\n\n\n话不多说，直接上图。\n\n![暂停](/images/service_suspended.png)\n\n<hr>\n\n#### 2019/11/19 \n\n今日被限制流量。\n\n**2020/3/18**\n\n今日账号被禁用，且申诉无效。","slug":"chaos/Adsense-今天被暂停了","published":1,"updated":"2020-03-27T00:34:09.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw652000j98ki356ndw4m","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>唉，查流量吧。</p>\n<a id=\"more\"></a>\n\n\n\n<p>话不多说，直接上图。</p>\n<p><img src=\"/images/service_suspended.png\" alt=\"暂停\"></p>\n<hr>\n\n<h4 id=\"2019-11-19\"><a href=\"#2019-11-19\" class=\"headerlink\" title=\"2019/11/19\"></a>2019/11/19</h4><p>今日被限制流量。</p>\n<p><strong>2020/3/18</strong></p>\n<p>今日账号被禁用，且申诉无效。</p>\n","site":{"data":{}},"excerpt":"<p>唉，查流量吧。</p>","more":"<p>话不多说，直接上图。</p>\n<p><img src=\"/images/service_suspended.png\" alt=\"暂停\"></p>\n<hr>\n\n<h4 id=\"2019-11-19\"><a href=\"#2019-11-19\" class=\"headerlink\" title=\"2019/11/19\"></a>2019/11/19</h4><p>今日被限制流量。</p>\n<p><strong>2020/3/18</strong></p>\n<p>今日账号被禁用，且申诉无效。</p>"},{"title":"Adsense 过了封锁期了","date":"2019-11-10T09:08:38.000Z","keywords":null,"description":null,"_content":"\n昨天我的账号被放了出来 。这里记录一下。\n\n\n\n<!--more-->\n\n\n\n虽然被放出来了，但是流量限制依然存在，看了一上签发日期，10月4日。要小心了，小破还是不能太高调啊。我就是想安安静静的赚个广告费而已呀。\n\n\n\n<hr>\n\n今天下等流量限制被取消了，就剩一个验证付款方式了。另：电报是个好东西。\n\n","source":"_posts/chaos/Adsense-过了封锁期了.md","raw":"---\ntitle: 'Adsense 过了封锁期了'\ndate: 2019-11-10 17:08:38\ntags: 杂事\nkeywords:\ndescription:\n---\n\n昨天我的账号被放了出来 。这里记录一下。\n\n\n\n<!--more-->\n\n\n\n虽然被放出来了，但是流量限制依然存在，看了一上签发日期，10月4日。要小心了，小破还是不能太高调啊。我就是想安安静静的赚个广告费而已呀。\n\n\n\n<hr>\n\n今天下等流量限制被取消了，就剩一个验证付款方式了。另：电报是个好东西。\n\n","slug":"chaos/Adsense-过了封锁期了","published":1,"updated":"2020-03-20T07:42:35.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw654000m98kibyydeuj6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>昨天我的账号被放了出来 。这里记录一下。</p>\n<a id=\"more\"></a>\n\n\n\n<p>虽然被放出来了，但是流量限制依然存在，看了一上签发日期，10月4日。要小心了，小破还是不能太高调啊。我就是想安安静静的赚个广告费而已呀。</p>\n<hr>\n\n<p>今天下等流量限制被取消了，就剩一个验证付款方式了。另：电报是个好东西。</p>\n","site":{"data":{}},"excerpt":"<p>昨天我的账号被放了出来 。这里记录一下。</p>","more":"<p>虽然被放出来了，但是流量限制依然存在，看了一上签发日期，10月4日。要小心了，小破还是不能太高调啊。我就是想安安静静的赚个广告费而已呀。</p>\n<hr>\n\n<p>今天下等流量限制被取消了，就剩一个验证付款方式了。另：电报是个好东西。</p>"},{"title":"Adsense被暂停投放广告了","date":"2019-10-05T07:23:52.000Z","_content":"\n今天上午，Adsense突然告诉我。广告投放暂停了，百思不得解，用analystic 看了一下有很多未知设备访问。\n\n\n\n<!--more-->\n\n\n\n估计是因为这个被停的吧。网上查了一上，要等一个周左右才能解封，按照每天20刀的话，我至少损失150刀的广告费。但是现在还不知道能不能解封呢。唉。。。\n\n附图：\n\n![suspend](/images/suspend.png)","source":"_posts/chaos/Adsense被暂停投放广告了.md","raw":"---\ntitle: Adsense被暂停投放广告了\ndate: 2019-10-05 15:23:52\ntags: 杂事\n---\n\n今天上午，Adsense突然告诉我。广告投放暂停了，百思不得解，用analystic 看了一下有很多未知设备访问。\n\n\n\n<!--more-->\n\n\n\n估计是因为这个被停的吧。网上查了一上，要等一个周左右才能解封，按照每天20刀的话，我至少损失150刀的广告费。但是现在还不知道能不能解封呢。唉。。。\n\n附图：\n\n![suspend](/images/suspend.png)","slug":"chaos/Adsense被暂停投放广告了","published":1,"updated":"2020-03-20T07:42:35.184Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw657000o98kif5cj7ic6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天上午，Adsense突然告诉我。广告投放暂停了，百思不得解，用analystic 看了一下有很多未知设备访问。</p>\n<a id=\"more\"></a>\n\n\n\n<p>估计是因为这个被停的吧。网上查了一上，要等一个周左右才能解封，按照每天20刀的话，我至少损失150刀的广告费。但是现在还不知道能不能解封呢。唉。。。</p>\n<p>附图：</p>\n<p><img src=\"/images/suspend.png\" alt=\"suspend\"></p>\n","site":{"data":{}},"excerpt":"<p>今天上午，Adsense突然告诉我。广告投放暂停了，百思不得解，用analystic 看了一下有很多未知设备访问。</p>","more":"<p>估计是因为这个被停的吧。网上查了一上，要等一个周左右才能解封，按照每天20刀的话，我至少损失150刀的广告费。但是现在还不知道能不能解封呢。唉。。。</p>\n<p>附图：</p>\n<p><img src=\"/images/suspend.png\" alt=\"suspend\"></p>"},{"title":"In The Midnight","date":"2020-01-08T16:30:42.000Z","keywords":null,"description":null,"_content":"\nI don't know why I am still awake. I think this should be a habit of mine. But it could be a suicide behavior. And there is something disturb me . And I will don't want talk about it here.\n\n\n\n<!--more-->\n\n\n\nLife is harder than you think it should be. Just smile and face it straightly, totally bullshit.\n\nLife sucks.\n\n","source":"_posts/chaos/In-The-Midnight.md","raw":"---\ntitle: In The Midnight\ndate: 2020-01-09 00:30:42\ntags: chaos\nkeywords:\ndescription:\n---\n\nI don't know why I am still awake. I think this should be a habit of mine. But it could be a suicide behavior. And there is something disturb me . And I will don't want talk about it here.\n\n\n\n<!--more-->\n\n\n\nLife is harder than you think it should be. Just smile and face it straightly, totally bullshit.\n\nLife sucks.\n\n","slug":"chaos/In-The-Midnight","published":1,"updated":"2020-03-20T07:42:35.186Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw659000p98ki8shrd8ze","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>I don’t know why I am still awake. I think this should be a habit of mine. But it could be a suicide behavior. And there is something disturb me . And I will don’t want talk about it here.</p>\n<a id=\"more\"></a>\n\n\n\n<p>Life is harder than you think it should be. Just smile and face it straightly, totally bullshit.</p>\n<p>Life sucks.</p>\n","site":{"data":{}},"excerpt":"<p>I don’t know why I am still awake. I think this should be a habit of mine. But it could be a suicide behavior. And there is something disturb me . And I will don’t want talk about it here.</p>","more":"<p>Life is harder than you think it should be. Just smile and face it straightly, totally bullshit.</p>\n<p>Life sucks.</p>"},{"title":"Something You Should Not Ignore","date":"2020-02-06T14:24:18.000Z","keywords":null,"description":null,"_content":"\nRecently Coronavirus related news are too many to bear. Even when you want some news that are not about the Virus you will find it hard to receive.\n\n\n\n<!--more-->\n\n\n\nIt's true that the outbreak is a disaster caused by Bureaucracies'  ignorance. And still the officials are propagandizing those people who are contributing on sacrifice of doctors and nurses or just normal person who did something benefit for containing the disaster. \n\nI am so sick of propaganda. Whatever the situation is they just can not stop doing propagandizing. I do not know how to tell it, but i do feel bad for every Chinese suffering.\n\n","source":"_posts/chaos/Something-You-Should-Not-Ignore.md","raw":"---\ntitle: Something You Should Not Ignore\ndate: 2020-02-06 22:24:18\ntags: chaos\nkeywords:\ndescription:\n---\n\nRecently Coronavirus related news are too many to bear. Even when you want some news that are not about the Virus you will find it hard to receive.\n\n\n\n<!--more-->\n\n\n\nIt's true that the outbreak is a disaster caused by Bureaucracies'  ignorance. And still the officials are propagandizing those people who are contributing on sacrifice of doctors and nurses or just normal person who did something benefit for containing the disaster. \n\nI am so sick of propaganda. Whatever the situation is they just can not stop doing propagandizing. I do not know how to tell it, but i do feel bad for every Chinese suffering.\n\n","slug":"chaos/Something-You-Should-Not-Ignore","published":1,"updated":"2020-03-20T07:42:35.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65c000s98kiddoe2kbg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Recently Coronavirus related news are too many to bear. Even when you want some news that are not about the Virus you will find it hard to receive.</p>\n<a id=\"more\"></a>\n\n\n\n<p>It’s true that the outbreak is a disaster caused by Bureaucracies’  ignorance. And still the officials are propagandizing those people who are contributing on sacrifice of doctors and nurses or just normal person who did something benefit for containing the disaster. </p>\n<p>I am so sick of propaganda. Whatever the situation is they just can not stop doing propagandizing. I do not know how to tell it, but i do feel bad for every Chinese suffering.</p>\n","site":{"data":{}},"excerpt":"<p>Recently Coronavirus related news are too many to bear. Even when you want some news that are not about the Virus you will find it hard to receive.</p>","more":"<p>It’s true that the outbreak is a disaster caused by Bureaucracies’  ignorance. And still the officials are propagandizing those people who are contributing on sacrifice of doctors and nurses or just normal person who did something benefit for containing the disaster. </p>\n<p>I am so sick of propaganda. Whatever the situation is they just can not stop doing propagandizing. I do not know how to tell it, but i do feel bad for every Chinese suffering.</p>"},{"title":"Starting Today","date":"2019-10-12T03:10:00.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/chaos/Starting-Today.md","raw":"---\ntitle: Starting Today\ndate: 2019-10-12 11:10:00\ntags: 杂事\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"chaos/Starting-Today","published":1,"updated":"2020-03-20T07:42:35.191Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65e000t98kier5ycdyc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"feel like to write something","date":"2020-01-07T15:17:31.000Z","keywords":null,"description":null,"_content":"\nLast night find something interesting that I wanna know how much rent will pay for 200 square. I went to a friend girl, well , she answered my question but I don't understand why she did not answer last night but tonight. What fuck you doing mate? Maybe it's time to cut this bullshit relationship off. Shit!\n\n\n\n<!--more-->\n\n\n\nAnother thing renewed my domain [www.luopandeng.com](luopandeng.com) two years $24.\n\nAnd PV today maybe strike highest level since this site created. So amazing! \n\nFUCK.","source":"_posts/chaos/feel-like-to-write-something.md","raw":"---\ntitle: feel like to write something\ndate: 2020-01-07 23:17:31\ntags: chaos\nkeywords:\ndescription:\n---\n\nLast night find something interesting that I wanna know how much rent will pay for 200 square. I went to a friend girl, well , she answered my question but I don't understand why she did not answer last night but tonight. What fuck you doing mate? Maybe it's time to cut this bullshit relationship off. Shit!\n\n\n\n<!--more-->\n\n\n\nAnother thing renewed my domain [www.luopandeng.com](luopandeng.com) two years $24.\n\nAnd PV today maybe strike highest level since this site created. So amazing! \n\nFUCK.","slug":"chaos/feel-like-to-write-something","published":1,"updated":"2020-03-20T07:42:35.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65f000v98ki41y79yrx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Last night find something interesting that I wanna know how much rent will pay for 200 square. I went to a friend girl, well , she answered my question but I don’t understand why she did not answer last night but tonight. What fuck you doing mate? Maybe it’s time to cut this bullshit relationship off. Shit!</p>\n<a id=\"more\"></a>\n\n\n\n<p>Another thing renewed my domain <a href=\"luopandeng.com\">www.luopandeng.com</a> two years $24.</p>\n<p>And PV today maybe strike highest level since this site created. So amazing! </p>\n<p>FUCK.</p>\n","site":{"data":{}},"excerpt":"<p>Last night find something interesting that I wanna know how much rent will pay for 200 square. I went to a friend girl, well , she answered my question but I don’t understand why she did not answer last night but tonight. What fuck you doing mate? Maybe it’s time to cut this bullshit relationship off. Shit!</p>","more":"<p>Another thing renewed my domain <a href=\"luopandeng.com\">www.luopandeng.com</a> two years $24.</p>\n<p>And PV today maybe strike highest level since this site created. So amazing! </p>\n<p>FUCK.</p>"},{"title":"什么是隐私","date":"2020-03-26T12:29:52.000Z","keywords":"隐私","description":"洗澡的时候突然想到了下午送来的快递","_content":"\n今天上海下雨了，挺不好意思今天下单的。让快递员冒雨送快递，心里蛮过意不去的。说起来挺尴尬的，在房间里坐着没有听到他敲门的声音，还让人家打了个电话。其实下单的时候眼看天就放晴了。。。好了，进入正题。\n\n\n\n<!--more-->\n\n\n\n接到快递员的电话时，他说我的快递是牙膏，嗯，不错，的确是牙膏。可我的问题是，他怎么就知道我的东西是牙膏呢？首先快递包装上以及快递单上都没有注明（写下此文前还专门找到包装箱看了一下，确认是没有的）。那么这个快递箱里面的东西快递员是怎么知道的呢？应该是他从手持扫描设备中知道的，那么问题来了，这样一来的话，你不管买了什么东西，包装再好也没用，终端快递员是知道的，那其所谓的宣传隐私包装其实就只是包装而已，送货的人还是知道的。\n\n所以，京东自营平台能提供给你的隐私也只是除京东以外的人不了解而已。\n\n\n\n所以隐私是有边界的。要保护自己的隐私就需要知道隐私的边界在哪里。","source":"_posts/chaos/什么是隐私.md","raw":"---\ntitle: 什么是隐私\ndate: 2020-03-26 20:29:52\ntags: chaos\nkeywords: 隐私\ndescription: 洗澡的时候突然想到了下午送来的快递\n---\n\n今天上海下雨了，挺不好意思今天下单的。让快递员冒雨送快递，心里蛮过意不去的。说起来挺尴尬的，在房间里坐着没有听到他敲门的声音，还让人家打了个电话。其实下单的时候眼看天就放晴了。。。好了，进入正题。\n\n\n\n<!--more-->\n\n\n\n接到快递员的电话时，他说我的快递是牙膏，嗯，不错，的确是牙膏。可我的问题是，他怎么就知道我的东西是牙膏呢？首先快递包装上以及快递单上都没有注明（写下此文前还专门找到包装箱看了一下，确认是没有的）。那么这个快递箱里面的东西快递员是怎么知道的呢？应该是他从手持扫描设备中知道的，那么问题来了，这样一来的话，你不管买了什么东西，包装再好也没用，终端快递员是知道的，那其所谓的宣传隐私包装其实就只是包装而已，送货的人还是知道的。\n\n所以，京东自营平台能提供给你的隐私也只是除京东以外的人不了解而已。\n\n\n\n所以隐私是有边界的。要保护自己的隐私就需要知道隐私的边界在哪里。","slug":"chaos/什么是隐私","published":1,"updated":"2020-03-27T00:19:59.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65h000x98ki31lt0rf7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天上海下雨了，挺不好意思今天下单的。让快递员冒雨送快递，心里蛮过意不去的。说起来挺尴尬的，在房间里坐着没有听到他敲门的声音，还让人家打了个电话。其实下单的时候眼看天就放晴了。。。好了，进入正题。</p>\n<a id=\"more\"></a>\n\n\n\n<p>接到快递员的电话时，他说我的快递是牙膏，嗯，不错，的确是牙膏。可我的问题是，他怎么就知道我的东西是牙膏呢？首先快递包装上以及快递单上都没有注明（写下此文前还专门找到包装箱看了一下，确认是没有的）。那么这个快递箱里面的东西快递员是怎么知道的呢？应该是他从手持扫描设备中知道的，那么问题来了，这样一来的话，你不管买了什么东西，包装再好也没用，终端快递员是知道的，那其所谓的宣传隐私包装其实就只是包装而已，送货的人还是知道的。</p>\n<p>所以，京东自营平台能提供给你的隐私也只是除京东以外的人不了解而已。</p>\n<p>所以隐私是有边界的。要保护自己的隐私就需要知道隐私的边界在哪里。</p>\n","site":{"data":{}},"excerpt":"<p>今天上海下雨了，挺不好意思今天下单的。让快递员冒雨送快递，心里蛮过意不去的。说起来挺尴尬的，在房间里坐着没有听到他敲门的声音，还让人家打了个电话。其实下单的时候眼看天就放晴了。。。好了，进入正题。</p>","more":"<p>接到快递员的电话时，他说我的快递是牙膏，嗯，不错，的确是牙膏。可我的问题是，他怎么就知道我的东西是牙膏呢？首先快递包装上以及快递单上都没有注明（写下此文前还专门找到包装箱看了一下，确认是没有的）。那么这个快递箱里面的东西快递员是怎么知道的呢？应该是他从手持扫描设备中知道的，那么问题来了，这样一来的话，你不管买了什么东西，包装再好也没用，终端快递员是知道的，那其所谓的宣传隐私包装其实就只是包装而已，送货的人还是知道的。</p>\n<p>所以，京东自营平台能提供给你的隐私也只是除京东以外的人不了解而已。</p>\n<p>所以隐私是有边界的。要保护自己的隐私就需要知道隐私的边界在哪里。</p>"},{"title":"备案今日过审","date":"2019-11-18T05:58:11.000Z","keywords":null,"description":null,"_content":"\n如题，备案今日过审，可以玩的东西又多了。当然备案的域名不是这个博客的域名。接下来就要搭建一些比较有意思的应用了。\n\n\n\n<!--more-->\n\n\n\n过审域名：[www.stupromo.com](www.stupromo.com)\n\n解析放在了 `CloudFlare` ,为什么要放在那里呢，主要是因为那里有好用的`API`可以方便我利用我的公网`IP`做一些好玩的事情。哈哈哈 200M 带宽不能浪费了呀。\n\n","source":"_posts/chaos/备案今日过审.md","raw":"---\ntitle: 备案今日过审\ndate: 2019-11-18 13:58:11\ntags: 杂事\nkeywords:\ndescription:\n---\n\n如题，备案今日过审，可以玩的东西又多了。当然备案的域名不是这个博客的域名。接下来就要搭建一些比较有意思的应用了。\n\n\n\n<!--more-->\n\n\n\n过审域名：[www.stupromo.com](www.stupromo.com)\n\n解析放在了 `CloudFlare` ,为什么要放在那里呢，主要是因为那里有好用的`API`可以方便我利用我的公网`IP`做一些好玩的事情。哈哈哈 200M 带宽不能浪费了呀。\n\n","slug":"chaos/备案今日过审","published":1,"updated":"2020-03-20T07:42:35.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65i001098ki2qgp8ngs","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>如题，备案今日过审，可以玩的东西又多了。当然备案的域名不是这个博客的域名。接下来就要搭建一些比较有意思的应用了。</p>\n<a id=\"more\"></a>\n\n\n\n<p>过审域名：<a href=\"www.stupromo.com\">www.stupromo.com</a></p>\n<p>解析放在了 <code>CloudFlare</code> ,为什么要放在那里呢，主要是因为那里有好用的<code>API</code>可以方便我利用我的公网<code>IP</code>做一些好玩的事情。哈哈哈 200M 带宽不能浪费了呀。</p>\n","site":{"data":{}},"excerpt":"<p>如题，备案今日过审，可以玩的东西又多了。当然备案的域名不是这个博客的域名。接下来就要搭建一些比较有意思的应用了。</p>","more":"<p>过审域名：<a href=\"www.stupromo.com\">www.stupromo.com</a></p>\n<p>解析放在了 <code>CloudFlare</code> ,为什么要放在那里呢，主要是因为那里有好用的<code>API</code>可以方便我利用我的公网<code>IP</code>做一些好玩的事情。哈哈哈 200M 带宽不能浪费了呀。</p>"},{"title":"无事可写","date":"2019-10-03T14:15:41.000Z","_content":"\n今天学的东西不多，写了一道算法题。然后把最近两天困扰我的逆向问题解决了。\n\n\n\n<!--more-->\n\n\n\n解决的方法已经写在另一篇文章了，感觉目前这家公司的问题在于管理体系不完善，应对问题的能力有点弱。问题想的也不周全，另外一个很大的原因是系统开发部门能力太弱鸡了。这只是我的猜测。如果是我要做这样一件事的话，我肯定会把系统固件在recovery这里加密，每次升级只能通过系统自己下载，像手机一样自动升级。当然这个风险很大，也许他们经过测算，或许目前的方式更好吧。商业有商业的逻辑，技术有技术的思考。","source":"_posts/chaos/无事可写.md","raw":"---\ntitle: 无事可写\ndate: 2019-10-03 22:15:41\ntags: 杂事\n---\n\n今天学的东西不多，写了一道算法题。然后把最近两天困扰我的逆向问题解决了。\n\n\n\n<!--more-->\n\n\n\n解决的方法已经写在另一篇文章了，感觉目前这家公司的问题在于管理体系不完善，应对问题的能力有点弱。问题想的也不周全，另外一个很大的原因是系统开发部门能力太弱鸡了。这只是我的猜测。如果是我要做这样一件事的话，我肯定会把系统固件在recovery这里加密，每次升级只能通过系统自己下载，像手机一样自动升级。当然这个风险很大，也许他们经过测算，或许目前的方式更好吧。商业有商业的逻辑，技术有技术的思考。","slug":"chaos/无事可写","published":1,"updated":"2020-03-20T07:42:35.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65j001298kihp24asnd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天学的东西不多，写了一道算法题。然后把最近两天困扰我的逆向问题解决了。</p>\n<a id=\"more\"></a>\n\n\n\n<p>解决的方法已经写在另一篇文章了，感觉目前这家公司的问题在于管理体系不完善，应对问题的能力有点弱。问题想的也不周全，另外一个很大的原因是系统开发部门能力太弱鸡了。这只是我的猜测。如果是我要做这样一件事的话，我肯定会把系统固件在recovery这里加密，每次升级只能通过系统自己下载，像手机一样自动升级。当然这个风险很大，也许他们经过测算，或许目前的方式更好吧。商业有商业的逻辑，技术有技术的思考。</p>\n","site":{"data":{}},"excerpt":"<p>今天学的东西不多，写了一道算法题。然后把最近两天困扰我的逆向问题解决了。</p>","more":"<p>解决的方法已经写在另一篇文章了，感觉目前这家公司的问题在于管理体系不完善，应对问题的能力有点弱。问题想的也不周全，另外一个很大的原因是系统开发部门能力太弱鸡了。这只是我的猜测。如果是我要做这样一件事的话，我肯定会把系统固件在recovery这里加密，每次升级只能通过系统自己下载，像手机一样自动升级。当然这个风险很大，也许他们经过测算，或许目前的方式更好吧。商业有商业的逻辑，技术有技术的思考。</p>"},{"title":"看新闻有感","date":"2019-09-30T14:12:15.000Z","_content":"\n今天下午看到一则新闻，说是总书记接见了刚获得冠军的女排队员们。\n\n看完就立刻想到了早上看到新闻，女排连夜乘坐国航特别包机回国。在最近几天也有人在网上对比女排跟国足的待遇。想必跟这个也有一定关系。。。\n\n\n\n<!--more-->\n\n\n\n还是要多读书，不然一个明显的破绽你都看不出来就真的太蠢了。。。\n\n附图两张：\n\n![包机篇](/images/特别.png)\n\n\n\n![接见篇](/images/接见.png)\n\n","source":"_posts/chaos/看新闻有感.md","raw":"---\ntitle: 看新闻有感\ndate: 2019-09-30 22:12:15\ntags: 杂事\n---\n\n今天下午看到一则新闻，说是总书记接见了刚获得冠军的女排队员们。\n\n看完就立刻想到了早上看到新闻，女排连夜乘坐国航特别包机回国。在最近几天也有人在网上对比女排跟国足的待遇。想必跟这个也有一定关系。。。\n\n\n\n<!--more-->\n\n\n\n还是要多读书，不然一个明显的破绽你都看不出来就真的太蠢了。。。\n\n附图两张：\n\n![包机篇](/images/特别.png)\n\n\n\n![接见篇](/images/接见.png)\n\n","slug":"chaos/看新闻有感","published":1,"updated":"2020-03-20T07:42:35.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65m001598ki2v4b302t","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天下午看到一则新闻，说是总书记接见了刚获得冠军的女排队员们。</p>\n<p>看完就立刻想到了早上看到新闻，女排连夜乘坐国航特别包机回国。在最近几天也有人在网上对比女排跟国足的待遇。想必跟这个也有一定关系。。。</p>\n<a id=\"more\"></a>\n\n\n\n<p>还是要多读书，不然一个明显的破绽你都看不出来就真的太蠢了。。。</p>\n<p>附图两张：</p>\n<p><img src=\"/images/%E7%89%B9%E5%88%AB.png\" alt=\"包机篇\"></p>\n<p><img src=\"/images/%E6%8E%A5%E8%A7%81.png\" alt=\"接见篇\"></p>\n","site":{"data":{}},"excerpt":"<p>今天下午看到一则新闻，说是总书记接见了刚获得冠军的女排队员们。</p>\n<p>看完就立刻想到了早上看到新闻，女排连夜乘坐国航特别包机回国。在最近几天也有人在网上对比女排跟国足的待遇。想必跟这个也有一定关系。。。</p>","more":"<p>还是要多读书，不然一个明显的破绽你都看不出来就真的太蠢了。。。</p>\n<p>附图两张：</p>\n<p><img src=\"/images/%E7%89%B9%E5%88%AB.png\" alt=\"包机篇\"></p>\n<p><img src=\"/images/%E6%8E%A5%E8%A7%81.png\" alt=\"接见篇\"></p>"},{"title":"碎碎念","date":"2020-03-26T12:48:44.000Z","keywords":"日常","description":null,"_content":"\n灾难面前都是弱弱者，这个时候逞英雄是不是就有点弱智呢？武汉这次疫情之严重完全是人为造成的。也许体制内最大的问题就在于不敢担责任吧。\n\n\n\n<!--more-->\n\n\n\n果然，人年纪越大越容易被各种感人的场面感动。丧失理性，这还不是可怕的地方，可怕的是有人会利用这种情绪。所以说，遇到问题应该先让脑子转起来。","source":"_posts/chaos/碎碎念.md","raw":"---\ntitle: 碎碎念\ndate: 2020-03-26 20:48:44\ntags: chaos\nkeywords: 日常 \ndescription:\n---\n\n灾难面前都是弱弱者，这个时候逞英雄是不是就有点弱智呢？武汉这次疫情之严重完全是人为造成的。也许体制内最大的问题就在于不敢担责任吧。\n\n\n\n<!--more-->\n\n\n\n果然，人年纪越大越容易被各种感人的场面感动。丧失理性，这还不是可怕的地方，可怕的是有人会利用这种情绪。所以说，遇到问题应该先让脑子转起来。","slug":"chaos/碎碎念","published":1,"updated":"2020-03-27T00:31:58.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65n001798ki9a1z7rwb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>灾难面前都是弱弱者，这个时候逞英雄是不是就有点弱智呢？武汉这次疫情之严重完全是人为造成的。也许体制内最大的问题就在于不敢担责任吧。</p>\n<a id=\"more\"></a>\n\n\n\n<p>果然，人年纪越大越容易被各种感人的场面感动。丧失理性，这还不是可怕的地方，可怕的是有人会利用这种情绪。所以说，遇到问题应该先让脑子转起来。</p>\n","site":{"data":{}},"excerpt":"<p>灾难面前都是弱弱者，这个时候逞英雄是不是就有点弱智呢？武汉这次疫情之严重完全是人为造成的。也许体制内最大的问题就在于不敢担责任吧。</p>","more":"<p>果然，人年纪越大越容易被各种感人的场面感动。丧失理性，这还不是可怕的地方，可怕的是有人会利用这种情绪。所以说，遇到问题应该先让脑子转起来。</p>"},{"title":"观礼有感","date":"2019-10-01T06:40:47.000Z","_content":"\n\n\n今天是共产党领导的新中国成立`70`周年的日子，举国欢庆的日子。看着现代化的武器装备以及精神饱满的各级军官们，内心翻腾，一种自豪感油然而生。看到各种先进武器的时候不禁想到：\n\n\n\n<!--more-->\n\n\n\n这些武器是我们敢于同世界霸权说不的底气，也是我们对付敌人的有力武器。目前来看，世界上没有什么力量能够将中国按在地方摩擦了，但是需要警醒的是内部的一些因素。\n\n看阅兵的过程中，在脑海中出现的一句话是“识实务者为俊杰”。我是越来越相信丛林法则了，弱肉强食，适者生存这样才是符合自然界的规则。希望更多的人能意识到这一点，这样一来至少不会在这个社会上遇到事情的时候不知道该怎么回应。其实哪里有什么正义，说到底还是比谁的拳头硬谁的拳头多。清醒点，真的，你会很开心。","source":"_posts/chaos/观礼有感.md","raw":"---\ntitle: 观礼有感\ndate: 2019-10-01 14:40:47\ntags: 杂事\n---\n\n\n\n今天是共产党领导的新中国成立`70`周年的日子，举国欢庆的日子。看着现代化的武器装备以及精神饱满的各级军官们，内心翻腾，一种自豪感油然而生。看到各种先进武器的时候不禁想到：\n\n\n\n<!--more-->\n\n\n\n这些武器是我们敢于同世界霸权说不的底气，也是我们对付敌人的有力武器。目前来看，世界上没有什么力量能够将中国按在地方摩擦了，但是需要警醒的是内部的一些因素。\n\n看阅兵的过程中，在脑海中出现的一句话是“识实务者为俊杰”。我是越来越相信丛林法则了，弱肉强食，适者生存这样才是符合自然界的规则。希望更多的人能意识到这一点，这样一来至少不会在这个社会上遇到事情的时候不知道该怎么回应。其实哪里有什么正义，说到底还是比谁的拳头硬谁的拳头多。清醒点，真的，你会很开心。","slug":"chaos/观礼有感","published":1,"updated":"2020-03-20T07:42:35.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65p001a98kic2km6c7a","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天是共产党领导的新中国成立<code>70</code>周年的日子，举国欢庆的日子。看着现代化的武器装备以及精神饱满的各级军官们，内心翻腾，一种自豪感油然而生。看到各种先进武器的时候不禁想到：</p>\n<a id=\"more\"></a>\n\n\n\n<p>这些武器是我们敢于同世界霸权说不的底气，也是我们对付敌人的有力武器。目前来看，世界上没有什么力量能够将中国按在地方摩擦了，但是需要警醒的是内部的一些因素。</p>\n<p>看阅兵的过程中，在脑海中出现的一句话是“识实务者为俊杰”。我是越来越相信丛林法则了，弱肉强食，适者生存这样才是符合自然界的规则。希望更多的人能意识到这一点，这样一来至少不会在这个社会上遇到事情的时候不知道该怎么回应。其实哪里有什么正义，说到底还是比谁的拳头硬谁的拳头多。清醒点，真的，你会很开心。</p>\n","site":{"data":{}},"excerpt":"<p>今天是共产党领导的新中国成立<code>70</code>周年的日子，举国欢庆的日子。看着现代化的武器装备以及精神饱满的各级军官们，内心翻腾，一种自豪感油然而生。看到各种先进武器的时候不禁想到：</p>","more":"<p>这些武器是我们敢于同世界霸权说不的底气，也是我们对付敌人的有力武器。目前来看，世界上没有什么力量能够将中国按在地方摩擦了，但是需要警醒的是内部的一些因素。</p>\n<p>看阅兵的过程中，在脑海中出现的一句话是“识实务者为俊杰”。我是越来越相信丛林法则了，弱肉强食，适者生存这样才是符合自然界的规则。希望更多的人能意识到这一点，这样一来至少不会在这个社会上遇到事情的时候不知道该怎么回应。其实哪里有什么正义，说到底还是比谁的拳头硬谁的拳头多。清醒点，真的，你会很开心。</p>"},{"title":"跌跌撞撞写博客","date":"2019-09-28T04:00:45.000Z","_content":"\n我对博客的质量要求不高，仅仅当作是一个记录的地方。\n\n\n\n<!--more-->\n\n\n\n但也不是一定要写点什么，更多的是自己的一点感悟，想写的时候就写了，没有什么特殊的地方。博客的应该不用担心空间的问题，仅仅是文字的话写个几十年应该不用换空间。写这篇主要是因为博客上已经出现了下一页的按钮，哈哈哈。小小的记念一下而已。","source":"_posts/chaos/跌跌撞撞写博客.md","raw":"---\ntitle: 跌跌撞撞写博客\ndate: 2019-09-28 12:00:45\ntags: 杂事\n---\n\n我对博客的质量要求不高，仅仅当作是一个记录的地方。\n\n\n\n<!--more-->\n\n\n\n但也不是一定要写点什么，更多的是自己的一点感悟，想写的时候就写了，没有什么特殊的地方。博客的应该不用担心空间的问题，仅仅是文字的话写个几十年应该不用换空间。写这篇主要是因为博客上已经出现了下一页的按钮，哈哈哈。小小的记念一下而已。","slug":"chaos/跌跌撞撞写博客","published":1,"updated":"2020-03-20T07:42:35.204Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65q001c98kihnnb19jp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>我对博客的质量要求不高，仅仅当作是一个记录的地方。</p>\n<a id=\"more\"></a>\n\n\n\n<p>但也不是一定要写点什么，更多的是自己的一点感悟，想写的时候就写了，没有什么特殊的地方。博客的应该不用担心空间的问题，仅仅是文字的话写个几十年应该不用换空间。写这篇主要是因为博客上已经出现了下一页的按钮，哈哈哈。小小的记念一下而已。</p>\n","site":{"data":{}},"excerpt":"<p>我对博客的质量要求不高，仅仅当作是一个记录的地方。</p>","more":"<p>但也不是一定要写点什么，更多的是自己的一点感悟，想写的时候就写了，没有什么特殊的地方。博客的应该不用担心空间的问题，仅仅是文字的话写个几十年应该不用换空间。写这篇主要是因为博客上已经出现了下一页的按钮，哈哈哈。小小的记念一下而已。</p>"},{"title":"优秀博客收集","date":"2019-09-29T12:00:06.000Z","_content":"\n# 一些博客的链接\n\n\n\n<!--more-->\n\n\n\n这里放了一些息查资料时看到质量还不错的，最起码对我有帮助的。\n\n","source":"_posts/fun/优秀博客收集.md","raw":"---\ntitle: 优秀博客收集\ndate: 2019-09-29 20:00:06\ntags: 有意的东西\n---\n\n# 一些博客的链接\n\n\n\n<!--more-->\n\n\n\n这里放了一些息查资料时看到质量还不错的，最起码对我有帮助的。\n\n","slug":"fun/优秀博客收集","published":1,"updated":"2020-03-20T07:42:35.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65s001f98ki4sfa9nkd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"一些博客的链接\"><a href=\"#一些博客的链接\" class=\"headerlink\" title=\"一些博客的链接\"></a>一些博客的链接</h1><a id=\"more\"></a>\n\n\n\n<p>这里放了一些息查资料时看到质量还不错的，最起码对我有帮助的。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"一些博客的链接\"><a href=\"#一些博客的链接\" class=\"headerlink\" title=\"一些博客的链接\"></a>一些博客的链接</h1>","more":"<p>这里放了一些息查资料时看到质量还不错的，最起码对我有帮助的。</p>"},{"title":"有用的学习链接","date":"2019-10-04T03:34:23.000Z","_content":"\n主要写一些查相关资料时，看到的有用的链接\n\n\n\n<!--more-->\n\n\n\n算法的时间与空间复杂度\n\n- 时间维度：是指执行当前算法所消耗的时间，我们通常用「时间复杂度」来描述。\n- 空间维度：是指执行当前算法需要占用多少内存空间，我们通常用「空间复杂度」来描述。\n\n1. 在 大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：**算法的渐进时间复杂度**。\n2. 空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度，同样反映的是一个趋势，我们用 S(n) 来定义。\n\n来源：[知乎](https://zhuanlan.zhihu.com/p/50479555)\n\n\n\n[http://www.fileformat.info](http://www.fileformat.info/)\n\n安卓相关：\n\n[斯坦福安卓课程2015年](https://web.stanford.edu/class/cs231m/syllabus.html)\n\n关于JVM优化的一些链接：\n\n[美团技术](https://tech.meituan.com/2017/12/29/jvm-optimize.html)\n\n[IBM技术社区](https://www.ibm.com/developerworks/cn/java/j-lo-jvm-optimize-experience/index.html)\n\n[一个华科硕士博客](https://crowhawk.github.io/2017/08/09/jvm_1/)\n\n[博客园-陈树义](https://www.cnblogs.com/chanshuyi/p/jvm_serial_07_jvm_class_loader_mechanism.html)\n\n\n\n","source":"_posts/fun/有用的学习链接.md","raw":"---\ntitle: 有用的学习链接\ndate: 2019-10-04 11:34:23\ntags: 有意思的东西\n---\n\n主要写一些查相关资料时，看到的有用的链接\n\n\n\n<!--more-->\n\n\n\n算法的时间与空间复杂度\n\n- 时间维度：是指执行当前算法所消耗的时间，我们通常用「时间复杂度」来描述。\n- 空间维度：是指执行当前算法需要占用多少内存空间，我们通常用「空间复杂度」来描述。\n\n1. 在 大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：**算法的渐进时间复杂度**。\n2. 空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度，同样反映的是一个趋势，我们用 S(n) 来定义。\n\n来源：[知乎](https://zhuanlan.zhihu.com/p/50479555)\n\n\n\n[http://www.fileformat.info](http://www.fileformat.info/)\n\n安卓相关：\n\n[斯坦福安卓课程2015年](https://web.stanford.edu/class/cs231m/syllabus.html)\n\n关于JVM优化的一些链接：\n\n[美团技术](https://tech.meituan.com/2017/12/29/jvm-optimize.html)\n\n[IBM技术社区](https://www.ibm.com/developerworks/cn/java/j-lo-jvm-optimize-experience/index.html)\n\n[一个华科硕士博客](https://crowhawk.github.io/2017/08/09/jvm_1/)\n\n[博客园-陈树义](https://www.cnblogs.com/chanshuyi/p/jvm_serial_07_jvm_class_loader_mechanism.html)\n\n\n\n","slug":"fun/有用的学习链接","published":1,"updated":"2020-03-20T07:42:35.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65u001h98kihmwc12bz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>主要写一些查相关资料时，看到的有用的链接</p>\n<a id=\"more\"></a>\n\n\n\n<p>算法的时间与空间复杂度</p>\n<ul>\n<li>时间维度：是指执行当前算法所消耗的时间，我们通常用「时间复杂度」来描述。</li>\n<li>空间维度：是指执行当前算法需要占用多少内存空间，我们通常用「空间复杂度」来描述。</li>\n</ul>\n<ol>\n<li>在 大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：<strong>算法的渐进时间复杂度</strong>。</li>\n<li>空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度，同样反映的是一个趋势，我们用 S(n) 来定义。</li>\n</ol>\n<p>来源：<a href=\"https://zhuanlan.zhihu.com/p/50479555\" target=\"_blank\" rel=\"noopener\">知乎</a></p>\n<p><a href=\"http://www.fileformat.info/\" target=\"_blank\" rel=\"noopener\">http://www.fileformat.info</a></p>\n<p>安卓相关：</p>\n<p><a href=\"https://web.stanford.edu/class/cs231m/syllabus.html\" target=\"_blank\" rel=\"noopener\">斯坦福安卓课程2015年</a></p>\n<p>关于JVM优化的一些链接：</p>\n<p><a href=\"https://tech.meituan.com/2017/12/29/jvm-optimize.html\" target=\"_blank\" rel=\"noopener\">美团技术</a></p>\n<p><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-jvm-optimize-experience/index.html\" target=\"_blank\" rel=\"noopener\">IBM技术社区</a></p>\n<p><a href=\"https://crowhawk.github.io/2017/08/09/jvm_1/\" target=\"_blank\" rel=\"noopener\">一个华科硕士博客</a></p>\n<p><a href=\"https://www.cnblogs.com/chanshuyi/p/jvm_serial_07_jvm_class_loader_mechanism.html\" target=\"_blank\" rel=\"noopener\">博客园-陈树义</a></p>\n","site":{"data":{}},"excerpt":"<p>主要写一些查相关资料时，看到的有用的链接</p>","more":"<p>算法的时间与空间复杂度</p>\n<ul>\n<li>时间维度：是指执行当前算法所消耗的时间，我们通常用「时间复杂度」来描述。</li>\n<li>空间维度：是指执行当前算法需要占用多少内存空间，我们通常用「空间复杂度」来描述。</li>\n</ul>\n<ol>\n<li>在 大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：<strong>算法的渐进时间复杂度</strong>。</li>\n<li>空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度，同样反映的是一个趋势，我们用 S(n) 来定义。</li>\n</ol>\n<p>来源：<a href=\"https://zhuanlan.zhihu.com/p/50479555\" target=\"_blank\" rel=\"noopener\">知乎</a></p>\n<p><a href=\"http://www.fileformat.info/\" target=\"_blank\" rel=\"noopener\">http://www.fileformat.info</a></p>\n<p>安卓相关：</p>\n<p><a href=\"https://web.stanford.edu/class/cs231m/syllabus.html\" target=\"_blank\" rel=\"noopener\">斯坦福安卓课程2015年</a></p>\n<p>关于JVM优化的一些链接：</p>\n<p><a href=\"https://tech.meituan.com/2017/12/29/jvm-optimize.html\" target=\"_blank\" rel=\"noopener\">美团技术</a></p>\n<p><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-jvm-optimize-experience/index.html\" target=\"_blank\" rel=\"noopener\">IBM技术社区</a></p>\n<p><a href=\"https://crowhawk.github.io/2017/08/09/jvm_1/\" target=\"_blank\" rel=\"noopener\">一个华科硕士博客</a></p>\n<p><a href=\"https://www.cnblogs.com/chanshuyi/p/jvm_serial_07_jvm_class_loader_mechanism.html\" target=\"_blank\" rel=\"noopener\">博客园-陈树义</a></p>"},{"title":"恢复：一年前的踩坑记录","date":"2019-07-19T14:46:01.000Z","_content":"最近几天在写一个小项目，在解析 XML 过程中遇到不少问题，这里写出来小结一下。\n\n\n\n<!--more-->\n\n\n\n起初没把 XML 解析想的过于简单，结果在动手去做的时候遇到了不少的问题。代码报错、空指针、路径不对、没有得到正确的解析结果等等一些问题。\n虽然通过谷歌最终都解决了问题，但是在解决问题的过程中也是遇到了不少的麻烦。整个业务的逻辑还没有理清楚。\n下一步就得好好地把逻辑弄清楚。\n\n暂时就写这么多吧。虽然没什么技术上的东西","source":"_posts/gone/恢复：一年前的踩坑记录.md","raw":"---\ntitle: 恢复：一年前的踩坑记录\ndate: 2019-07-19 22:46:01\ntags: 过去\n---\n最近几天在写一个小项目，在解析 XML 过程中遇到不少问题，这里写出来小结一下。\n\n\n\n<!--more-->\n\n\n\n起初没把 XML 解析想的过于简单，结果在动手去做的时候遇到了不少的问题。代码报错、空指针、路径不对、没有得到正确的解析结果等等一些问题。\n虽然通过谷歌最终都解决了问题，但是在解决问题的过程中也是遇到了不少的麻烦。整个业务的逻辑还没有理清楚。\n下一步就得好好地把逻辑弄清楚。\n\n暂时就写这么多吧。虽然没什么技术上的东西","slug":"gone/恢复：一年前的踩坑记录","published":1,"updated":"2020-03-20T07:42:35.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65v001k98kifseq9goa","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近几天在写一个小项目，在解析 XML 过程中遇到不少问题，这里写出来小结一下。</p>\n<a id=\"more\"></a>\n\n\n\n<p>起初没把 XML 解析想的过于简单，结果在动手去做的时候遇到了不少的问题。代码报错、空指针、路径不对、没有得到正确的解析结果等等一些问题。<br>虽然通过谷歌最终都解决了问题，但是在解决问题的过程中也是遇到了不少的麻烦。整个业务的逻辑还没有理清楚。<br>下一步就得好好地把逻辑弄清楚。</p>\n<p>暂时就写这么多吧。虽然没什么技术上的东西</p>\n","site":{"data":{}},"excerpt":"<p>最近几天在写一个小项目，在解析 XML 过程中遇到不少问题，这里写出来小结一下。</p>","more":"<p>起初没把 XML 解析想的过于简单，结果在动手去做的时候遇到了不少的问题。代码报错、空指针、路径不对、没有得到正确的解析结果等等一些问题。<br>虽然通过谷歌最终都解决了问题，但是在解决问题的过程中也是遇到了不少的麻烦。整个业务的逻辑还没有理清楚。<br>下一步就得好好地把逻辑弄清楚。</p>\n<p>暂时就写这么多吧。虽然没什么技术上的东西</p>"},{"title":"About Africa","date":"2020-03-07T03:07:11.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-Africa.md","raw":"---\ntitle: About Africa\ndate: 2020-03-07 11:07:11\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-Africa","published":1,"updated":"2020-03-20T07:42:35.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65x001m98kihwlc7xb9","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About China","date":"2020-03-07T03:03:04.000Z","keywords":"invest 投资 中国 china","description":null,"_content":"\n中国相关信息搜集\n\n\n\n<!--more-->\n\n\n\n2020/3/5 - 为深入贯彻习近平总书记重要指示精神，落实中央应对疫情工作领导小组部署，5日上午，中共中央政治局委员、国务院副总理孙春兰率中央指导组到武汉市青山区翠园社区、江汉区西桥社区，实地察看社区防控和群众生活保障情况。\n\n2020/3/5 - \n\n| <img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /> | <img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /> | <img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /> |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n|                                                              |                                                              |                                                              |\n\n2020/3/10 - 习近平到访武汉。\n\n","source":"_posts/invest/About-China.md","raw":"---\ntitle: About China\ndate: 2020-03-07 11:03:04\ntags: invest\nkeywords: invest 投资 中国 china\ndescription:\n---\n\n中国相关信息搜集\n\n\n\n<!--more-->\n\n\n\n2020/3/5 - 为深入贯彻习近平总书记重要指示精神，落实中央应对疫情工作领导小组部署，5日上午，中共中央政治局委员、国务院副总理孙春兰率中央指导组到武汉市青山区翠园社区、江汉区西桥社区，实地察看社区防控和群众生活保障情况。\n\n2020/3/5 - \n\n| <img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /> | <img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /> | <img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /> |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n|                                                              |                                                              |                                                              |\n\n2020/3/10 - 习近平到访武汉。\n\n","slug":"invest/About-China","published":1,"updated":"2020-03-20T07:42:35.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw65y001p98ki7kqy37yj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>中国相关信息搜集</p>\n<a id=\"more\"></a>\n\n\n\n<p>2020/3/5 - 为深入贯彻习近平总书记重要指示精神，落实中央应对疫情工作领导小组部署，5日上午，中共中央政治局委员、国务院副总理孙春兰率中央指导组到武汉市青山区翠园社区、江汉区西桥社区，实地察看社区防控和群众生活保障情况。</p>\n<p>2020/3/5 - </p>\n<table>\n<thead>\n<tr>\n<th><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /></th>\n<th><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /></th>\n<th><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /></th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>2020/3/10 - 习近平到访武汉。</p>\n","site":{"data":{}},"excerpt":"<p>中国相关信息搜集</p>","more":"<p>2020/3/5 - 为深入贯彻习近平总书记重要指示精神，落实中央应对疫情工作领导小组部署，5日上午，中共中央政治局委员、国务院副总理孙春兰率中央指导组到武汉市青山区翠园社区、江汉区西桥社区，实地察看社区防控和群众生活保障情况。</p>\n<p>2020/3/5 - </p>\n<table>\n<thead>\n<tr>\n<th><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /></th>\n<th><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /></th>\n<th><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/info.jpg\" alt=\"tg\" style=\"zoom: 33%;\" /></th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>2020/3/10 - 习近平到访武汉。</p>"},{"title":"About EU","date":"2020-03-07T03:07:05.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-EU.md","raw":"---\ntitle: About EU\ndate: 2020-03-07 11:07:05\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-EU","published":1,"updated":"2020-03-20T07:42:35.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw660001r98ki8lvx0nde","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About German","date":"2020-03-07T03:04:30.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-German.md","raw":"---\ntitle: About German\ndate: 2020-03-07 11:04:30\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-German","published":1,"updated":"2020-03-20T07:42:35.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw661001u98kid7kv2x0b","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About India","date":"2020-03-07T03:04:12.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-India.md","raw":"---\ntitle: About India\ndate: 2020-03-07 11:04:12\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-India","published":1,"updated":"2020-03-20T07:42:35.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw663001w98kidiv11qhx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About Japan","date":"2020-03-07T03:03:55.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-Japan.md","raw":"---\ntitle: About Japan\ndate: 2020-03-07 11:03:55\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-Japan","published":1,"updated":"2020-03-20T07:42:35.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw668001x98ki58nm3bpy","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About Korea","date":"2020-03-07T03:03:37.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-Korea.md","raw":"---\ntitle: About Korea\ndate: 2020-03-07 11:03:37\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-Korea","published":1,"updated":"2020-03-20T07:42:35.230Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66a002098ki4v07biog","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About Latin America","date":"2020-03-07T03:07:27.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-Latin-America.md","raw":"---\ntitle: About Latin America\ndate: 2020-03-07 11:07:27\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-Latin-America","published":1,"updated":"2020-03-20T07:42:35.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66b002198ki5mmvhf83","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About Middle East","date":"2020-03-07T03:07:16.000Z","keywords":"OPEC OIL 欧佩克 石油","description":null,"_content":"\n[OPEC](https://en.wikipedia.org/wiki/OPEC) include five countries Iran/Iraq/Kuwait/Saudi Arabia/Venezuela \n\nAnd this article will give attention to those countries.\n\n\n\n<!--more-->\n\n2020/3/6 - Saudis Plan Big Oil Output Hike, Beginning All-Out Price War\n\nSaudi Arabia plans to increase oil output next month, going well above 10 million barrels a day, as the kingdom responds aggressively to the collapse of its OPEC+ alliance with Russia.\n\nThe world’s largest oil exporter started a price war on Saturday by slashing the prices it sells crude into foreign markets by the most in at least 20 years, offering unprecedented discounts in Europe, the Far East and the U.S. to entice refiners to purchase Saudi crude at the expense of other suppliers.\n\nAt the same time, Saudi Arabia has privately told some market participants it could raise production much higher if needed, even going to a record of 12 million barrels a day, according to people familiar with the conversations, who asked not to be named to protect commercial relations. With demand being ravaged by the coronavirus outbreak, opening the taps like that would throw oil market into chaos.\n\n\n\n\n\n2020/3/8 - KEY POINTS\n\n- Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, have reportedly been held.\n- Sources say the move is aimed at heading off threats to the Crown Prince.\n- Crown Prince Mohammed bin Salman has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.\n\n\n\nSaudi Arabia has detained three senior Saudi princes including Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, for allegedly planning a coup, sources with knowledge of the matter said.\n\nCrown Prince Mohammed bin Salman, King Salman’s son and de facto ruler of the country, which is the world’s top oil exporter and a key U.S. ally, has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.\n\n![RT: Mohammed bin Salman, 191014](https://image.cnbcfm.com/api/v1/image/106182057-1571142619494rts2r42w.jpg?v=1571142700&w=678&h=381)\n\nSaudi Arabia’s Crown Prince Mohammed bin Salman attends a meeting with Russian President Vladimir Putin in Riyadh, Saudi Arabia, October 14, 2019.\n\nAlexei Nikolsky | Sputnik | Kremlin via Reuters\n\n\n\nLater that year, he arrested several royals and other prominent Saudis, holding them for months at Riyadh’s Ritz Carlton hotel, in an anti-corruption campaign that caused shockwaves at home and abroad.\n\nFour sources told Reuters that Prince Ahmed and Mohammed bin Nayef were detained in the latest operation. Two sources, including a regional source, said Mohammed bin Nayef and his half-brother, Nawaf, were detained while at a private desert camp on Friday.\n\nCrown Prince Mohammed, who is also referred to as MbS, “accused them (the princes) of conducting contacts with foreign powers, including the Americans and others, to carry out a coup d’etat,” the regional source said.\n\n“With these arrests, MbS consolidated his full grip on power. It’s over with this purge,” the source added, indicating that no rivals remain to challenge his succession to the throne.\n\n\n\nAnother source said the princes were accused of “treason”.\n\nThe Saudi government media office did not respond to a Reuters request for comment on the detentions, which were first reported by The Wall Street Journal.\n\nThe regional source said King Salman had approved the latest detentions.\n\n“The king signed off on the arrests,” the source said, adding that the king is in a mental and physically sound state.\n\nThe king met British Foreign Secretary Dominic Raab on Thursday in the Saudi capital Riyadh. Both King Salman and the crown prince attended a cabinet meeting on Tuesday.\n\nWATCH NOW\n\nVIDEO02:08\n\nExpect a ‘youth transformation’ in Saudi Arabia by 2030: SABIC CEO\n\n\n\nCrown Prince Mohammed, 34, has fuelled resentment among some prominent branches of the ruling family by tightening his grip on power. Some critics have questioned his ability to lead after the 2018 murder of a prominent journalist by Saudi agents and the largest-ever attack on Saudi oil infrastructure last year, sources have said.\n\n\n\nThey said royals seeking to change the line of succession view Prince Ahmed, King Salman’s only surviving full brother, as a possible choice who would have support of family members, the security apparatus, and some Western powers.\n\nSaudi authorities have not commented on issues of succession or criticism of the crown prince’s leadership. Prince Mohammed is popular among Saudi youth and also has staunch supporters within the royal Al Saud family, which numbers around 10,000 members.\n\n\n\n## King supports son\n\nSaudi insiders and Western diplomats say the family is unlikely to oppose the crown prince while the 84-year-old king remains alive, saying the monarch is unlikely to turn against his favourite son, to whom he has delegated most responsibilities of rule.\n\nPrince Ahmed has largely kept a low profile since returning to Riyadh in October 2018 after 2-1/2 months abroad and Saudi watchers have said there is no evidence he is willing to take the throne. During that trip abroad, he appeared to criticize the Saudi leadership while responding to protesters outside a London residence chanting for the downfall of the Al Saud dynasty.\n\nAhmed was one of only three people on the Allegiance Council, made up of the ruling Al Saud family’s senior members, who opposed Mohammed bin Salman becoming crown prince in 2017, sources have earlier said.\n\nMohammed bin Nayef’s movements have been restricted and monitored since then, sources have previously said.\n\nThe latest detentions come at a time of heightened tension with rival Iran and as the crown prince implements social and economic reforms, including an initial public offering by oil giant Saudi Aramco on the domestic bourse last December. Saudi Arabia is also the current chair for the Group of 20 major economies.\n\nThe crown prince has been lauded at home for easing social restrictions in the conservative Muslim kingdom and trying to [diversify the economy away from oil](https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html).\n\nBut he has come under international criticism over a devastating war in Yemen, the murder of journalist Jamal Khashoggi in the kingdom’s Istanbul consulate, and the detention of women’s rights activists seen as part of a crackdown on dissent.\n\n[CNBC NEWS ON FAILED TO AGREE TO CUT ON OIL PRODUCE](https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere is a **description** in Chinese:\n\n```\n世界原油主要分布地区\n\n原油的分布从总体上来看极端不平衡：从东西半球来看，约3／4的石油资源集中于东半球，西半球占1／4；从南北半球看，石油资源主要集中于北半球；从纬度分布看，主要集中在北纬20°-40°和50°-70°两个纬度带内。波斯湾及墨西哥湾两大油区和北非油田均处于北纬20°-40°内，该带集中了51.3%的世界石油储量；50°-70°纬度带内有著名的北海油田、俄罗斯伏尔加及西伯利亚油田和阿拉斯加湾油区。\n\n一、中东波斯湾沿岸\n\n中东海湾地区地处欧、亚、非三洲的枢纽位置，原油资源非常丰富，被誉为“世界油库”。据美国《油气杂志》2006年最新的数据显示，世界原油探明储量为1804.9亿吨。其中，中东地区的原油探明储量为1012.7亿吨，约占世界总储量的2/3。在世界原油储量排名的前十位中，中东国家占了五位，依次是沙特阿拉伯、伊朗、伊拉克、科威特和阿联酋。其中，沙特阿拉伯已探明的储量为355.9亿吨，居世界首位。伊朗已探明的原油储量为186.7亿吨，居世界第三位。\n\n二、北美洲\n\n北美洲原油储量最丰富的国家是加拿大、美国和墨西哥。加拿大原油探明储量为245.5亿吨，居世界第二位。美国原油探明储量为29.8亿吨，主要分布在墨西哥湾沿岸和加利福尼亚湾沿岸，以得克萨斯州和俄克拉荷马州最为著名，阿拉斯加州也是重要的石油产区。美国是世界第二大产油国，但因消耗量过大，每年仍需进口大量石油。墨西哥原油探明储量为16.9亿吨，是西半球第三大传统原油战略储备国，也是世界第六大产油国。\n\n三、欧洲及欧亚大陆\n\n欧洲及欧亚大陆原油探明储量为157.1亿吨，约占世界总储量的8%。其中，俄罗斯原油探明储量为82.2亿吨，居世界第八位，但俄罗斯是世界第一大产油国，2006年的石油产量为4.7亿吨。中亚的哈萨克斯坦也是该地区原油储量较为丰富的国家，已探明的储量为41.1亿吨。挪威、英国、丹麦是西欧已探明原油储量最丰富的三个国家，分别为10.7亿吨、5.3亿吨和1.7亿吨，其中挪威是世界第十大产油国。\n\n四、非洲\n\n非洲是近几年原油储量和石油产量增长最快的地区，被誉为“第二个海湾地区”。2006年，非洲探明的原油总储量为156.2亿吨，主要分布于西非几内亚湾地区和北非地区。专家预测，到2010年，非洲国家石油产量在世界石油总产量中的比例有望上升到20%。\n\n利比亚、尼日利亚、阿尔及利亚、安哥拉和苏丹排名非洲原油储量前五位。尼日利亚是非洲地区第一大产油国。目前，尼日利亚、利比亚、阿尔及利亚、安哥拉和埃及等5个国家的石油产量占非洲总产量的85%。\n\n五、中南美洲\n\n中南美洲是世界重要的石油生产和出口地区之一，也是世界原油储量和石油产量增长较快的地区之一，委内瑞拉、巴西和厄瓜多尔是该地区原油储量最丰富的国家。2006年，委内瑞拉原油探明储量为109.6亿吨，居世界第七位。2006年，巴西原油探明储量为16.1亿吨，仅次于委内瑞拉。巴西东南部海域坎坡斯和桑托斯盆地的原油资源，是巴西原油储量最主要的构成部分。厄瓜多尔位于南美洲大陆西北部，是中南美洲第三大产油国，境内石油资源丰富，主要集中在东部亚马孙盆地，另外，在瓜亚斯省西部半岛地区和瓜亚基尔湾也有少量油田分布。\n\n六、亚太地区\n\n亚太地区原油探明储量约为45.7亿吨，也是目前世界石油产量增长较快的地区之一。中国、印度、印度尼西亚和马来西亚是该地区原油探明储量最丰富的国家，分别为21.9亿吨、7.7亿吨、5.8亿吨和4.1亿吨。中国和印度虽原油储量丰富，但是每年仍需大量进口。\n\n由于地理位置优越和经济的飞速发展，东南亚国家已经成为世界新兴的石油生产国。印尼和马来西亚是该地区最重要的产油国，越南也于2006年取代文莱成为东南亚第三大石油生产国和出口国。印尼的苏门答腊岛、加里曼丹岛，马来西亚近海的马来盆地、沙捞越盆地和沙巴盆地是主要的原油分布区。\n```\n\n","source":"_posts/invest/About-Middle-East.md","raw":"---\ntitle: About Middle East\ndate: 2020-03-07 11:07:16\ntags: OPEC\nkeywords: OPEC OIL 欧佩克 石油\ndescription: \n---\n\n[OPEC](https://en.wikipedia.org/wiki/OPEC) include five countries Iran/Iraq/Kuwait/Saudi Arabia/Venezuela \n\nAnd this article will give attention to those countries.\n\n\n\n<!--more-->\n\n2020/3/6 - Saudis Plan Big Oil Output Hike, Beginning All-Out Price War\n\nSaudi Arabia plans to increase oil output next month, going well above 10 million barrels a day, as the kingdom responds aggressively to the collapse of its OPEC+ alliance with Russia.\n\nThe world’s largest oil exporter started a price war on Saturday by slashing the prices it sells crude into foreign markets by the most in at least 20 years, offering unprecedented discounts in Europe, the Far East and the U.S. to entice refiners to purchase Saudi crude at the expense of other suppliers.\n\nAt the same time, Saudi Arabia has privately told some market participants it could raise production much higher if needed, even going to a record of 12 million barrels a day, according to people familiar with the conversations, who asked not to be named to protect commercial relations. With demand being ravaged by the coronavirus outbreak, opening the taps like that would throw oil market into chaos.\n\n\n\n\n\n2020/3/8 - KEY POINTS\n\n- Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, have reportedly been held.\n- Sources say the move is aimed at heading off threats to the Crown Prince.\n- Crown Prince Mohammed bin Salman has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.\n\n\n\nSaudi Arabia has detained three senior Saudi princes including Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, for allegedly planning a coup, sources with knowledge of the matter said.\n\nCrown Prince Mohammed bin Salman, King Salman’s son and de facto ruler of the country, which is the world’s top oil exporter and a key U.S. ally, has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.\n\n![RT: Mohammed bin Salman, 191014](https://image.cnbcfm.com/api/v1/image/106182057-1571142619494rts2r42w.jpg?v=1571142700&w=678&h=381)\n\nSaudi Arabia’s Crown Prince Mohammed bin Salman attends a meeting with Russian President Vladimir Putin in Riyadh, Saudi Arabia, October 14, 2019.\n\nAlexei Nikolsky | Sputnik | Kremlin via Reuters\n\n\n\nLater that year, he arrested several royals and other prominent Saudis, holding them for months at Riyadh’s Ritz Carlton hotel, in an anti-corruption campaign that caused shockwaves at home and abroad.\n\nFour sources told Reuters that Prince Ahmed and Mohammed bin Nayef were detained in the latest operation. Two sources, including a regional source, said Mohammed bin Nayef and his half-brother, Nawaf, were detained while at a private desert camp on Friday.\n\nCrown Prince Mohammed, who is also referred to as MbS, “accused them (the princes) of conducting contacts with foreign powers, including the Americans and others, to carry out a coup d’etat,” the regional source said.\n\n“With these arrests, MbS consolidated his full grip on power. It’s over with this purge,” the source added, indicating that no rivals remain to challenge his succession to the throne.\n\n\n\nAnother source said the princes were accused of “treason”.\n\nThe Saudi government media office did not respond to a Reuters request for comment on the detentions, which were first reported by The Wall Street Journal.\n\nThe regional source said King Salman had approved the latest detentions.\n\n“The king signed off on the arrests,” the source said, adding that the king is in a mental and physically sound state.\n\nThe king met British Foreign Secretary Dominic Raab on Thursday in the Saudi capital Riyadh. Both King Salman and the crown prince attended a cabinet meeting on Tuesday.\n\nWATCH NOW\n\nVIDEO02:08\n\nExpect a ‘youth transformation’ in Saudi Arabia by 2030: SABIC CEO\n\n\n\nCrown Prince Mohammed, 34, has fuelled resentment among some prominent branches of the ruling family by tightening his grip on power. Some critics have questioned his ability to lead after the 2018 murder of a prominent journalist by Saudi agents and the largest-ever attack on Saudi oil infrastructure last year, sources have said.\n\n\n\nThey said royals seeking to change the line of succession view Prince Ahmed, King Salman’s only surviving full brother, as a possible choice who would have support of family members, the security apparatus, and some Western powers.\n\nSaudi authorities have not commented on issues of succession or criticism of the crown prince’s leadership. Prince Mohammed is popular among Saudi youth and also has staunch supporters within the royal Al Saud family, which numbers around 10,000 members.\n\n\n\n## King supports son\n\nSaudi insiders and Western diplomats say the family is unlikely to oppose the crown prince while the 84-year-old king remains alive, saying the monarch is unlikely to turn against his favourite son, to whom he has delegated most responsibilities of rule.\n\nPrince Ahmed has largely kept a low profile since returning to Riyadh in October 2018 after 2-1/2 months abroad and Saudi watchers have said there is no evidence he is willing to take the throne. During that trip abroad, he appeared to criticize the Saudi leadership while responding to protesters outside a London residence chanting for the downfall of the Al Saud dynasty.\n\nAhmed was one of only three people on the Allegiance Council, made up of the ruling Al Saud family’s senior members, who opposed Mohammed bin Salman becoming crown prince in 2017, sources have earlier said.\n\nMohammed bin Nayef’s movements have been restricted and monitored since then, sources have previously said.\n\nThe latest detentions come at a time of heightened tension with rival Iran and as the crown prince implements social and economic reforms, including an initial public offering by oil giant Saudi Aramco on the domestic bourse last December. Saudi Arabia is also the current chair for the Group of 20 major economies.\n\nThe crown prince has been lauded at home for easing social restrictions in the conservative Muslim kingdom and trying to [diversify the economy away from oil](https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html).\n\nBut he has come under international criticism over a devastating war in Yemen, the murder of journalist Jamal Khashoggi in the kingdom’s Istanbul consulate, and the detention of women’s rights activists seen as part of a crackdown on dissent.\n\n[CNBC NEWS ON FAILED TO AGREE TO CUT ON OIL PRODUCE](https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere is a **description** in Chinese:\n\n```\n世界原油主要分布地区\n\n原油的分布从总体上来看极端不平衡：从东西半球来看，约3／4的石油资源集中于东半球，西半球占1／4；从南北半球看，石油资源主要集中于北半球；从纬度分布看，主要集中在北纬20°-40°和50°-70°两个纬度带内。波斯湾及墨西哥湾两大油区和北非油田均处于北纬20°-40°内，该带集中了51.3%的世界石油储量；50°-70°纬度带内有著名的北海油田、俄罗斯伏尔加及西伯利亚油田和阿拉斯加湾油区。\n\n一、中东波斯湾沿岸\n\n中东海湾地区地处欧、亚、非三洲的枢纽位置，原油资源非常丰富，被誉为“世界油库”。据美国《油气杂志》2006年最新的数据显示，世界原油探明储量为1804.9亿吨。其中，中东地区的原油探明储量为1012.7亿吨，约占世界总储量的2/3。在世界原油储量排名的前十位中，中东国家占了五位，依次是沙特阿拉伯、伊朗、伊拉克、科威特和阿联酋。其中，沙特阿拉伯已探明的储量为355.9亿吨，居世界首位。伊朗已探明的原油储量为186.7亿吨，居世界第三位。\n\n二、北美洲\n\n北美洲原油储量最丰富的国家是加拿大、美国和墨西哥。加拿大原油探明储量为245.5亿吨，居世界第二位。美国原油探明储量为29.8亿吨，主要分布在墨西哥湾沿岸和加利福尼亚湾沿岸，以得克萨斯州和俄克拉荷马州最为著名，阿拉斯加州也是重要的石油产区。美国是世界第二大产油国，但因消耗量过大，每年仍需进口大量石油。墨西哥原油探明储量为16.9亿吨，是西半球第三大传统原油战略储备国，也是世界第六大产油国。\n\n三、欧洲及欧亚大陆\n\n欧洲及欧亚大陆原油探明储量为157.1亿吨，约占世界总储量的8%。其中，俄罗斯原油探明储量为82.2亿吨，居世界第八位，但俄罗斯是世界第一大产油国，2006年的石油产量为4.7亿吨。中亚的哈萨克斯坦也是该地区原油储量较为丰富的国家，已探明的储量为41.1亿吨。挪威、英国、丹麦是西欧已探明原油储量最丰富的三个国家，分别为10.7亿吨、5.3亿吨和1.7亿吨，其中挪威是世界第十大产油国。\n\n四、非洲\n\n非洲是近几年原油储量和石油产量增长最快的地区，被誉为“第二个海湾地区”。2006年，非洲探明的原油总储量为156.2亿吨，主要分布于西非几内亚湾地区和北非地区。专家预测，到2010年，非洲国家石油产量在世界石油总产量中的比例有望上升到20%。\n\n利比亚、尼日利亚、阿尔及利亚、安哥拉和苏丹排名非洲原油储量前五位。尼日利亚是非洲地区第一大产油国。目前，尼日利亚、利比亚、阿尔及利亚、安哥拉和埃及等5个国家的石油产量占非洲总产量的85%。\n\n五、中南美洲\n\n中南美洲是世界重要的石油生产和出口地区之一，也是世界原油储量和石油产量增长较快的地区之一，委内瑞拉、巴西和厄瓜多尔是该地区原油储量最丰富的国家。2006年，委内瑞拉原油探明储量为109.6亿吨，居世界第七位。2006年，巴西原油探明储量为16.1亿吨，仅次于委内瑞拉。巴西东南部海域坎坡斯和桑托斯盆地的原油资源，是巴西原油储量最主要的构成部分。厄瓜多尔位于南美洲大陆西北部，是中南美洲第三大产油国，境内石油资源丰富，主要集中在东部亚马孙盆地，另外，在瓜亚斯省西部半岛地区和瓜亚基尔湾也有少量油田分布。\n\n六、亚太地区\n\n亚太地区原油探明储量约为45.7亿吨，也是目前世界石油产量增长较快的地区之一。中国、印度、印度尼西亚和马来西亚是该地区原油探明储量最丰富的国家，分别为21.9亿吨、7.7亿吨、5.8亿吨和4.1亿吨。中国和印度虽原油储量丰富，但是每年仍需大量进口。\n\n由于地理位置优越和经济的飞速发展，东南亚国家已经成为世界新兴的石油生产国。印尼和马来西亚是该地区最重要的产油国，越南也于2006年取代文莱成为东南亚第三大石油生产国和出口国。印尼的苏门答腊岛、加里曼丹岛，马来西亚近海的马来盆地、沙捞越盆地和沙巴盆地是主要的原油分布区。\n```\n\n","slug":"invest/About-Middle-East","published":1,"updated":"2020-03-20T07:42:35.235Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66d002398kief2w06w3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><a href=\"https://en.wikipedia.org/wiki/OPEC\" target=\"_blank\" rel=\"noopener\">OPEC</a> include five countries Iran/Iraq/Kuwait/Saudi Arabia/Venezuela </p>\n<p>And this article will give attention to those countries.</p>\n<a id=\"more\"></a>\n\n<p>2020/3/6 - Saudis Plan Big Oil Output Hike, Beginning All-Out Price War</p>\n<p>Saudi Arabia plans to increase oil output next month, going well above 10 million barrels a day, as the kingdom responds aggressively to the collapse of its OPEC+ alliance with Russia.</p>\n<p>The world’s largest oil exporter started a price war on Saturday by slashing the prices it sells crude into foreign markets by the most in at least 20 years, offering unprecedented discounts in Europe, the Far East and the U.S. to entice refiners to purchase Saudi crude at the expense of other suppliers.</p>\n<p>At the same time, Saudi Arabia has privately told some market participants it could raise production much higher if needed, even going to a record of 12 million barrels a day, according to people familiar with the conversations, who asked not to be named to protect commercial relations. With demand being ravaged by the coronavirus outbreak, opening the taps like that would throw oil market into chaos.</p>\n<p>2020/3/8 - KEY POINTS</p>\n<ul>\n<li>Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, have reportedly been held.</li>\n<li>Sources say the move is aimed at heading off threats to the Crown Prince.</li>\n<li>Crown Prince Mohammed bin Salman has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.</li>\n</ul>\n<p>Saudi Arabia has detained three senior Saudi princes including Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, for allegedly planning a coup, sources with knowledge of the matter said.</p>\n<p>Crown Prince Mohammed bin Salman, King Salman’s son and de facto ruler of the country, which is the world’s top oil exporter and a key U.S. ally, has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.</p>\n<p><img src=\"https://image.cnbcfm.com/api/v1/image/106182057-1571142619494rts2r42w.jpg?v=1571142700&w=678&h=381\" alt=\"RT: Mohammed bin Salman, 191014\"></p>\n<p>Saudi Arabia’s Crown Prince Mohammed bin Salman attends a meeting with Russian President Vladimir Putin in Riyadh, Saudi Arabia, October 14, 2019.</p>\n<p>Alexei Nikolsky | Sputnik | Kremlin via Reuters</p>\n<p>Later that year, he arrested several royals and other prominent Saudis, holding them for months at Riyadh’s Ritz Carlton hotel, in an anti-corruption campaign that caused shockwaves at home and abroad.</p>\n<p>Four sources told Reuters that Prince Ahmed and Mohammed bin Nayef were detained in the latest operation. Two sources, including a regional source, said Mohammed bin Nayef and his half-brother, Nawaf, were detained while at a private desert camp on Friday.</p>\n<p>Crown Prince Mohammed, who is also referred to as MbS, “accused them (the princes) of conducting contacts with foreign powers, including the Americans and others, to carry out a coup d’etat,” the regional source said.</p>\n<p>“With these arrests, MbS consolidated his full grip on power. It’s over with this purge,” the source added, indicating that no rivals remain to challenge his succession to the throne.</p>\n<p>Another source said the princes were accused of “treason”.</p>\n<p>The Saudi government media office did not respond to a Reuters request for comment on the detentions, which were first reported by The Wall Street Journal.</p>\n<p>The regional source said King Salman had approved the latest detentions.</p>\n<p>“The king signed off on the arrests,” the source said, adding that the king is in a mental and physically sound state.</p>\n<p>The king met British Foreign Secretary Dominic Raab on Thursday in the Saudi capital Riyadh. Both King Salman and the crown prince attended a cabinet meeting on Tuesday.</p>\n<p>WATCH NOW</p>\n<p>VIDEO02:08</p>\n<p>Expect a ‘youth transformation’ in Saudi Arabia by 2030: SABIC CEO</p>\n<p>Crown Prince Mohammed, 34, has fuelled resentment among some prominent branches of the ruling family by tightening his grip on power. Some critics have questioned his ability to lead after the 2018 murder of a prominent journalist by Saudi agents and the largest-ever attack on Saudi oil infrastructure last year, sources have said.</p>\n<p>They said royals seeking to change the line of succession view Prince Ahmed, King Salman’s only surviving full brother, as a possible choice who would have support of family members, the security apparatus, and some Western powers.</p>\n<p>Saudi authorities have not commented on issues of succession or criticism of the crown prince’s leadership. Prince Mohammed is popular among Saudi youth and also has staunch supporters within the royal Al Saud family, which numbers around 10,000 members.</p>\n<h2 id=\"King-supports-son\"><a href=\"#King-supports-son\" class=\"headerlink\" title=\"King supports son\"></a>King supports son</h2><p>Saudi insiders and Western diplomats say the family is unlikely to oppose the crown prince while the 84-year-old king remains alive, saying the monarch is unlikely to turn against his favourite son, to whom he has delegated most responsibilities of rule.</p>\n<p>Prince Ahmed has largely kept a low profile since returning to Riyadh in October 2018 after 2-1/2 months abroad and Saudi watchers have said there is no evidence he is willing to take the throne. During that trip abroad, he appeared to criticize the Saudi leadership while responding to protesters outside a London residence chanting for the downfall of the Al Saud dynasty.</p>\n<p>Ahmed was one of only three people on the Allegiance Council, made up of the ruling Al Saud family’s senior members, who opposed Mohammed bin Salman becoming crown prince in 2017, sources have earlier said.</p>\n<p>Mohammed bin Nayef’s movements have been restricted and monitored since then, sources have previously said.</p>\n<p>The latest detentions come at a time of heightened tension with rival Iran and as the crown prince implements social and economic reforms, including an initial public offering by oil giant Saudi Aramco on the domestic bourse last December. Saudi Arabia is also the current chair for the Group of 20 major economies.</p>\n<p>The crown prince has been lauded at home for easing social restrictions in the conservative Muslim kingdom and trying to <a href=\"https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html\" target=\"_blank\" rel=\"noopener\">diversify the economy away from oil</a>.</p>\n<p>But he has come under international criticism over a devastating war in Yemen, the murder of journalist Jamal Khashoggi in the kingdom’s Istanbul consulate, and the detention of women’s rights activists seen as part of a crackdown on dissent.</p>\n<p><a href=\"https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html\" target=\"_blank\" rel=\"noopener\">CNBC NEWS ON FAILED TO AGREE TO CUT ON OIL PRODUCE</a></p>\n<p>Here is a <strong>description</strong> in Chinese:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">世界原油主要分布地区</span><br><span class=\"line\"></span><br><span class=\"line\">原油的分布从总体上来看极端不平衡：从东西半球来看，约3／4的石油资源集中于东半球，西半球占1／4；从南北半球看，石油资源主要集中于北半球；从纬度分布看，主要集中在北纬20°-40°和50°-70°两个纬度带内。波斯湾及墨西哥湾两大油区和北非油田均处于北纬20°-40°内，该带集中了51.3%的世界石油储量；50°-70°纬度带内有著名的北海油田、俄罗斯伏尔加及西伯利亚油田和阿拉斯加湾油区。</span><br><span class=\"line\"></span><br><span class=\"line\">一、中东波斯湾沿岸</span><br><span class=\"line\"></span><br><span class=\"line\">中东海湾地区地处欧、亚、非三洲的枢纽位置，原油资源非常丰富，被誉为“世界油库”。据美国《油气杂志》2006年最新的数据显示，世界原油探明储量为1804.9亿吨。其中，中东地区的原油探明储量为1012.7亿吨，约占世界总储量的2&#x2F;3。在世界原油储量排名的前十位中，中东国家占了五位，依次是沙特阿拉伯、伊朗、伊拉克、科威特和阿联酋。其中，沙特阿拉伯已探明的储量为355.9亿吨，居世界首位。伊朗已探明的原油储量为186.7亿吨，居世界第三位。</span><br><span class=\"line\"></span><br><span class=\"line\">二、北美洲</span><br><span class=\"line\"></span><br><span class=\"line\">北美洲原油储量最丰富的国家是加拿大、美国和墨西哥。加拿大原油探明储量为245.5亿吨，居世界第二位。美国原油探明储量为29.8亿吨，主要分布在墨西哥湾沿岸和加利福尼亚湾沿岸，以得克萨斯州和俄克拉荷马州最为著名，阿拉斯加州也是重要的石油产区。美国是世界第二大产油国，但因消耗量过大，每年仍需进口大量石油。墨西哥原油探明储量为16.9亿吨，是西半球第三大传统原油战略储备国，也是世界第六大产油国。</span><br><span class=\"line\"></span><br><span class=\"line\">三、欧洲及欧亚大陆</span><br><span class=\"line\"></span><br><span class=\"line\">欧洲及欧亚大陆原油探明储量为157.1亿吨，约占世界总储量的8%。其中，俄罗斯原油探明储量为82.2亿吨，居世界第八位，但俄罗斯是世界第一大产油国，2006年的石油产量为4.7亿吨。中亚的哈萨克斯坦也是该地区原油储量较为丰富的国家，已探明的储量为41.1亿吨。挪威、英国、丹麦是西欧已探明原油储量最丰富的三个国家，分别为10.7亿吨、5.3亿吨和1.7亿吨，其中挪威是世界第十大产油国。</span><br><span class=\"line\"></span><br><span class=\"line\">四、非洲</span><br><span class=\"line\"></span><br><span class=\"line\">非洲是近几年原油储量和石油产量增长最快的地区，被誉为“第二个海湾地区”。2006年，非洲探明的原油总储量为156.2亿吨，主要分布于西非几内亚湾地区和北非地区。专家预测，到2010年，非洲国家石油产量在世界石油总产量中的比例有望上升到20%。</span><br><span class=\"line\"></span><br><span class=\"line\">利比亚、尼日利亚、阿尔及利亚、安哥拉和苏丹排名非洲原油储量前五位。尼日利亚是非洲地区第一大产油国。目前，尼日利亚、利比亚、阿尔及利亚、安哥拉和埃及等5个国家的石油产量占非洲总产量的85%。</span><br><span class=\"line\"></span><br><span class=\"line\">五、中南美洲</span><br><span class=\"line\"></span><br><span class=\"line\">中南美洲是世界重要的石油生产和出口地区之一，也是世界原油储量和石油产量增长较快的地区之一，委内瑞拉、巴西和厄瓜多尔是该地区原油储量最丰富的国家。2006年，委内瑞拉原油探明储量为109.6亿吨，居世界第七位。2006年，巴西原油探明储量为16.1亿吨，仅次于委内瑞拉。巴西东南部海域坎坡斯和桑托斯盆地的原油资源，是巴西原油储量最主要的构成部分。厄瓜多尔位于南美洲大陆西北部，是中南美洲第三大产油国，境内石油资源丰富，主要集中在东部亚马孙盆地，另外，在瓜亚斯省西部半岛地区和瓜亚基尔湾也有少量油田分布。</span><br><span class=\"line\"></span><br><span class=\"line\">六、亚太地区</span><br><span class=\"line\"></span><br><span class=\"line\">亚太地区原油探明储量约为45.7亿吨，也是目前世界石油产量增长较快的地区之一。中国、印度、印度尼西亚和马来西亚是该地区原油探明储量最丰富的国家，分别为21.9亿吨、7.7亿吨、5.8亿吨和4.1亿吨。中国和印度虽原油储量丰富，但是每年仍需大量进口。</span><br><span class=\"line\"></span><br><span class=\"line\">由于地理位置优越和经济的飞速发展，东南亚国家已经成为世界新兴的石油生产国。印尼和马来西亚是该地区最重要的产油国，越南也于2006年取代文莱成为东南亚第三大石油生产国和出口国。印尼的苏门答腊岛、加里曼丹岛，马来西亚近海的马来盆地、沙捞越盆地和沙巴盆地是主要的原油分布区。</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p><a href=\"https://en.wikipedia.org/wiki/OPEC\" target=\"_blank\" rel=\"noopener\">OPEC</a> include five countries Iran/Iraq/Kuwait/Saudi Arabia/Venezuela </p>\n<p>And this article will give attention to those countries.</p>","more":"<p>2020/3/6 - Saudis Plan Big Oil Output Hike, Beginning All-Out Price War</p>\n<p>Saudi Arabia plans to increase oil output next month, going well above 10 million barrels a day, as the kingdom responds aggressively to the collapse of its OPEC+ alliance with Russia.</p>\n<p>The world’s largest oil exporter started a price war on Saturday by slashing the prices it sells crude into foreign markets by the most in at least 20 years, offering unprecedented discounts in Europe, the Far East and the U.S. to entice refiners to purchase Saudi crude at the expense of other suppliers.</p>\n<p>At the same time, Saudi Arabia has privately told some market participants it could raise production much higher if needed, even going to a record of 12 million barrels a day, according to people familiar with the conversations, who asked not to be named to protect commercial relations. With demand being ravaged by the coronavirus outbreak, opening the taps like that would throw oil market into chaos.</p>\n<p>2020/3/8 - KEY POINTS</p>\n<ul>\n<li>Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, have reportedly been held.</li>\n<li>Sources say the move is aimed at heading off threats to the Crown Prince.</li>\n<li>Crown Prince Mohammed bin Salman has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.</li>\n</ul>\n<p>Saudi Arabia has detained three senior Saudi princes including Prince Ahmed bin Abdulaziz, the younger brother of King Salman, and Prince Mohammed bin Nayef, the king’s nephew, for allegedly planning a coup, sources with knowledge of the matter said.</p>\n<p>Crown Prince Mohammed bin Salman, King Salman’s son and de facto ruler of the country, which is the world’s top oil exporter and a key U.S. ally, has moved to consolidate power since ousting Mohammed bin Nayef as heir to the throne in a 2017 palace coup.</p>\n<p><img src=\"https://image.cnbcfm.com/api/v1/image/106182057-1571142619494rts2r42w.jpg?v=1571142700&w=678&h=381\" alt=\"RT: Mohammed bin Salman, 191014\"></p>\n<p>Saudi Arabia’s Crown Prince Mohammed bin Salman attends a meeting with Russian President Vladimir Putin in Riyadh, Saudi Arabia, October 14, 2019.</p>\n<p>Alexei Nikolsky | Sputnik | Kremlin via Reuters</p>\n<p>Later that year, he arrested several royals and other prominent Saudis, holding them for months at Riyadh’s Ritz Carlton hotel, in an anti-corruption campaign that caused shockwaves at home and abroad.</p>\n<p>Four sources told Reuters that Prince Ahmed and Mohammed bin Nayef were detained in the latest operation. Two sources, including a regional source, said Mohammed bin Nayef and his half-brother, Nawaf, were detained while at a private desert camp on Friday.</p>\n<p>Crown Prince Mohammed, who is also referred to as MbS, “accused them (the princes) of conducting contacts with foreign powers, including the Americans and others, to carry out a coup d’etat,” the regional source said.</p>\n<p>“With these arrests, MbS consolidated his full grip on power. It’s over with this purge,” the source added, indicating that no rivals remain to challenge his succession to the throne.</p>\n<p>Another source said the princes were accused of “treason”.</p>\n<p>The Saudi government media office did not respond to a Reuters request for comment on the detentions, which were first reported by The Wall Street Journal.</p>\n<p>The regional source said King Salman had approved the latest detentions.</p>\n<p>“The king signed off on the arrests,” the source said, adding that the king is in a mental and physically sound state.</p>\n<p>The king met British Foreign Secretary Dominic Raab on Thursday in the Saudi capital Riyadh. Both King Salman and the crown prince attended a cabinet meeting on Tuesday.</p>\n<p>WATCH NOW</p>\n<p>VIDEO02:08</p>\n<p>Expect a ‘youth transformation’ in Saudi Arabia by 2030: SABIC CEO</p>\n<p>Crown Prince Mohammed, 34, has fuelled resentment among some prominent branches of the ruling family by tightening his grip on power. Some critics have questioned his ability to lead after the 2018 murder of a prominent journalist by Saudi agents and the largest-ever attack on Saudi oil infrastructure last year, sources have said.</p>\n<p>They said royals seeking to change the line of succession view Prince Ahmed, King Salman’s only surviving full brother, as a possible choice who would have support of family members, the security apparatus, and some Western powers.</p>\n<p>Saudi authorities have not commented on issues of succession or criticism of the crown prince’s leadership. Prince Mohammed is popular among Saudi youth and also has staunch supporters within the royal Al Saud family, which numbers around 10,000 members.</p>\n<h2 id=\"King-supports-son\"><a href=\"#King-supports-son\" class=\"headerlink\" title=\"King supports son\"></a>King supports son</h2><p>Saudi insiders and Western diplomats say the family is unlikely to oppose the crown prince while the 84-year-old king remains alive, saying the monarch is unlikely to turn against his favourite son, to whom he has delegated most responsibilities of rule.</p>\n<p>Prince Ahmed has largely kept a low profile since returning to Riyadh in October 2018 after 2-1/2 months abroad and Saudi watchers have said there is no evidence he is willing to take the throne. During that trip abroad, he appeared to criticize the Saudi leadership while responding to protesters outside a London residence chanting for the downfall of the Al Saud dynasty.</p>\n<p>Ahmed was one of only three people on the Allegiance Council, made up of the ruling Al Saud family’s senior members, who opposed Mohammed bin Salman becoming crown prince in 2017, sources have earlier said.</p>\n<p>Mohammed bin Nayef’s movements have been restricted and monitored since then, sources have previously said.</p>\n<p>The latest detentions come at a time of heightened tension with rival Iran and as the crown prince implements social and economic reforms, including an initial public offering by oil giant Saudi Aramco on the domestic bourse last December. Saudi Arabia is also the current chair for the Group of 20 major economies.</p>\n<p>The crown prince has been lauded at home for easing social restrictions in the conservative Muslim kingdom and trying to <a href=\"https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html\" target=\"_blank\" rel=\"noopener\">diversify the economy away from oil</a>.</p>\n<p>But he has come under international criticism over a devastating war in Yemen, the murder of journalist Jamal Khashoggi in the kingdom’s Istanbul consulate, and the detention of women’s rights activists seen as part of a crackdown on dissent.</p>\n<p><a href=\"https://www.cnbc.com/2020/03/06/opec-meeting-coronavirus-weighs-on-oil-demand-as-oil-prices-fall.html\" target=\"_blank\" rel=\"noopener\">CNBC NEWS ON FAILED TO AGREE TO CUT ON OIL PRODUCE</a></p>\n<p>Here is a <strong>description</strong> in Chinese:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">世界原油主要分布地区</span><br><span class=\"line\"></span><br><span class=\"line\">原油的分布从总体上来看极端不平衡：从东西半球来看，约3／4的石油资源集中于东半球，西半球占1／4；从南北半球看，石油资源主要集中于北半球；从纬度分布看，主要集中在北纬20°-40°和50°-70°两个纬度带内。波斯湾及墨西哥湾两大油区和北非油田均处于北纬20°-40°内，该带集中了51.3%的世界石油储量；50°-70°纬度带内有著名的北海油田、俄罗斯伏尔加及西伯利亚油田和阿拉斯加湾油区。</span><br><span class=\"line\"></span><br><span class=\"line\">一、中东波斯湾沿岸</span><br><span class=\"line\"></span><br><span class=\"line\">中东海湾地区地处欧、亚、非三洲的枢纽位置，原油资源非常丰富，被誉为“世界油库”。据美国《油气杂志》2006年最新的数据显示，世界原油探明储量为1804.9亿吨。其中，中东地区的原油探明储量为1012.7亿吨，约占世界总储量的2&#x2F;3。在世界原油储量排名的前十位中，中东国家占了五位，依次是沙特阿拉伯、伊朗、伊拉克、科威特和阿联酋。其中，沙特阿拉伯已探明的储量为355.9亿吨，居世界首位。伊朗已探明的原油储量为186.7亿吨，居世界第三位。</span><br><span class=\"line\"></span><br><span class=\"line\">二、北美洲</span><br><span class=\"line\"></span><br><span class=\"line\">北美洲原油储量最丰富的国家是加拿大、美国和墨西哥。加拿大原油探明储量为245.5亿吨，居世界第二位。美国原油探明储量为29.8亿吨，主要分布在墨西哥湾沿岸和加利福尼亚湾沿岸，以得克萨斯州和俄克拉荷马州最为著名，阿拉斯加州也是重要的石油产区。美国是世界第二大产油国，但因消耗量过大，每年仍需进口大量石油。墨西哥原油探明储量为16.9亿吨，是西半球第三大传统原油战略储备国，也是世界第六大产油国。</span><br><span class=\"line\"></span><br><span class=\"line\">三、欧洲及欧亚大陆</span><br><span class=\"line\"></span><br><span class=\"line\">欧洲及欧亚大陆原油探明储量为157.1亿吨，约占世界总储量的8%。其中，俄罗斯原油探明储量为82.2亿吨，居世界第八位，但俄罗斯是世界第一大产油国，2006年的石油产量为4.7亿吨。中亚的哈萨克斯坦也是该地区原油储量较为丰富的国家，已探明的储量为41.1亿吨。挪威、英国、丹麦是西欧已探明原油储量最丰富的三个国家，分别为10.7亿吨、5.3亿吨和1.7亿吨，其中挪威是世界第十大产油国。</span><br><span class=\"line\"></span><br><span class=\"line\">四、非洲</span><br><span class=\"line\"></span><br><span class=\"line\">非洲是近几年原油储量和石油产量增长最快的地区，被誉为“第二个海湾地区”。2006年，非洲探明的原油总储量为156.2亿吨，主要分布于西非几内亚湾地区和北非地区。专家预测，到2010年，非洲国家石油产量在世界石油总产量中的比例有望上升到20%。</span><br><span class=\"line\"></span><br><span class=\"line\">利比亚、尼日利亚、阿尔及利亚、安哥拉和苏丹排名非洲原油储量前五位。尼日利亚是非洲地区第一大产油国。目前，尼日利亚、利比亚、阿尔及利亚、安哥拉和埃及等5个国家的石油产量占非洲总产量的85%。</span><br><span class=\"line\"></span><br><span class=\"line\">五、中南美洲</span><br><span class=\"line\"></span><br><span class=\"line\">中南美洲是世界重要的石油生产和出口地区之一，也是世界原油储量和石油产量增长较快的地区之一，委内瑞拉、巴西和厄瓜多尔是该地区原油储量最丰富的国家。2006年，委内瑞拉原油探明储量为109.6亿吨，居世界第七位。2006年，巴西原油探明储量为16.1亿吨，仅次于委内瑞拉。巴西东南部海域坎坡斯和桑托斯盆地的原油资源，是巴西原油储量最主要的构成部分。厄瓜多尔位于南美洲大陆西北部，是中南美洲第三大产油国，境内石油资源丰富，主要集中在东部亚马孙盆地，另外，在瓜亚斯省西部半岛地区和瓜亚基尔湾也有少量油田分布。</span><br><span class=\"line\"></span><br><span class=\"line\">六、亚太地区</span><br><span class=\"line\"></span><br><span class=\"line\">亚太地区原油探明储量约为45.7亿吨，也是目前世界石油产量增长较快的地区之一。中国、印度、印度尼西亚和马来西亚是该地区原油探明储量最丰富的国家，分别为21.9亿吨、7.7亿吨、5.8亿吨和4.1亿吨。中国和印度虽原油储量丰富，但是每年仍需大量进口。</span><br><span class=\"line\"></span><br><span class=\"line\">由于地理位置优越和经济的飞速发展，东南亚国家已经成为世界新兴的石油生产国。印尼和马来西亚是该地区最重要的产油国，越南也于2006年取代文莱成为东南亚第三大石油生产国和出口国。印尼的苏门答腊岛、加里曼丹岛，马来西亚近海的马来盆地、沙捞越盆地和沙巴盆地是主要的原油分布区。</span><br></pre></td></tr></table></figure>"},{"title":"About North Korea","date":"2020-03-07T03:07:33.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-North-Korea.md","raw":"---\ntitle: About North Korea\ndate: 2020-03-07 11:07:33\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-North-Korea","published":1,"updated":"2020-03-20T07:42:35.237Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66f002598kign53c62f","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About Russia","date":"2020-03-07T02:15:58.000Z","keywords":"investment Russia Oil 投资 俄罗斯 石油","description":"this article is all about Russia 这篇文章主要写俄罗斯","_content":"\nthis article is all about Russia. 这篇文章主要写俄罗斯\n\nRussia is  a country with great power.\n\nIntroduction can ben found in this link [Russia](https://en.wikipedia.org/wiki/Russia)\n\n\n\n<!--more-->\n\n\n\nRussia depends on Export and Energy Industrial. That is to say it is being held by others and economics stability is so weak.\n\nSome news related to Russia is listed below:\n\n2020年1月30日 - *Russia* is to *close* its *border* with *China* as a measure to prevent the spread of the coronavirus, according to the country's state media.\n\n2020年2月19日 - Russia to ban entry of Chinese nationals to halt virus.\n\n2020年3月6日 - OPEC and Russia Fail to Read A Deal an agreement to reduce production.\n\nAll the news above indicate that Russia has no ability to contain the COVID-19 and Russia's economy depends on Oil heavily. This is my opinion about Russia.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n英国金融时报报道，2009年，俄罗斯石油同中石油签署了为期20年，每年向中国供应1500万吨原油的合同。\n\n　　历届6月，中俄签订史无前例的大宗合同，俄方将在25年内向中国增供3.6亿吨原油（每年1440万吨），按照目前的油价，合同总价值达到2700亿美元。据俄罗斯媒体报道，中方将为这笔交易支付预付款——大约650至670亿美元，可以缓解俄油的负债率，并建立相应管道。\n\n\n\n俄的GDP主要基于能源出口，而花销基本上在军工上，保护自己的能源管道以及出口线路，如果减产意味着民生问题无限放大，所以他们不会妥协。对于CN，石油一直非常匮乏，主要依靠俄熊出口，其次就是伊朗通过巴基斯坦管道进来，现在原油作为丙烯原材料，直接会影响到后续口罩生产，所以需求量非常大。\n```\n\n","source":"_posts/invest/About-Russia.md","raw":"---\ntitle: About Russia\ndate: 2020-03-07 10:15:58\ntags: investment\nkeywords: investment Russia Oil 投资 俄罗斯 石油\ndescription: this article is all about Russia 这篇文章主要写俄罗斯\n---\n\nthis article is all about Russia. 这篇文章主要写俄罗斯\n\nRussia is  a country with great power.\n\nIntroduction can ben found in this link [Russia](https://en.wikipedia.org/wiki/Russia)\n\n\n\n<!--more-->\n\n\n\nRussia depends on Export and Energy Industrial. That is to say it is being held by others and economics stability is so weak.\n\nSome news related to Russia is listed below:\n\n2020年1月30日 - *Russia* is to *close* its *border* with *China* as a measure to prevent the spread of the coronavirus, according to the country's state media.\n\n2020年2月19日 - Russia to ban entry of Chinese nationals to halt virus.\n\n2020年3月6日 - OPEC and Russia Fail to Read A Deal an agreement to reduce production.\n\nAll the news above indicate that Russia has no ability to contain the COVID-19 and Russia's economy depends on Oil heavily. This is my opinion about Russia.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n英国金融时报报道，2009年，俄罗斯石油同中石油签署了为期20年，每年向中国供应1500万吨原油的合同。\n\n　　历届6月，中俄签订史无前例的大宗合同，俄方将在25年内向中国增供3.6亿吨原油（每年1440万吨），按照目前的油价，合同总价值达到2700亿美元。据俄罗斯媒体报道，中方将为这笔交易支付预付款——大约650至670亿美元，可以缓解俄油的负债率，并建立相应管道。\n\n\n\n俄的GDP主要基于能源出口，而花销基本上在军工上，保护自己的能源管道以及出口线路，如果减产意味着民生问题无限放大，所以他们不会妥协。对于CN，石油一直非常匮乏，主要依靠俄熊出口，其次就是伊朗通过巴基斯坦管道进来，现在原油作为丙烯原材料，直接会影响到后续口罩生产，所以需求量非常大。\n```\n\n","slug":"invest/About-Russia","published":1,"updated":"2020-03-20T07:42:35.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66h002798ki1gcifvp0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>this article is all about Russia. 这篇文章主要写俄罗斯</p>\n<p>Russia is  a country with great power.</p>\n<p>Introduction can ben found in this link <a href=\"https://en.wikipedia.org/wiki/Russia\" target=\"_blank\" rel=\"noopener\">Russia</a></p>\n<a id=\"more\"></a>\n\n\n\n<p>Russia depends on Export and Energy Industrial. That is to say it is being held by others and economics stability is so weak.</p>\n<p>Some news related to Russia is listed below:</p>\n<p>2020年1月30日 - <em>Russia</em> is to <em>close</em> its <em>border</em> with <em>China</em> as a measure to prevent the spread of the coronavirus, according to the country’s state media.</p>\n<p>2020年2月19日 - Russia to ban entry of Chinese nationals to halt virus.</p>\n<p>2020年3月6日 - OPEC and Russia Fail to Read A Deal an agreement to reduce production.</p>\n<p>All the news above indicate that Russia has no ability to contain the COVID-19 and Russia’s economy depends on Oil heavily. This is my opinion about Russia.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">英国金融时报报道，2009年，俄罗斯石油同中石油签署了为期20年，每年向中国供应1500万吨原油的合同。</span><br><span class=\"line\"></span><br><span class=\"line\">　　历届6月，中俄签订史无前例的大宗合同，俄方将在25年内向中国增供3.6亿吨原油（每年1440万吨），按照目前的油价，合同总价值达到2700亿美元。据俄罗斯媒体报道，中方将为这笔交易支付预付款——大约650至670亿美元，可以缓解俄油的负债率，并建立相应管道。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">俄的GDP主要基于能源出口，而花销基本上在军工上，保护自己的能源管道以及出口线路，如果减产意味着民生问题无限放大，所以他们不会妥协。对于CN，石油一直非常匮乏，主要依靠俄熊出口，其次就是伊朗通过巴基斯坦管道进来，现在原油作为丙烯原材料，直接会影响到后续口罩生产，所以需求量非常大。</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>this article is all about Russia. 这篇文章主要写俄罗斯</p>\n<p>Russia is  a country with great power.</p>\n<p>Introduction can ben found in this link <a href=\"https://en.wikipedia.org/wiki/Russia\" target=\"_blank\" rel=\"noopener\">Russia</a></p>","more":"<p>Russia depends on Export and Energy Industrial. That is to say it is being held by others and economics stability is so weak.</p>\n<p>Some news related to Russia is listed below:</p>\n<p>2020年1月30日 - <em>Russia</em> is to <em>close</em> its <em>border</em> with <em>China</em> as a measure to prevent the spread of the coronavirus, according to the country’s state media.</p>\n<p>2020年2月19日 - Russia to ban entry of Chinese nationals to halt virus.</p>\n<p>2020年3月6日 - OPEC and Russia Fail to Read A Deal an agreement to reduce production.</p>\n<p>All the news above indicate that Russia has no ability to contain the COVID-19 and Russia’s economy depends on Oil heavily. This is my opinion about Russia.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">英国金融时报报道，2009年，俄罗斯石油同中石油签署了为期20年，每年向中国供应1500万吨原油的合同。</span><br><span class=\"line\"></span><br><span class=\"line\">　　历届6月，中俄签订史无前例的大宗合同，俄方将在25年内向中国增供3.6亿吨原油（每年1440万吨），按照目前的油价，合同总价值达到2700亿美元。据俄罗斯媒体报道，中方将为这笔交易支付预付款——大约650至670亿美元，可以缓解俄油的负债率，并建立相应管道。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">俄的GDP主要基于能源出口，而花销基本上在军工上，保护自己的能源管道以及出口线路，如果减产意味着民生问题无限放大，所以他们不会妥协。对于CN，石油一直非常匮乏，主要依靠俄熊出口，其次就是伊朗通过巴基斯坦管道进来，现在原油作为丙烯原材料，直接会影响到后续口罩生产，所以需求量非常大。</span><br></pre></td></tr></table></figure>"},{"title":"About South East Asia","date":"2020-03-07T03:07:21.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-South-East-Asia.md","raw":"---\ntitle: About South East Asia\ndate: 2020-03-07 11:07:21\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-South-East-Asia","published":1,"updated":"2020-03-20T07:42:35.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66j002998kiemif6j7z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About UK","date":"2020-03-07T03:04:56.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-UK.md","raw":"---\ntitle: About UK\ndate: 2020-03-07 11:04:56\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-UK","published":1,"updated":"2020-03-20T07:42:35.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66l002a98kicsec5lzu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"About US","date":"2020-03-08T05:01:50.000Z","keywords":null,"description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/invest/About-US.md","raw":"---\ntitle: About US\ndate: 2020-03-08 13:01:50\ntags:\nkeywords:\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"invest/About-US","published":1,"updated":"2020-03-20T07:42:35.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66o002d98kifqpmffsc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"Something Usefull","date":"2020-03-08T05:02:29.000Z","keywords":null,"description":null,"_content":"\n\n\n<!--more-->\n\n\n\n\n\n\n\n![Area Divide](https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/politicsdivide.png)\n\n","source":"_posts/invest/Something-Usefull.md","raw":"---\ntitle: Something Usefull\ndate: 2020-03-08 13:02:29\ntags:\nkeywords:\ndescription:\n---\n\n\n\n<!--more-->\n\n\n\n\n\n\n\n![Area Divide](https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/politicsdivide.png)\n\n","slug":"invest/Something-Usefull","published":1,"updated":"2020-03-20T07:42:35.249Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66p002e98ki2x2c2ofr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n\n\n\n\n<p><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/politicsdivide.png\" alt=\"Area Divide\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://sh-oss-a.oss-cn-shanghai.aliyuncs.com/politicsdivide.png\" alt=\"Area Divide\"></p>"},{"title":"Something that irregular","date":"2020-03-09T08:12:07.000Z","keywords":null,"description":null,"_content":"\n这篇文章写操作心得。\n\n\n\n<!--more-->\n\n2020/3/5 - 今日沪深两市主力资金净流入47.26亿元。其中沪市主力净流入104.17亿元，深市主力净流出56.91元，中小板主力净流出38.57亿元，创业板主力净流出40.94亿元。\n\n2020/3/9 - 今日三大股指重挫。写一下心得体会。早上看了一下APP 说是本月以来收益有 14% ，但是到收盘恐怕连4%都不到了。做这个没有十足的把握最好的，有收益就收手，让资金动起来。毕竟到了口袋里的才是自己的，否则只是个数字而已。上面5 号的新闻没有引起足够的重视，如果有人意识到了的话恐怕是会赚一大笔，聪明的资金有足够的信息源，我们普通人，尤其是没有足够信息源的就只能做个有心人了，所有看到的事情都只是结果，要把看似不连续的事件联系起来，或许可以还原事情的本来。\n\n作弊这个事，没有好与坏，重要的是不被发现。\n\n2020/3/10 - **SZ37.83 SH18.42** 通信、电子、计算机、国防军工、休闲服务、电气设备、汽车、建筑材料、传媒、家用电器、非银金融\n\n2020/3/11 - **SZ.-61.27 SH.7.55** 休闲服务、交通运输、国防军工、农林牧渔\n\n2020/3/12 - **SZ.-5.25 SH.-55.33** \n\n2020/3/13 - **SZ.-34.37 SH.-97.05** 休闲服务、电气设备、计算机、农林牧渔\n\n2020/2/16 - **SZ. -39.39** **SH.-48.71** \n\n2020/3/17 - **SZ.-21.00** **SH.-50.42**\n\n2020/3/18 - **SZ.-27.01** **SH.-36.92**\n\n2020/3/19 - **SZ.-42.18** **SH.-52.38** 通信、商业贸易、电子、计算机、传媒、国防军工、电气设备、农林牧渔、机械设备、\n\n2020/3/20 - **SZ.-12.72 SH.46.73** 休闲服务、建筑材料、食品饮料、医药生物、房地产、轻工制造、银行、传媒、机械设备、建筑装饰、有色金属、交通运输、公用事业、化工、纺织服装、家用电器、汽车、采掘、国防军工、通信、钢铁、商业贸易、农林牧渔、计算机\n\n2020/3/23 - **SZ.-12.78 SH.-58.78**  尾盘有拉升8左右\n\n今天上了特别的一课。领教了。**三全食品**\n\n2020/3/24 - **SZ.14.96 SH.36.05** 汽车、有色金属、食品饮料、家用电器、建筑材料、非银金融、农林牧渔、通信、轻工制造、银行、综合、房地产、计算机、医药生物、采掘、机械设备、公用事业、钢铁、交通运输、纺织服装、休闲服饰、国防军工、化工、商业贸易、电子、建筑装饰、传媒、电气设备\n\n2020/3/25 - **SZ.17.89 SH.18.79** 汽车、房地产、综合、电子、医药生物、家用电器、纺织服装、电气设备、传媒、交通运输、农林牧渔、轻工制造、非银金融、食品饮料、有色金属、机械设备、计算机、休闲服务、化工、商业贸易、建筑装饰、通信、国防军工、建筑材料、银行、钢铁、公用事业、采掘\n\n2020/3/26 - **SZ.-1.81 SH.0.12**  医药生物、农林牧渔、银行、食品饮料、商业贸易 尾盘有资金进入\n\n","source":"_posts/invest/Something-that-irregular.md","raw":"---\ntitle: Something that irregular\ndate: 2020-03-09 16:12:07\ntags: invest\nkeywords:\ndescription:\n---\n\n这篇文章写操作心得。\n\n\n\n<!--more-->\n\n2020/3/5 - 今日沪深两市主力资金净流入47.26亿元。其中沪市主力净流入104.17亿元，深市主力净流出56.91元，中小板主力净流出38.57亿元，创业板主力净流出40.94亿元。\n\n2020/3/9 - 今日三大股指重挫。写一下心得体会。早上看了一下APP 说是本月以来收益有 14% ，但是到收盘恐怕连4%都不到了。做这个没有十足的把握最好的，有收益就收手，让资金动起来。毕竟到了口袋里的才是自己的，否则只是个数字而已。上面5 号的新闻没有引起足够的重视，如果有人意识到了的话恐怕是会赚一大笔，聪明的资金有足够的信息源，我们普通人，尤其是没有足够信息源的就只能做个有心人了，所有看到的事情都只是结果，要把看似不连续的事件联系起来，或许可以还原事情的本来。\n\n作弊这个事，没有好与坏，重要的是不被发现。\n\n2020/3/10 - **SZ37.83 SH18.42** 通信、电子、计算机、国防军工、休闲服务、电气设备、汽车、建筑材料、传媒、家用电器、非银金融\n\n2020/3/11 - **SZ.-61.27 SH.7.55** 休闲服务、交通运输、国防军工、农林牧渔\n\n2020/3/12 - **SZ.-5.25 SH.-55.33** \n\n2020/3/13 - **SZ.-34.37 SH.-97.05** 休闲服务、电气设备、计算机、农林牧渔\n\n2020/2/16 - **SZ. -39.39** **SH.-48.71** \n\n2020/3/17 - **SZ.-21.00** **SH.-50.42**\n\n2020/3/18 - **SZ.-27.01** **SH.-36.92**\n\n2020/3/19 - **SZ.-42.18** **SH.-52.38** 通信、商业贸易、电子、计算机、传媒、国防军工、电气设备、农林牧渔、机械设备、\n\n2020/3/20 - **SZ.-12.72 SH.46.73** 休闲服务、建筑材料、食品饮料、医药生物、房地产、轻工制造、银行、传媒、机械设备、建筑装饰、有色金属、交通运输、公用事业、化工、纺织服装、家用电器、汽车、采掘、国防军工、通信、钢铁、商业贸易、农林牧渔、计算机\n\n2020/3/23 - **SZ.-12.78 SH.-58.78**  尾盘有拉升8左右\n\n今天上了特别的一课。领教了。**三全食品**\n\n2020/3/24 - **SZ.14.96 SH.36.05** 汽车、有色金属、食品饮料、家用电器、建筑材料、非银金融、农林牧渔、通信、轻工制造、银行、综合、房地产、计算机、医药生物、采掘、机械设备、公用事业、钢铁、交通运输、纺织服装、休闲服饰、国防军工、化工、商业贸易、电子、建筑装饰、传媒、电气设备\n\n2020/3/25 - **SZ.17.89 SH.18.79** 汽车、房地产、综合、电子、医药生物、家用电器、纺织服装、电气设备、传媒、交通运输、农林牧渔、轻工制造、非银金融、食品饮料、有色金属、机械设备、计算机、休闲服务、化工、商业贸易、建筑装饰、通信、国防军工、建筑材料、银行、钢铁、公用事业、采掘\n\n2020/3/26 - **SZ.-1.81 SH.0.12**  医药生物、农林牧渔、银行、食品饮料、商业贸易 尾盘有资金进入\n\n","slug":"invest/Something-that-irregular","published":1,"updated":"2020-03-26T07:15:51.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66r002f98ki477c9vm3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>这篇文章写操作心得。</p>\n<a id=\"more\"></a>\n\n<p>2020/3/5 - 今日沪深两市主力资金净流入47.26亿元。其中沪市主力净流入104.17亿元，深市主力净流出56.91元，中小板主力净流出38.57亿元，创业板主力净流出40.94亿元。</p>\n<p>2020/3/9 - 今日三大股指重挫。写一下心得体会。早上看了一下APP 说是本月以来收益有 14% ，但是到收盘恐怕连4%都不到了。做这个没有十足的把握最好的，有收益就收手，让资金动起来。毕竟到了口袋里的才是自己的，否则只是个数字而已。上面5 号的新闻没有引起足够的重视，如果有人意识到了的话恐怕是会赚一大笔，聪明的资金有足够的信息源，我们普通人，尤其是没有足够信息源的就只能做个有心人了，所有看到的事情都只是结果，要把看似不连续的事件联系起来，或许可以还原事情的本来。</p>\n<p>作弊这个事，没有好与坏，重要的是不被发现。</p>\n<p>2020/3/10 - <strong>SZ37.83 SH18.42</strong> 通信、电子、计算机、国防军工、休闲服务、电气设备、汽车、建筑材料、传媒、家用电器、非银金融</p>\n<p>2020/3/11 - <strong>SZ.-61.27 SH.7.55</strong> 休闲服务、交通运输、国防军工、农林牧渔</p>\n<p>2020/3/12 - <strong>SZ.-5.25 SH.-55.33</strong> </p>\n<p>2020/3/13 - <strong>SZ.-34.37 SH.-97.05</strong> 休闲服务、电气设备、计算机、农林牧渔</p>\n<p>2020/2/16 - <strong>SZ. -39.39</strong> <strong>SH.-48.71</strong> </p>\n<p>2020/3/17 - <strong>SZ.-21.00</strong> <strong>SH.-50.42</strong></p>\n<p>2020/3/18 - <strong>SZ.-27.01</strong> <strong>SH.-36.92</strong></p>\n<p>2020/3/19 - <strong>SZ.-42.18</strong> <strong>SH.-52.38</strong> 通信、商业贸易、电子、计算机、传媒、国防军工、电气设备、农林牧渔、机械设备、</p>\n<p>2020/3/20 - <strong>SZ.-12.72 SH.46.73</strong> 休闲服务、建筑材料、食品饮料、医药生物、房地产、轻工制造、银行、传媒、机械设备、建筑装饰、有色金属、交通运输、公用事业、化工、纺织服装、家用电器、汽车、采掘、国防军工、通信、钢铁、商业贸易、农林牧渔、计算机</p>\n<p>2020/3/23 - <strong>SZ.-12.78 SH.-58.78</strong>  尾盘有拉升8左右</p>\n<p>今天上了特别的一课。领教了。<strong>三全食品</strong></p>\n<p>2020/3/24 - <strong>SZ.14.96 SH.36.05</strong> 汽车、有色金属、食品饮料、家用电器、建筑材料、非银金融、农林牧渔、通信、轻工制造、银行、综合、房地产、计算机、医药生物、采掘、机械设备、公用事业、钢铁、交通运输、纺织服装、休闲服饰、国防军工、化工、商业贸易、电子、建筑装饰、传媒、电气设备</p>\n<p>2020/3/25 - <strong>SZ.17.89 SH.18.79</strong> 汽车、房地产、综合、电子、医药生物、家用电器、纺织服装、电气设备、传媒、交通运输、农林牧渔、轻工制造、非银金融、食品饮料、有色金属、机械设备、计算机、休闲服务、化工、商业贸易、建筑装饰、通信、国防军工、建筑材料、银行、钢铁、公用事业、采掘</p>\n<p>2020/3/26 - <strong>SZ.-1.81 SH.0.12</strong>  医药生物、农林牧渔、银行、食品饮料、商业贸易 尾盘有资金进入</p>\n","site":{"data":{}},"excerpt":"<p>这篇文章写操作心得。</p>","more":"<p>2020/3/5 - 今日沪深两市主力资金净流入47.26亿元。其中沪市主力净流入104.17亿元，深市主力净流出56.91元，中小板主力净流出38.57亿元，创业板主力净流出40.94亿元。</p>\n<p>2020/3/9 - 今日三大股指重挫。写一下心得体会。早上看了一下APP 说是本月以来收益有 14% ，但是到收盘恐怕连4%都不到了。做这个没有十足的把握最好的，有收益就收手，让资金动起来。毕竟到了口袋里的才是自己的，否则只是个数字而已。上面5 号的新闻没有引起足够的重视，如果有人意识到了的话恐怕是会赚一大笔，聪明的资金有足够的信息源，我们普通人，尤其是没有足够信息源的就只能做个有心人了，所有看到的事情都只是结果，要把看似不连续的事件联系起来，或许可以还原事情的本来。</p>\n<p>作弊这个事，没有好与坏，重要的是不被发现。</p>\n<p>2020/3/10 - <strong>SZ37.83 SH18.42</strong> 通信、电子、计算机、国防军工、休闲服务、电气设备、汽车、建筑材料、传媒、家用电器、非银金融</p>\n<p>2020/3/11 - <strong>SZ.-61.27 SH.7.55</strong> 休闲服务、交通运输、国防军工、农林牧渔</p>\n<p>2020/3/12 - <strong>SZ.-5.25 SH.-55.33</strong> </p>\n<p>2020/3/13 - <strong>SZ.-34.37 SH.-97.05</strong> 休闲服务、电气设备、计算机、农林牧渔</p>\n<p>2020/2/16 - <strong>SZ. -39.39</strong> <strong>SH.-48.71</strong> </p>\n<p>2020/3/17 - <strong>SZ.-21.00</strong> <strong>SH.-50.42</strong></p>\n<p>2020/3/18 - <strong>SZ.-27.01</strong> <strong>SH.-36.92</strong></p>\n<p>2020/3/19 - <strong>SZ.-42.18</strong> <strong>SH.-52.38</strong> 通信、商业贸易、电子、计算机、传媒、国防军工、电气设备、农林牧渔、机械设备、</p>\n<p>2020/3/20 - <strong>SZ.-12.72 SH.46.73</strong> 休闲服务、建筑材料、食品饮料、医药生物、房地产、轻工制造、银行、传媒、机械设备、建筑装饰、有色金属、交通运输、公用事业、化工、纺织服装、家用电器、汽车、采掘、国防军工、通信、钢铁、商业贸易、农林牧渔、计算机</p>\n<p>2020/3/23 - <strong>SZ.-12.78 SH.-58.78</strong>  尾盘有拉升8左右</p>\n<p>今天上了特别的一课。领教了。<strong>三全食品</strong></p>\n<p>2020/3/24 - <strong>SZ.14.96 SH.36.05</strong> 汽车、有色金属、食品饮料、家用电器、建筑材料、非银金融、农林牧渔、通信、轻工制造、银行、综合、房地产、计算机、医药生物、采掘、机械设备、公用事业、钢铁、交通运输、纺织服装、休闲服饰、国防军工、化工、商业贸易、电子、建筑装饰、传媒、电气设备</p>\n<p>2020/3/25 - <strong>SZ.17.89 SH.18.79</strong> 汽车、房地产、综合、电子、医药生物、家用电器、纺织服装、电气设备、传媒、交通运输、农林牧渔、轻工制造、非银金融、食品饮料、有色金属、机械设备、计算机、休闲服务、化工、商业贸易、建筑装饰、通信、国防军工、建筑材料、银行、钢铁、公用事业、采掘</p>\n<p>2020/3/26 - <strong>SZ.-1.81 SH.0.12</strong>  医药生物、农林牧渔、银行、食品饮料、商业贸易 尾盘有资金进入</p>"},{"title":"投资失败","date":"2019-08-28T07:06:08.000Z","_content":"\n# ~~写在大北农突破10元前夜~~\n\n卖掉大北农已经正好一个周了。今天大北农涨停价格至`5.46`。\n\n\n\n<!--more-->\n\n\n\n上周卖掉的价格是4.85，那时亏损是30%。假如拿到现在至少回血12%左右。保守估计还有两个涨停。最近半年的持有的股票都是猪肉股。金新农赚了30%左右，把曾经亏掉的一部分算了赚回来了。出掉后换了华贸物流，结果又损失了15%。心急之下又换回了猪肉票，但是没考虑到猪肉板块已经经历过一轮上涨了，刚好回调窗口。买下了金新农，结果就是上个周以30%的亏损出掉了。很惨对不对？这一轮已经启动了，因为每一次的启动都会有媒体争相报道生猪存栏状况，自相关部门禁止养猪后，养猪相关企业越来越集中。最后势必导致猪肉价格高企。\n\nRev. 价格是由供求关系决定的，但是影响因素会有很多。\n\n​\t关注猪肉板块，以及估算相关个股是否到底可参考牧原股份，可以说这家公司所有业务都围绕生猪展开。另外注意每一次行情启动之间的间隔。还要注意网上相关新闻报道，此轮上涨，有条新闻印象特别深刻，就是有头猪竟然卖了快一万块。。。想赚钱，就必须事事留心。。。\n\n# 打脸更新\n\n今天是`2019-09-28 `大北农股价`4.53`较前一交易日上涨`6.09%`前一交易日下跌`8.37%`至`4.27`。","source":"_posts/invest/投资失败.md","raw":"---\ntitle: 投资失败\ndate: 2019-08-28 15:06:08\ntags: 小钱钱\n---\n\n# ~~写在大北农突破10元前夜~~\n\n卖掉大北农已经正好一个周了。今天大北农涨停价格至`5.46`。\n\n\n\n<!--more-->\n\n\n\n上周卖掉的价格是4.85，那时亏损是30%。假如拿到现在至少回血12%左右。保守估计还有两个涨停。最近半年的持有的股票都是猪肉股。金新农赚了30%左右，把曾经亏掉的一部分算了赚回来了。出掉后换了华贸物流，结果又损失了15%。心急之下又换回了猪肉票，但是没考虑到猪肉板块已经经历过一轮上涨了，刚好回调窗口。买下了金新农，结果就是上个周以30%的亏损出掉了。很惨对不对？这一轮已经启动了，因为每一次的启动都会有媒体争相报道生猪存栏状况，自相关部门禁止养猪后，养猪相关企业越来越集中。最后势必导致猪肉价格高企。\n\nRev. 价格是由供求关系决定的，但是影响因素会有很多。\n\n​\t关注猪肉板块，以及估算相关个股是否到底可参考牧原股份，可以说这家公司所有业务都围绕生猪展开。另外注意每一次行情启动之间的间隔。还要注意网上相关新闻报道，此轮上涨，有条新闻印象特别深刻，就是有头猪竟然卖了快一万块。。。想赚钱，就必须事事留心。。。\n\n# 打脸更新\n\n今天是`2019-09-28 `大北农股价`4.53`较前一交易日上涨`6.09%`前一交易日下跌`8.37%`至`4.27`。","slug":"invest/投资失败","published":1,"updated":"2020-03-20T07:42:35.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66t002h98kibjhfcr5x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"写在大北农突破10元前夜\"><a href=\"#写在大北农突破10元前夜\" class=\"headerlink\" title=\"写在大北农突破10元前夜\"></a><del>写在大北农突破10元前夜</del></h1><p>卖掉大北农已经正好一个周了。今天大北农涨停价格至<code>5.46</code>。</p>\n<a id=\"more\"></a>\n\n\n\n<p>上周卖掉的价格是4.85，那时亏损是30%。假如拿到现在至少回血12%左右。保守估计还有两个涨停。最近半年的持有的股票都是猪肉股。金新农赚了30%左右，把曾经亏掉的一部分算了赚回来了。出掉后换了华贸物流，结果又损失了15%。心急之下又换回了猪肉票，但是没考虑到猪肉板块已经经历过一轮上涨了，刚好回调窗口。买下了金新农，结果就是上个周以30%的亏损出掉了。很惨对不对？这一轮已经启动了，因为每一次的启动都会有媒体争相报道生猪存栏状况，自相关部门禁止养猪后，养猪相关企业越来越集中。最后势必导致猪肉价格高企。</p>\n<p>Rev. 价格是由供求关系决定的，但是影响因素会有很多。</p>\n<p>​    关注猪肉板块，以及估算相关个股是否到底可参考牧原股份，可以说这家公司所有业务都围绕生猪展开。另外注意每一次行情启动之间的间隔。还要注意网上相关新闻报道，此轮上涨，有条新闻印象特别深刻，就是有头猪竟然卖了快一万块。。。想赚钱，就必须事事留心。。。</p>\n<h1 id=\"打脸更新\"><a href=\"#打脸更新\" class=\"headerlink\" title=\"打脸更新\"></a>打脸更新</h1><p>今天是<code>2019-09-28</code>大北农股价<code>4.53</code>较前一交易日上涨<code>6.09%</code>前一交易日下跌<code>8.37%</code>至<code>4.27</code>。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"写在大北农突破10元前夜\"><a href=\"#写在大北农突破10元前夜\" class=\"headerlink\" title=\"写在大北农突破10元前夜\"></a><del>写在大北农突破10元前夜</del></h1><p>卖掉大北农已经正好一个周了。今天大北农涨停价格至<code>5.46</code>。</p>","more":"<p>上周卖掉的价格是4.85，那时亏损是30%。假如拿到现在至少回血12%左右。保守估计还有两个涨停。最近半年的持有的股票都是猪肉股。金新农赚了30%左右，把曾经亏掉的一部分算了赚回来了。出掉后换了华贸物流，结果又损失了15%。心急之下又换回了猪肉票，但是没考虑到猪肉板块已经经历过一轮上涨了，刚好回调窗口。买下了金新农，结果就是上个周以30%的亏损出掉了。很惨对不对？这一轮已经启动了，因为每一次的启动都会有媒体争相报道生猪存栏状况，自相关部门禁止养猪后，养猪相关企业越来越集中。最后势必导致猪肉价格高企。</p>\n<p>Rev. 价格是由供求关系决定的，但是影响因素会有很多。</p>\n<p>​    关注猪肉板块，以及估算相关个股是否到底可参考牧原股份，可以说这家公司所有业务都围绕生猪展开。另外注意每一次行情启动之间的间隔。还要注意网上相关新闻报道，此轮上涨，有条新闻印象特别深刻，就是有头猪竟然卖了快一万块。。。想赚钱，就必须事事留心。。。</p>\n<h1 id=\"打脸更新\"><a href=\"#打脸更新\" class=\"headerlink\" title=\"打脸更新\"></a>打脸更新</h1><p>今天是<code>2019-09-28</code>大北农股价<code>4.53</code>较前一交易日上涨<code>6.09%</code>前一交易日下跌<code>8.37%</code>至<code>4.27</code>。</p>"},{"title":"2020 should be a tough year","date":"2020-01-04T14:14:55.000Z","keywords":null,"description":null,"_content":"\nThis year should be a tough year for me.\n\nHow can I describe like this?\n\nLife gets tough as time fly.\n\n\n\n<!--more-->\n\n\n\nThis year or next year i will marry more likely next year. but thing will never comes as expected. 2019  I have done nothing especially in my own career which is so disappointing.\n\nlast two years ,I have nothing to brag about and felt quite upset. i don't know how to put it but this feeling is so real and never disappear.\n\nIn 2020 everything will be better fight for it.","source":"_posts/living/2020-should-be-a-tough-year.md","raw":"---\ntitle: 2020 should be a tough year\ndate: 2020-01-04 22:14:55\ntags: 生活\nkeywords:\ndescription:\n---\n\nThis year should be a tough year for me.\n\nHow can I describe like this?\n\nLife gets tough as time fly.\n\n\n\n<!--more-->\n\n\n\nThis year or next year i will marry more likely next year. but thing will never comes as expected. 2019  I have done nothing especially in my own career which is so disappointing.\n\nlast two years ,I have nothing to brag about and felt quite upset. i don't know how to put it but this feeling is so real and never disappear.\n\nIn 2020 everything will be better fight for it.","slug":"living/2020-should-be-a-tough-year","published":1,"updated":"2020-03-20T07:42:35.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66u002j98ki1k5g7wjk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>This year should be a tough year for me.</p>\n<p>How can I describe like this?</p>\n<p>Life gets tough as time fly.</p>\n<a id=\"more\"></a>\n\n\n\n<p>This year or next year i will marry more likely next year. but thing will never comes as expected. 2019  I have done nothing especially in my own career which is so disappointing.</p>\n<p>last two years ,I have nothing to brag about and felt quite upset. i don’t know how to put it but this feeling is so real and never disappear.</p>\n<p>In 2020 everything will be better fight for it.</p>\n","site":{"data":{}},"excerpt":"<p>This year should be a tough year for me.</p>\n<p>How can I describe like this?</p>\n<p>Life gets tough as time fly.</p>","more":"<p>This year or next year i will marry more likely next year. but thing will never comes as expected. 2019  I have done nothing especially in my own career which is so disappointing.</p>\n<p>last two years ,I have nothing to brag about and felt quite upset. i don’t know how to put it but this feeling is so real and never disappear.</p>\n<p>In 2020 everything will be better fight for it.</p>"},{"title":"My Equipment","date":"2020-03-13T06:09:23.000Z","keywords":"keyboard","description":"record of my new equipment","_content":"\nToday deliver man has my keyboard delivered. It cost ￥469. A little bit expensive compared to normal keyboard. And i love it.\n\n<!--more-->\n\n\n\n","source":"_posts/living/My-Equipment.md","raw":"---\ntitle: My Equipment\ndate: 2020-03-13 14:09:23\ntags: life\nkeywords: keyboard\ndescription: record of my new equipment\t\n---\n\nToday deliver man has my keyboard delivered. It cost ￥469. A little bit expensive compared to normal keyboard. And i love it.\n\n<!--more-->\n\n\n\n","slug":"living/My-Equipment","published":1,"updated":"2020-03-20T07:42:35.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66y002l98ki2e9f5o7k","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Today deliver man has my keyboard delivered. It cost ￥469. A little bit expensive compared to normal keyboard. And i love it.</p>\n<a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"<p>Today deliver man has my keyboard delivered. It cost ￥469. A little bit expensive compared to normal keyboard. And i love it.</p>","more":""},{"title":"来上海了","date":"2019-09-21T09:37:58.000Z","_content":"\n今天是到上海的第一天，从今天起，每天都要有进步。\n\n\n\n<!--more-->\n\n\n\n都要有反思，别人能做的事我也可以做，而且要做的更好。虽然说技术很菜，但是也做好了被虐的准备。每天进步，每天总结。","source":"_posts/living/上海.md","raw":"---\ntitle: 来上海了\ndate: 2019-09-21 17:37:58\ntags: 生活\n---\n\n今天是到上海的第一天，从今天起，每天都要有进步。\n\n\n\n<!--more-->\n\n\n\n都要有反思，别人能做的事我也可以做，而且要做的更好。虽然说技术很菜，但是也做好了被虐的准备。每天进步，每天总结。","slug":"living/上海","published":1,"updated":"2020-03-20T07:42:35.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw66z002m98ki40w8ft3u","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天是到上海的第一天，从今天起，每天都要有进步。</p>\n<a id=\"more\"></a>\n\n\n\n<p>都要有反思，别人能做的事我也可以做，而且要做的更好。虽然说技术很菜，但是也做好了被虐的准备。每天进步，每天总结。</p>\n","site":{"data":{}},"excerpt":"<p>今天是到上海的第一天，从今天起，每天都要有进步。</p>","more":"<p>都要有反思，别人能做的事我也可以做，而且要做的更好。虽然说技术很菜，但是也做好了被虐的准备。每天进步，每天总结。</p>"},{"title":"南柯一梦","date":"2019-11-10T09:26:46.000Z","keywords":null,"description":null,"_content":"\n日子一天天地过，年龄一岁岁的长，过往的记忆理应一随着年岁增长。可是，昨晚，我发现了一下可怕的事情，在我的记忆中，有几年的记忆就像消失了一样。\n\n\n\n<!--more-->\n\n\n\n细细地想了一下大概是小学四年级，高中二年级以及大学的二、三年级。这几年应该是我记忆中占最小部分的几年。其实小学二年级开始就有点失忆的样子了。小学里失忆应该跟严厉的老师有关，二年级的老师是非常严厉的老师，记忆中好像是训了我几次，从此就比较害怕他了。对我影响也算比较大了。我只记得对两个对我比较好的老师，一个叫钱楠楠，是我小学一年级老师。另一个叫钱洪鹏，是我小学三年级的老师。算是我遇到过的最好的老师。往后遇到的老师要么是能力不足，要么是处理问题手段单一，暴力。不得不承认，暴力对我影响不能用简单的几句话来概括。遭遇过这些暴力之后，我也变得暴力，或者说更倾向于暴力，虽然暴力解决不了任何问题。\n\n现在是晚上20：41，写不下去了。。。\n\n","source":"_posts/living/南柯一梦.md","raw":"---\ntitle: 南柯一梦\ndate: 2019-11-10 17:26:46\ntags: 生活\nkeywords:\ndescription:\n---\n\n日子一天天地过，年龄一岁岁的长，过往的记忆理应一随着年岁增长。可是，昨晚，我发现了一下可怕的事情，在我的记忆中，有几年的记忆就像消失了一样。\n\n\n\n<!--more-->\n\n\n\n细细地想了一下大概是小学四年级，高中二年级以及大学的二、三年级。这几年应该是我记忆中占最小部分的几年。其实小学二年级开始就有点失忆的样子了。小学里失忆应该跟严厉的老师有关，二年级的老师是非常严厉的老师，记忆中好像是训了我几次，从此就比较害怕他了。对我影响也算比较大了。我只记得对两个对我比较好的老师，一个叫钱楠楠，是我小学一年级老师。另一个叫钱洪鹏，是我小学三年级的老师。算是我遇到过的最好的老师。往后遇到的老师要么是能力不足，要么是处理问题手段单一，暴力。不得不承认，暴力对我影响不能用简单的几句话来概括。遭遇过这些暴力之后，我也变得暴力，或者说更倾向于暴力，虽然暴力解决不了任何问题。\n\n现在是晚上20：41，写不下去了。。。\n\n","slug":"living/南柯一梦","published":1,"updated":"2020-03-20T07:42:35.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw671002n98kigpgp9x1a","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>日子一天天地过，年龄一岁岁的长，过往的记忆理应一随着年岁增长。可是，昨晚，我发现了一下可怕的事情，在我的记忆中，有几年的记忆就像消失了一样。</p>\n<a id=\"more\"></a>\n\n\n\n<p>细细地想了一下大概是小学四年级，高中二年级以及大学的二、三年级。这几年应该是我记忆中占最小部分的几年。其实小学二年级开始就有点失忆的样子了。小学里失忆应该跟严厉的老师有关，二年级的老师是非常严厉的老师，记忆中好像是训了我几次，从此就比较害怕他了。对我影响也算比较大了。我只记得对两个对我比较好的老师，一个叫钱楠楠，是我小学一年级老师。另一个叫钱洪鹏，是我小学三年级的老师。算是我遇到过的最好的老师。往后遇到的老师要么是能力不足，要么是处理问题手段单一，暴力。不得不承认，暴力对我影响不能用简单的几句话来概括。遭遇过这些暴力之后，我也变得暴力，或者说更倾向于暴力，虽然暴力解决不了任何问题。</p>\n<p>现在是晚上20：41，写不下去了。。。</p>\n","site":{"data":{}},"excerpt":"<p>日子一天天地过，年龄一岁岁的长，过往的记忆理应一随着年岁增长。可是，昨晚，我发现了一下可怕的事情，在我的记忆中，有几年的记忆就像消失了一样。</p>","more":"<p>细细地想了一下大概是小学四年级，高中二年级以及大学的二、三年级。这几年应该是我记忆中占最小部分的几年。其实小学二年级开始就有点失忆的样子了。小学里失忆应该跟严厉的老师有关，二年级的老师是非常严厉的老师，记忆中好像是训了我几次，从此就比较害怕他了。对我影响也算比较大了。我只记得对两个对我比较好的老师，一个叫钱楠楠，是我小学一年级老师。另一个叫钱洪鹏，是我小学三年级的老师。算是我遇到过的最好的老师。往后遇到的老师要么是能力不足，要么是处理问题手段单一，暴力。不得不承认，暴力对我影响不能用简单的几句话来概括。遭遇过这些暴力之后，我也变得暴力，或者说更倾向于暴力，虽然暴力解决不了任何问题。</p>\n<p>现在是晚上20：41，写不下去了。。。</p>"},{"title":"最近在忙什么","date":"2019-08-27T00:48:03.000Z","_content":"\n​\t最近在忙什么呢？其实最近也不算忙。\n\n\n\n<!--more-->\n\n\n\n上周回了趟老家，去看了岳父。我岳父，一个挺不容易的男人（这是我一目前对他的看法）。家有七个孩子，我老婆是他第五个孩子。支撑起这么一个家着实不容易，6月份的时候得了一个脑梗，现在活动还都不太方便。说话什么的也不是很清楚。以后的日子可能也恢复不来了。为了这七个孩子，付出了太多。不得已在我老婆小的时候把我老婆寄养在了岳母的妹妹家，也就是我老婆的姨母家里。自是吃了不少苦头。\n\n​\t我岳母现在右腿静脉曲张，另外也着实到了不应该干重活拼命挣钱的年龄。然而二老放不下家里的小儿子，最小的那个也是唯一的一个儿子。儿孙自有儿孙福，这是我一直以来的想法。家里老人也不应该为自己的子女做太多，毕竟现在社会的发展已经得到了很大改善，差能差到哪里去呢。想必是思想中的偏见逼迫着人们不断的负重前行吧。人们心中的偏见像一座大山。\n\n​\t从老家回来后就是在出租屋内收拾东西准备老婆研究生开学了。\n\n​\t开学当天，租了一台共享汽车去学校。路是真的堵，人是真的多。路上老婆一路叨叨我开车。我都不想说话，开个车遵守交通法规不就行了吗，一路叨。开车最累的地方是不是这里？嗯？\n\n​\t到学校里报到也是难，研究生报到处竟然要3点才有人，嗯，我们大概是12点左右到的。\n\n​\t写不下去了，一堆没有营养的东西。。。\n\n​\t","source":"_posts/living/最近在忙什么.md","raw":"---\ntitle: 最近在忙什么\ndate: 2019-08-27 08:48:03\ntags: 生活\n---\n\n​\t最近在忙什么呢？其实最近也不算忙。\n\n\n\n<!--more-->\n\n\n\n上周回了趟老家，去看了岳父。我岳父，一个挺不容易的男人（这是我一目前对他的看法）。家有七个孩子，我老婆是他第五个孩子。支撑起这么一个家着实不容易，6月份的时候得了一个脑梗，现在活动还都不太方便。说话什么的也不是很清楚。以后的日子可能也恢复不来了。为了这七个孩子，付出了太多。不得已在我老婆小的时候把我老婆寄养在了岳母的妹妹家，也就是我老婆的姨母家里。自是吃了不少苦头。\n\n​\t我岳母现在右腿静脉曲张，另外也着实到了不应该干重活拼命挣钱的年龄。然而二老放不下家里的小儿子，最小的那个也是唯一的一个儿子。儿孙自有儿孙福，这是我一直以来的想法。家里老人也不应该为自己的子女做太多，毕竟现在社会的发展已经得到了很大改善，差能差到哪里去呢。想必是思想中的偏见逼迫着人们不断的负重前行吧。人们心中的偏见像一座大山。\n\n​\t从老家回来后就是在出租屋内收拾东西准备老婆研究生开学了。\n\n​\t开学当天，租了一台共享汽车去学校。路是真的堵，人是真的多。路上老婆一路叨叨我开车。我都不想说话，开个车遵守交通法规不就行了吗，一路叨。开车最累的地方是不是这里？嗯？\n\n​\t到学校里报到也是难，研究生报到处竟然要3点才有人，嗯，我们大概是12点左右到的。\n\n​\t写不下去了，一堆没有营养的东西。。。\n\n​\t","slug":"living/最近在忙什么","published":1,"updated":"2020-03-20T07:42:35.268Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw672002q98ki5lj5aacg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>​    最近在忙什么呢？其实最近也不算忙。</p>\n<a id=\"more\"></a>\n\n\n\n<p>上周回了趟老家，去看了岳父。我岳父，一个挺不容易的男人（这是我一目前对他的看法）。家有七个孩子，我老婆是他第五个孩子。支撑起这么一个家着实不容易，6月份的时候得了一个脑梗，现在活动还都不太方便。说话什么的也不是很清楚。以后的日子可能也恢复不来了。为了这七个孩子，付出了太多。不得已在我老婆小的时候把我老婆寄养在了岳母的妹妹家，也就是我老婆的姨母家里。自是吃了不少苦头。</p>\n<p>​    我岳母现在右腿静脉曲张，另外也着实到了不应该干重活拼命挣钱的年龄。然而二老放不下家里的小儿子，最小的那个也是唯一的一个儿子。儿孙自有儿孙福，这是我一直以来的想法。家里老人也不应该为自己的子女做太多，毕竟现在社会的发展已经得到了很大改善，差能差到哪里去呢。想必是思想中的偏见逼迫着人们不断的负重前行吧。人们心中的偏见像一座大山。</p>\n<p>​    从老家回来后就是在出租屋内收拾东西准备老婆研究生开学了。</p>\n<p>​    开学当天，租了一台共享汽车去学校。路是真的堵，人是真的多。路上老婆一路叨叨我开车。我都不想说话，开个车遵守交通法规不就行了吗，一路叨。开车最累的地方是不是这里？嗯？</p>\n<p>​    到学校里报到也是难，研究生报到处竟然要3点才有人，嗯，我们大概是12点左右到的。</p>\n<p>​    写不下去了，一堆没有营养的东西。。。</p>\n<p>​    </p>\n","site":{"data":{}},"excerpt":"<p>​    最近在忙什么呢？其实最近也不算忙。</p>","more":"<p>上周回了趟老家，去看了岳父。我岳父，一个挺不容易的男人（这是我一目前对他的看法）。家有七个孩子，我老婆是他第五个孩子。支撑起这么一个家着实不容易，6月份的时候得了一个脑梗，现在活动还都不太方便。说话什么的也不是很清楚。以后的日子可能也恢复不来了。为了这七个孩子，付出了太多。不得已在我老婆小的时候把我老婆寄养在了岳母的妹妹家，也就是我老婆的姨母家里。自是吃了不少苦头。</p>\n<p>​    我岳母现在右腿静脉曲张，另外也着实到了不应该干重活拼命挣钱的年龄。然而二老放不下家里的小儿子，最小的那个也是唯一的一个儿子。儿孙自有儿孙福，这是我一直以来的想法。家里老人也不应该为自己的子女做太多，毕竟现在社会的发展已经得到了很大改善，差能差到哪里去呢。想必是思想中的偏见逼迫着人们不断的负重前行吧。人们心中的偏见像一座大山。</p>\n<p>​    从老家回来后就是在出租屋内收拾东西准备老婆研究生开学了。</p>\n<p>​    开学当天，租了一台共享汽车去学校。路是真的堵，人是真的多。路上老婆一路叨叨我开车。我都不想说话，开个车遵守交通法规不就行了吗，一路叨。开车最累的地方是不是这里？嗯？</p>\n<p>​    到学校里报到也是难，研究生报到处竟然要3点才有人，嗯，我们大概是12点左右到的。</p>\n<p>​    写不下去了，一堆没有营养的东西。。。</p>\n<p>​    </p>"},{"title":"没事就瞎写点东西，做个小总结","date":"2019-07-29T13:36:32.000Z","_content":"\n### 这篇文章没有任何有用的信息。\n\n就是想写点东西，也算是没有追求的追求。\n\n<!--more-->\n\n别人写博客是必须有东西才写出来，而我就是不一样了，我是无病申吟。不是为了写出有用的东西，纯粹为了写而写，如果你在看的话，我劝你放弃。\n\n写完了。再见。","source":"_posts/living/没事就瞎写点东西，做个小总结.md","raw":"---\ntitle: 没事就瞎写点东西，做个小总结\ndate: 2019-07-29 21:36:32\ntags: 生活\n---\n\n### 这篇文章没有任何有用的信息。\n\n就是想写点东西，也算是没有追求的追求。\n\n<!--more-->\n\n别人写博客是必须有东西才写出来，而我就是不一样了，我是无病申吟。不是为了写出有用的东西，纯粹为了写而写，如果你在看的话，我劝你放弃。\n\n写完了。再见。","slug":"living/没事就瞎写点东西，做个小总结","published":1,"updated":"2020-03-20T07:42:35.271Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw674002r98ki1x6bby3k","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"这篇文章没有任何有用的信息。\"><a href=\"#这篇文章没有任何有用的信息。\" class=\"headerlink\" title=\"这篇文章没有任何有用的信息。\"></a>这篇文章没有任何有用的信息。</h3><p>就是想写点东西，也算是没有追求的追求。</p>\n<a id=\"more\"></a>\n\n<p>别人写博客是必须有东西才写出来，而我就是不一样了，我是无病申吟。不是为了写出有用的东西，纯粹为了写而写，如果你在看的话，我劝你放弃。</p>\n<p>写完了。再见。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"这篇文章没有任何有用的信息。\"><a href=\"#这篇文章没有任何有用的信息。\" class=\"headerlink\" title=\"这篇文章没有任何有用的信息。\"></a>这篇文章没有任何有用的信息。</h3><p>就是想写点东西，也算是没有追求的追求。</p>","more":"<p>别人写博客是必须有东西才写出来，而我就是不一样了，我是无病申吟。不是为了写出有用的东西，纯粹为了写而写，如果你在看的话，我劝你放弃。</p>\n<p>写完了。再见。</p>"},{"title":"生活竟是如此的无趣","date":"1970-01-01T13:40:32.000Z","_content":"\n不知道这到底是谁的问题。。。\n\n\n\n<!--more-->\n\n","source":"_posts/living/生活竟是如此的无趣.md","raw":"---\ntitle: 生活竟是如此的无趣\ndate: 1970-01-01 21:40:32\ntags: 生活\n---\n\n不知道这到底是谁的问题。。。\n\n\n\n<!--more-->\n\n","slug":"living/生活竟是如此的无趣","published":1,"updated":"2020-03-20T07:42:35.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw676002u98ki9iihd7bd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>不知道这到底是谁的问题。。。</p>\n<a id=\"more\"></a>\n\n","site":{"data":{}},"excerpt":"<p>不知道这到底是谁的问题。。。</p>","more":""},{"title":"WeERP小程序后台搭建","date":"2019-11-24T03:48:57.000Z","keywords":"WeERP 小程序","description":null,"_content":"\n\n\n\n\n<!--more-->\n\n\n\n","source":"_posts/miniprogram/WeERP小程序后台搭建.md","raw":"---\ntitle: WeERP小程序后台搭建\ndate: 2019-11-24 11:48:57\ntags: 小程序\nkeywords: WeERP 小程序\ndescription:\n---\n\n\n\n\n\n<!--more-->\n\n\n\n","slug":"miniprogram/WeERP小程序后台搭建","published":1,"updated":"2020-03-20T07:42:35.279Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw679002w98kihernb0z0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"","more":""},{"title":"电话面试失败有感","date":"2019-08-27T13:58:30.000Z","_content":"\n## 失败总是有原因的\n\n今天上午按照约定, PwC 的 HR 的小姐姐给我来了电话。\n\n\n\n<!--more-->\n\n\n\n也算第一次有了电话面试的经历，聊的有点尴尬，没能把故事讲好。感觉自己还是老样子没什么改进，现在都不想说出那句话了。很多事情都是可以提前准备的，无论什么事都是可以的。预案做不好，相应地什么事情都会做不好。\n\n​\t下午的时候，接了英语测试电话。我的口语真的是很烂，又想起了当年在学院办公室的那次，尴尬的和外国人聊天，但是人家会说中文，很流利的那种，而我说的非常的烂。当时给了我很大的刺激。时至今日仍然很烂，做什么事都坚持不下去，不够专注。各种为自己找借口，找理由。自己该怎么办呢？眼看着龄人在不断地超越自己，自己竟然还阿Q式的安慰自己。真是太失败了。\n\n","source":"_posts/living/面试失败有感.md","raw":"---\ntitle: 电话面试失败有感\ndate: 2019-08-27 21:58:30\ntags: 生活\n---\n\n## 失败总是有原因的\n\n今天上午按照约定, PwC 的 HR 的小姐姐给我来了电话。\n\n\n\n<!--more-->\n\n\n\n也算第一次有了电话面试的经历，聊的有点尴尬，没能把故事讲好。感觉自己还是老样子没什么改进，现在都不想说出那句话了。很多事情都是可以提前准备的，无论什么事都是可以的。预案做不好，相应地什么事情都会做不好。\n\n​\t下午的时候，接了英语测试电话。我的口语真的是很烂，又想起了当年在学院办公室的那次，尴尬的和外国人聊天，但是人家会说中文，很流利的那种，而我说的非常的烂。当时给了我很大的刺激。时至今日仍然很烂，做什么事都坚持不下去，不够专注。各种为自己找借口，找理由。自己该怎么办呢？眼看着龄人在不断地超越自己，自己竟然还阿Q式的安慰自己。真是太失败了。\n\n","slug":"living/面试失败有感","published":1,"updated":"2020-03-20T07:42:35.275Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67b002z98ki54jyhts2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"失败总是有原因的\"><a href=\"#失败总是有原因的\" class=\"headerlink\" title=\"失败总是有原因的\"></a>失败总是有原因的</h2><p>今天上午按照约定, PwC 的 HR 的小姐姐给我来了电话。</p>\n<a id=\"more\"></a>\n\n\n\n<p>也算第一次有了电话面试的经历，聊的有点尴尬，没能把故事讲好。感觉自己还是老样子没什么改进，现在都不想说出那句话了。很多事情都是可以提前准备的，无论什么事都是可以的。预案做不好，相应地什么事情都会做不好。</p>\n<p>​    下午的时候，接了英语测试电话。我的口语真的是很烂，又想起了当年在学院办公室的那次，尴尬的和外国人聊天，但是人家会说中文，很流利的那种，而我说的非常的烂。当时给了我很大的刺激。时至今日仍然很烂，做什么事都坚持不下去，不够专注。各种为自己找借口，找理由。自己该怎么办呢？眼看着龄人在不断地超越自己，自己竟然还阿Q式的安慰自己。真是太失败了。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"失败总是有原因的\"><a href=\"#失败总是有原因的\" class=\"headerlink\" title=\"失败总是有原因的\"></a>失败总是有原因的</h2><p>今天上午按照约定, PwC 的 HR 的小姐姐给我来了电话。</p>","more":"<p>也算第一次有了电话面试的经历，聊的有点尴尬，没能把故事讲好。感觉自己还是老样子没什么改进，现在都不想说出那句话了。很多事情都是可以提前准备的，无论什么事都是可以的。预案做不好，相应地什么事情都会做不好。</p>\n<p>​    下午的时候，接了英语测试电话。我的口语真的是很烂，又想起了当年在学院办公室的那次，尴尬的和外国人聊天，但是人家会说中文，很流利的那种，而我说的非常的烂。当时给了我很大的刺激。时至今日仍然很烂，做什么事都坚持不下去，不够专注。各种为自己找借口，找理由。自己该怎么办呢？眼看着龄人在不断地超越自己，自己竟然还阿Q式的安慰自己。真是太失败了。</p>"},{"title":"微信小程序开发（一）","date":"2019-10-30T09:37:02.000Z","keywords":null,"description":null,"_content":"马上要双十一了，有一个不太成熟的想法。想在双 11 前写出一个小程序来。\n今天是开始写的第二天，找到了一份还不错的教学视频，感觉靠谱。今天学习一下，把要写的界面和功能先列一下，明天动手写代码实现。希望能在双 11 前上线。\n\n\n\n<!--more-->\n\n\n\n#### 想法：\n\n​\t这个小程序里某些展示的东西只会在特定的时间对用户可见，意味着一但设定之后就没有办法在开放期间进行修改也不能查看，只有等到特定时间时用户写的东西才能再次可见。当然这不是绝对的，不然我怎么赚钱，付费后经审核可以查看或者删除。做到一个单向性。未来可能考虑使用手机或者邮箱通知用户。","source":"_posts/miniprogram/微信小程序开发（一）.md","raw":"---\ntitle: 微信小程序开发（一）\ndate: 2019-10-30 17:37:02\ntags: 小程序\nkeywords:\ndescription:\n---\n马上要双十一了，有一个不太成熟的想法。想在双 11 前写出一个小程序来。\n今天是开始写的第二天，找到了一份还不错的教学视频，感觉靠谱。今天学习一下，把要写的界面和功能先列一下，明天动手写代码实现。希望能在双 11 前上线。\n\n\n\n<!--more-->\n\n\n\n#### 想法：\n\n​\t这个小程序里某些展示的东西只会在特定的时间对用户可见，意味着一但设定之后就没有办法在开放期间进行修改也不能查看，只有等到特定时间时用户写的东西才能再次可见。当然这不是绝对的，不然我怎么赚钱，付费后经审核可以查看或者删除。做到一个单向性。未来可能考虑使用手机或者邮箱通知用户。","slug":"miniprogram/微信小程序开发（一）","published":1,"updated":"2020-03-20T07:42:35.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67c003198kidn4mhex6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>马上要双十一了，有一个不太成熟的想法。想在双 11 前写出一个小程序来。<br>今天是开始写的第二天，找到了一份还不错的教学视频，感觉靠谱。今天学习一下，把要写的界面和功能先列一下，明天动手写代码实现。希望能在双 11 前上线。</p>\n<a id=\"more\"></a>\n\n\n\n<h4 id=\"想法：\"><a href=\"#想法：\" class=\"headerlink\" title=\"想法：\"></a>想法：</h4><p>​    这个小程序里某些展示的东西只会在特定的时间对用户可见，意味着一但设定之后就没有办法在开放期间进行修改也不能查看，只有等到特定时间时用户写的东西才能再次可见。当然这不是绝对的，不然我怎么赚钱，付费后经审核可以查看或者删除。做到一个单向性。未来可能考虑使用手机或者邮箱通知用户。</p>\n","site":{"data":{}},"excerpt":"<p>马上要双十一了，有一个不太成熟的想法。想在双 11 前写出一个小程序来。<br>今天是开始写的第二天，找到了一份还不错的教学视频，感觉靠谱。今天学习一下，把要写的界面和功能先列一下，明天动手写代码实现。希望能在双 11 前上线。</p>","more":"<h4 id=\"想法：\"><a href=\"#想法：\" class=\"headerlink\" title=\"想法：\"></a>想法：</h4><p>​    这个小程序里某些展示的东西只会在特定的时间对用户可见，意味着一但设定之后就没有办法在开放期间进行修改也不能查看，只有等到特定时间时用户写的东西才能再次可见。当然这不是绝对的，不然我怎么赚钱，付费后经审核可以查看或者删除。做到一个单向性。未来可能考虑使用手机或者邮箱通知用户。</p>"},{"title":"微信小程序开发（三）","date":"2019-11-14T02:22:15.000Z","keywords":null,"description":null,"_content":"\n两天把剩下的部分写完。\n\n\n\n<!--more-->\n\n\n\n- [ ] 首页信息流展示\n- [ ] 用户信息修改\n- [ ] 用户公开/私密信息查看，编辑\n- [ ] 回复页\n- [ ] 搜索\n\n","source":"_posts/miniprogram/微信小程序开发（三）.md","raw":"---\ntitle: 微信小程序开发（三）\ndate: 2019-11-14 10:22:15\ntags: 小程序\nkeywords:\ndescription:\n---\n\n两天把剩下的部分写完。\n\n\n\n<!--more-->\n\n\n\n- [ ] 首页信息流展示\n- [ ] 用户信息修改\n- [ ] 用户公开/私密信息查看，编辑\n- [ ] 回复页\n- [ ] 搜索\n\n","slug":"miniprogram/微信小程序开发（三）","published":1,"updated":"2020-03-20T07:42:35.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67e003498ki01975dqo","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>两天把剩下的部分写完。</p>\n<a id=\"more\"></a>\n\n\n\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 首页信息流展示</li>\n<li><input disabled=\"\" type=\"checkbox\"> 用户信息修改</li>\n<li><input disabled=\"\" type=\"checkbox\"> 用户公开/私密信息查看，编辑</li>\n<li><input disabled=\"\" type=\"checkbox\"> 回复页</li>\n<li><input disabled=\"\" type=\"checkbox\"> 搜索</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>两天把剩下的部分写完。</p>","more":"<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 首页信息流展示</li>\n<li><input disabled=\"\" type=\"checkbox\"> 用户信息修改</li>\n<li><input disabled=\"\" type=\"checkbox\"> 用户公开/私密信息查看，编辑</li>\n<li><input disabled=\"\" type=\"checkbox\"> 回复页</li>\n<li><input disabled=\"\" type=\"checkbox\"> 搜索</li>\n</ul>"},{"title":"微信小程序开发（二）","date":"2019-11-13T07:58:02.000Z","keywords":null,"description":null,"_content":"\n最近写小程序`Promise`搞的头大，还是技术不到位。代码写起来各种不爽。\n\n前两天已经完成了用户信息的写入，以及编辑页面的初步搭建，今天把剩下的写入数据库完成。\n\n这几天学到的有：\n\n1. 云函数\n2. 表单绑定\n\n","source":"_posts/miniprogram/微信小程序开发（二）.md","raw":"---\ntitle: 微信小程序开发（二）\ndate: 2019-11-13 15:58:02\ntags: 小程序\nkeywords:\ndescription:\n---\n\n最近写小程序`Promise`搞的头大，还是技术不到位。代码写起来各种不爽。\n\n前两天已经完成了用户信息的写入，以及编辑页面的初步搭建，今天把剩下的写入数据库完成。\n\n这几天学到的有：\n\n1. 云函数\n2. 表单绑定\n\n","slug":"miniprogram/微信小程序开发（二）","published":1,"updated":"2020-03-20T07:42:35.287Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67f003698kic2hu71im","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近写小程序<code>Promise</code>搞的头大，还是技术不到位。代码写起来各种不爽。</p>\n<p>前两天已经完成了用户信息的写入，以及编辑页面的初步搭建，今天把剩下的写入数据库完成。</p>\n<p>这几天学到的有：</p>\n<ol>\n<li>云函数</li>\n<li>表单绑定</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>最近写小程序<code>Promise</code>搞的头大，还是技术不到位。代码写起来各种不爽。</p>\n<p>前两天已经完成了用户信息的写入，以及编辑页面的初步搭建，今天把剩下的写入数据库完成。</p>\n<p>这几天学到的有：</p>\n<ol>\n<li>云函数</li>\n<li>表单绑定</li>\n</ol>\n"},{"title":"首个小程序暂告一段落","date":"2019-11-23T13:41:28.000Z","keywords":null,"description":null,"_content":"\n今天，首个小程序暂时画个句号。我的第一个小程序，虽然各项功能都还不完善，但是到今天也必须让它暂时结束 了。开发过程中，开发过程中的坑就不多说了，谁写谁知道。\n\n\n\n<!--more-->\n\n\n\n接下来，从明天开始要写另一个带后台的小程序了。写关于这个小程序的时候标题会带上`WeERP`字样，开发过程中会把涉及到的技术点包括非常基本的点都写出来。另外，希望，写前端页面的时候没有写第一个小程序时那么痛苦。。。计划工期为一个月。\n\n","source":"_posts/miniprogram/首个小程序暂告一段落.md","raw":"---\ntitle: 首个小程序暂告一段落\ndate: 2019-11-23 21:41:28\ntags: 小程序\nkeywords:\ndescription:\n---\n\n今天，首个小程序暂时画个句号。我的第一个小程序，虽然各项功能都还不完善，但是到今天也必须让它暂时结束 了。开发过程中，开发过程中的坑就不多说了，谁写谁知道。\n\n\n\n<!--more-->\n\n\n\n接下来，从明天开始要写另一个带后台的小程序了。写关于这个小程序的时候标题会带上`WeERP`字样，开发过程中会把涉及到的技术点包括非常基本的点都写出来。另外，希望，写前端页面的时候没有写第一个小程序时那么痛苦。。。计划工期为一个月。\n\n","slug":"miniprogram/首个小程序暂告一段落","published":1,"updated":"2020-03-20T07:42:35.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67i003998kid13ecrgm","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天，首个小程序暂时画个句号。我的第一个小程序，虽然各项功能都还不完善，但是到今天也必须让它暂时结束 了。开发过程中，开发过程中的坑就不多说了，谁写谁知道。</p>\n<a id=\"more\"></a>\n\n\n\n<p>接下来，从明天开始要写另一个带后台的小程序了。写关于这个小程序的时候标题会带上<code>WeERP</code>字样，开发过程中会把涉及到的技术点包括非常基本的点都写出来。另外，希望，写前端页面的时候没有写第一个小程序时那么痛苦。。。计划工期为一个月。</p>\n","site":{"data":{}},"excerpt":"<p>今天，首个小程序暂时画个句号。我的第一个小程序，虽然各项功能都还不完善，但是到今天也必须让它暂时结束 了。开发过程中，开发过程中的坑就不多说了，谁写谁知道。</p>","more":"<p>接下来，从明天开始要写另一个带后台的小程序了。写关于这个小程序的时候标题会带上<code>WeERP</code>字样，开发过程中会把涉及到的技术点包括非常基本的点都写出来。另外，希望，写前端页面的时候没有写第一个小程序时那么痛苦。。。计划工期为一个月。</p>"},{"title":"开个新坑-WERP","date":"2019-11-20T06:23:21.000Z","keywords":null,"description":null,"_content":"\n微信小程序断断续续地写了20多天了，原计划11天内完成的。鸽了太久了，目前已经完成的差不多了。目前有计划利用小程序的开放能力，趁热打铁再搞一个ERP系统。\n\n\n\n<!--more-->\n\n\n\n目前的构思，分成两个部分，一部分是小程序另一部分使用 Spring 微服务进行构建。数据通信使用 RestFull 风格。\n\n","source":"_posts/proj/开个新坑-WERP.md","raw":"---\ntitle: 开个新坑-WERP\ndate: 2019-11-20 14:23:21\ntags: 项目\nkeywords:\ndescription:\n---\n\n微信小程序断断续续地写了20多天了，原计划11天内完成的。鸽了太久了，目前已经完成的差不多了。目前有计划利用小程序的开放能力，趁热打铁再搞一个ERP系统。\n\n\n\n<!--more-->\n\n\n\n目前的构思，分成两个部分，一部分是小程序另一部分使用 Spring 微服务进行构建。数据通信使用 RestFull 风格。\n\n","slug":"proj/开个新坑-WERP","published":1,"updated":"2020-03-20T07:42:35.303Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67m003b98ki33js73dy","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>微信小程序断断续续地写了20多天了，原计划11天内完成的。鸽了太久了，目前已经完成的差不多了。目前有计划利用小程序的开放能力，趁热打铁再搞一个ERP系统。</p>\n<a id=\"more\"></a>\n\n\n\n<p>目前的构思，分成两个部分，一部分是小程序另一部分使用 Spring 微服务进行构建。数据通信使用 RestFull 风格。</p>\n","site":{"data":{}},"excerpt":"<p>微信小程序断断续续地写了20多天了，原计划11天内完成的。鸽了太久了，目前已经完成的差不多了。目前有计划利用小程序的开放能力，趁热打铁再搞一个ERP系统。</p>","more":"<p>目前的构思，分成两个部分，一部分是小程序另一部分使用 Spring 微服务进行构建。数据通信使用 RestFull 风格。</p>"},{"title":"最近看了微服务相关的书","date":"2019-09-10T13:16:28.000Z","_content":"\n看了这本书之后，深刻地感觉到，不断的接触新技术是多么的重要。\n\n\n\n<!--more-->\n\n","source":"_posts/read/最近看了微服务相关的书.md","raw":"---\ntitle: 最近看了微服务相关的书\ndate: 2019-09-10 21:16:28\ntags: 读后感\n---\n\n看了这本书之后，深刻地感觉到，不断的接触新技术是多么的重要。\n\n\n\n<!--more-->\n\n","slug":"read/最近看了微服务相关的书","published":1,"updated":"2020-03-20T07:42:35.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67p003e98ki8wikdwrz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>看了这本书之后，深刻地感觉到，不断的接触新技术是多么的重要。</p>\n<a id=\"more\"></a>\n\n","site":{"data":{}},"excerpt":"<p>看了这本书之后，深刻地感觉到，不断的接触新技术是多么的重要。</p>","more":""},{"title":"ASCII码表","date":"2019-10-07T06:43:45.000Z","keywords":"技术","description":"ascii码表","_content":"\n这个表还是很有用的，这里摘出来放在这里以务不时之需。\n\n\n\n<!--more-->\n\n\n\n```reStructuredText\nDec  Char                           Dec  Char     Dec  Char     Dec  Char\n---------                           ---------     ---------     ----------\n  0  NUL (null)                      32  SPACE     64  @         96  `\n  1  SOH (start of heading)          33  !         65  A         97  a\n  2  STX (start of text)             34  \"         66  B         98  b\n  3  ETX (end of text)               35  #         67  C         99  c\n  4  EOT (end of transmission)       36  $         68  D        100  d\n  5  ENQ (enquiry)                   37  %         69  E        101  e\n  6  ACK (acknowledge)               38  &         70  F        102  f\n  7  BEL (bell)                      39  '         71  G        103  g\n  8  BS  (backspace)                 40  (         72  H        104  h\n  9  TAB (horizontal tab)            41  )         73  I        105  i\n 10  LF  (NL line feed, new line)    42  *         74  J        106  j\n 11  VT  (vertical tab)              43  +         75  K        107  k\n 12  FF  (NP form feed, new page)    44  ,         76  L        108  l\n 13  CR  (carriage return)           45  -         77  M        109  m\n 14  SO  (shift out)                 46  .         78  N        110  n\n 15  SI  (shift in)                  47  /         79  O        111  o\n 16  DLE (data link escape)          48  0         80  P        112  p\n 17  DC1 (device control 1)          49  1         81  Q        113  q\n 18  DC2 (device control 2)          50  2         82  R        114  r\n 19  DC3 (device control 3)          51  3         83  S        115  s\n 20  DC4 (device control 4)          52  4         84  T        116  t\n 21  NAK (negative acknowledge)      53  5         85  U        117  u\n 22  SYN (synchronous idle)          54  6         86  V        118  v\n 23  ETB (end of trans. block)       55  7         87  W        119  w\n 24  CAN (cancel)                    56  8         88  X        120  x\n 25  EM  (end of medium)             57  9         89  Y        121  y\n 26  SUB (substitute)                58  :         90  Z        122  z\n 27  ESC (escape)                    59  ;         91  [        123  {\n 28  FS  (file separator)            60  <         92  \\        124  |\n 29  GS  (group separator)           61  =         93  ]        125  }\n 30  RS  (record separator)          62  >         94  ^        126  ~\n 31  US  (unit separator)            63  ?         95  _        127  DEL\n```\n\n大小字母之间相差32。","source":"_posts/technique/ASCII码表.md","raw":"---\ntitle: ASCII码表\ndate: 2019-10-07 14:43:45\ntags: cheatsheet\nkeywords: 技术\ndescription: ascii码表\n---\n\n这个表还是很有用的，这里摘出来放在这里以务不时之需。\n\n\n\n<!--more-->\n\n\n\n```reStructuredText\nDec  Char                           Dec  Char     Dec  Char     Dec  Char\n---------                           ---------     ---------     ----------\n  0  NUL (null)                      32  SPACE     64  @         96  `\n  1  SOH (start of heading)          33  !         65  A         97  a\n  2  STX (start of text)             34  \"         66  B         98  b\n  3  ETX (end of text)               35  #         67  C         99  c\n  4  EOT (end of transmission)       36  $         68  D        100  d\n  5  ENQ (enquiry)                   37  %         69  E        101  e\n  6  ACK (acknowledge)               38  &         70  F        102  f\n  7  BEL (bell)                      39  '         71  G        103  g\n  8  BS  (backspace)                 40  (         72  H        104  h\n  9  TAB (horizontal tab)            41  )         73  I        105  i\n 10  LF  (NL line feed, new line)    42  *         74  J        106  j\n 11  VT  (vertical tab)              43  +         75  K        107  k\n 12  FF  (NP form feed, new page)    44  ,         76  L        108  l\n 13  CR  (carriage return)           45  -         77  M        109  m\n 14  SO  (shift out)                 46  .         78  N        110  n\n 15  SI  (shift in)                  47  /         79  O        111  o\n 16  DLE (data link escape)          48  0         80  P        112  p\n 17  DC1 (device control 1)          49  1         81  Q        113  q\n 18  DC2 (device control 2)          50  2         82  R        114  r\n 19  DC3 (device control 3)          51  3         83  S        115  s\n 20  DC4 (device control 4)          52  4         84  T        116  t\n 21  NAK (negative acknowledge)      53  5         85  U        117  u\n 22  SYN (synchronous idle)          54  6         86  V        118  v\n 23  ETB (end of trans. block)       55  7         87  W        119  w\n 24  CAN (cancel)                    56  8         88  X        120  x\n 25  EM  (end of medium)             57  9         89  Y        121  y\n 26  SUB (substitute)                58  :         90  Z        122  z\n 27  ESC (escape)                    59  ;         91  [        123  {\n 28  FS  (file separator)            60  <         92  \\        124  |\n 29  GS  (group separator)           61  =         93  ]        125  }\n 30  RS  (record separator)          62  >         94  ^        126  ~\n 31  US  (unit separator)            63  ?         95  _        127  DEL\n```\n\n大小字母之间相差32。","slug":"technique/ASCII码表","published":1,"updated":"2020-03-20T07:42:35.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67r003g98kibmiy2y59","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>这个表还是很有用的，这里摘出来放在这里以务不时之需。</p>\n<a id=\"more\"></a>\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dec  Char                           Dec  Char     Dec  Char     Dec  Char</span><br><span class=\"line\">---------                           ---------     ---------     ----------</span><br><span class=\"line\">  0  NUL (null)                      32  SPACE     64  @         96  &#96;</span><br><span class=\"line\">  1  SOH (start of heading)          33  !         65  A         97  a</span><br><span class=\"line\">  2  STX (start of text)             34  &quot;         66  B         98  b</span><br><span class=\"line\">  3  ETX (end of text)               35  #         67  C         99  c</span><br><span class=\"line\">  4  EOT (end of transmission)       36  $         68  D        100  d</span><br><span class=\"line\">  5  ENQ (enquiry)                   37  %         69  E        101  e</span><br><span class=\"line\">  6  ACK (acknowledge)               38  &amp;         70  F        102  f</span><br><span class=\"line\">  7  BEL (bell)                      39  &#39;         71  G        103  g</span><br><span class=\"line\">  8  BS  (backspace)                 40  (         72  H        104  h</span><br><span class=\"line\">  9  TAB (horizontal tab)            41  )         73  I        105  i</span><br><span class=\"line\"> 10  LF  (NL line feed, new line)    42  *         74  J        106  j</span><br><span class=\"line\"> 11  VT  (vertical tab)              43  +         75  K        107  k</span><br><span class=\"line\"> 12  FF  (NP form feed, new page)    44  ,         76  L        108  l</span><br><span class=\"line\"> 13  CR  (carriage return)           45  -         77  M        109  m</span><br><span class=\"line\"> 14  SO  (shift out)                 46  .         78  N        110  n</span><br><span class=\"line\"> 15  SI  (shift in)                  47  &#x2F;         79  O        111  o</span><br><span class=\"line\"> 16  DLE (data link escape)          48  0         80  P        112  p</span><br><span class=\"line\"> 17  DC1 (device control 1)          49  1         81  Q        113  q</span><br><span class=\"line\"> 18  DC2 (device control 2)          50  2         82  R        114  r</span><br><span class=\"line\"> 19  DC3 (device control 3)          51  3         83  S        115  s</span><br><span class=\"line\"> 20  DC4 (device control 4)          52  4         84  T        116  t</span><br><span class=\"line\"> 21  NAK (negative acknowledge)      53  5         85  U        117  u</span><br><span class=\"line\"> 22  SYN (synchronous idle)          54  6         86  V        118  v</span><br><span class=\"line\"> 23  ETB (end of trans. block)       55  7         87  W        119  w</span><br><span class=\"line\"> 24  CAN (cancel)                    56  8         88  X        120  x</span><br><span class=\"line\"> 25  EM  (end of medium)             57  9         89  Y        121  y</span><br><span class=\"line\"> 26  SUB (substitute)                58  :         90  Z        122  z</span><br><span class=\"line\"> 27  ESC (escape)                    59  ;         91  [        123  &#123;</span><br><span class=\"line\"> 28  FS  (file separator)            60  &lt;         92  \\        124  |</span><br><span class=\"line\"> 29  GS  (group separator)           61  &#x3D;         93  ]        125  &#125;</span><br><span class=\"line\"> 30  RS  (record separator)          62  &gt;         94  ^        126  ~</span><br><span class=\"line\"> 31  US  (unit separator)            63  ?         95  _        127  DEL</span><br></pre></td></tr></table></figure>\n\n<p>大小字母之间相差32。</p>\n","site":{"data":{}},"excerpt":"<p>这个表还是很有用的，这里摘出来放在这里以务不时之需。</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dec  Char                           Dec  Char     Dec  Char     Dec  Char</span><br><span class=\"line\">---------                           ---------     ---------     ----------</span><br><span class=\"line\">  0  NUL (null)                      32  SPACE     64  @         96  &#96;</span><br><span class=\"line\">  1  SOH (start of heading)          33  !         65  A         97  a</span><br><span class=\"line\">  2  STX (start of text)             34  &quot;         66  B         98  b</span><br><span class=\"line\">  3  ETX (end of text)               35  #         67  C         99  c</span><br><span class=\"line\">  4  EOT (end of transmission)       36  $         68  D        100  d</span><br><span class=\"line\">  5  ENQ (enquiry)                   37  %         69  E        101  e</span><br><span class=\"line\">  6  ACK (acknowledge)               38  &amp;         70  F        102  f</span><br><span class=\"line\">  7  BEL (bell)                      39  &#39;         71  G        103  g</span><br><span class=\"line\">  8  BS  (backspace)                 40  (         72  H        104  h</span><br><span class=\"line\">  9  TAB (horizontal tab)            41  )         73  I        105  i</span><br><span class=\"line\"> 10  LF  (NL line feed, new line)    42  *         74  J        106  j</span><br><span class=\"line\"> 11  VT  (vertical tab)              43  +         75  K        107  k</span><br><span class=\"line\"> 12  FF  (NP form feed, new page)    44  ,         76  L        108  l</span><br><span class=\"line\"> 13  CR  (carriage return)           45  -         77  M        109  m</span><br><span class=\"line\"> 14  SO  (shift out)                 46  .         78  N        110  n</span><br><span class=\"line\"> 15  SI  (shift in)                  47  &#x2F;         79  O        111  o</span><br><span class=\"line\"> 16  DLE (data link escape)          48  0         80  P        112  p</span><br><span class=\"line\"> 17  DC1 (device control 1)          49  1         81  Q        113  q</span><br><span class=\"line\"> 18  DC2 (device control 2)          50  2         82  R        114  r</span><br><span class=\"line\"> 19  DC3 (device control 3)          51  3         83  S        115  s</span><br><span class=\"line\"> 20  DC4 (device control 4)          52  4         84  T        116  t</span><br><span class=\"line\"> 21  NAK (negative acknowledge)      53  5         85  U        117  u</span><br><span class=\"line\"> 22  SYN (synchronous idle)          54  6         86  V        118  v</span><br><span class=\"line\"> 23  ETB (end of trans. block)       55  7         87  W        119  w</span><br><span class=\"line\"> 24  CAN (cancel)                    56  8         88  X        120  x</span><br><span class=\"line\"> 25  EM  (end of medium)             57  9         89  Y        121  y</span><br><span class=\"line\"> 26  SUB (substitute)                58  :         90  Z        122  z</span><br><span class=\"line\"> 27  ESC (escape)                    59  ;         91  [        123  &#123;</span><br><span class=\"line\"> 28  FS  (file separator)            60  &lt;         92  \\        124  |</span><br><span class=\"line\"> 29  GS  (group separator)           61  &#x3D;         93  ]        125  &#125;</span><br><span class=\"line\"> 30  RS  (record separator)          62  &gt;         94  ^        126  ~</span><br><span class=\"line\"> 31  US  (unit separator)            63  ?         95  _        127  DEL</span><br></pre></td></tr></table></figure>\n\n<p>大小字母之间相差32。</p>"},{"title":"Django数据库操作","date":"2019-09-29T11:58:48.000Z","_content":"\n因为使用`Pyecharts `的时候遇到了，所以在这里写一下，权当笔记了。\n\n\n\n<!--more-->\n\n\n\n## 从现有数据库自动生成 Model\n\n命令是\n\n```python\npython manage.py inspectdb #运行后会把表生成的model结构打印出来\npython manage.py inspectdb > app/models.py #这一步是将上一步生成的写入文件\n```\n\n数据库基础设置在 settings.py 文件中，default 名必须存在，否则会报错。\n\ndjango 数据库配置文件：\n\n```python\nDATABASES = {\n    # 'default': {\n    #     'ENGINE': 'django.db.backends.sqlite3',\n    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    # },\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME':'xxxxxxxx',\n        'HOST':'xx.xx.xx.xx',\n        'USER':'root',\n        'PASSWORD':'xxxxxxxxxxxx',\n        'PORT':'3306',\n\n    },\n\n}\n```\n\n","source":"_posts/technique/Django-数据库操作.md","raw":"---\ntitle: Django数据库操作\ndate: 2019-09-29 19:58:48\ntags: 技术\n---\n\n因为使用`Pyecharts `的时候遇到了，所以在这里写一下，权当笔记了。\n\n\n\n<!--more-->\n\n\n\n## 从现有数据库自动生成 Model\n\n命令是\n\n```python\npython manage.py inspectdb #运行后会把表生成的model结构打印出来\npython manage.py inspectdb > app/models.py #这一步是将上一步生成的写入文件\n```\n\n数据库基础设置在 settings.py 文件中，default 名必须存在，否则会报错。\n\ndjango 数据库配置文件：\n\n```python\nDATABASES = {\n    # 'default': {\n    #     'ENGINE': 'django.db.backends.sqlite3',\n    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    # },\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME':'xxxxxxxx',\n        'HOST':'xx.xx.xx.xx',\n        'USER':'root',\n        'PASSWORD':'xxxxxxxxxxxx',\n        'PORT':'3306',\n\n    },\n\n}\n```\n\n","slug":"technique/Django-数据库操作","published":1,"updated":"2020-03-20T07:42:35.315Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67t003i98ki7vhg98d8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>因为使用<code>Pyecharts</code>的时候遇到了，所以在这里写一下，权当笔记了。</p>\n<a id=\"more\"></a>\n\n\n\n<h2 id=\"从现有数据库自动生成-Model\"><a href=\"#从现有数据库自动生成-Model\" class=\"headerlink\" title=\"从现有数据库自动生成 Model\"></a>从现有数据库自动生成 Model</h2><p>命令是</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py inspectdb <span class=\"comment\">#运行后会把表生成的model结构打印出来</span></span><br><span class=\"line\">python manage.py inspectdb &gt; app/models.py <span class=\"comment\">#这一步是将上一步生成的写入文件</span></span><br></pre></td></tr></table></figure>\n\n<p>数据库基础设置在 settings.py 文件中，default 名必须存在，否则会报错。</p>\n<p>django 数据库配置文件：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 'default': &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#     'ENGINE': 'django.db.backends.sqlite3',</span></span><br><span class=\"line\">    <span class=\"comment\">#     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),</span></span><br><span class=\"line\">    <span class=\"comment\"># &#125;,</span></span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,</span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>:<span class=\"string\">'xxxxxxxx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>:<span class=\"string\">'xx.xx.xx.xx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'USER'</span>:<span class=\"string\">'root'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>:<span class=\"string\">'xxxxxxxxxxxx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>:<span class=\"string\">'3306'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>因为使用<code>Pyecharts</code>的时候遇到了，所以在这里写一下，权当笔记了。</p>","more":"<h2 id=\"从现有数据库自动生成-Model\"><a href=\"#从现有数据库自动生成-Model\" class=\"headerlink\" title=\"从现有数据库自动生成 Model\"></a>从现有数据库自动生成 Model</h2><p>命令是</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py inspectdb <span class=\"comment\">#运行后会把表生成的model结构打印出来</span></span><br><span class=\"line\">python manage.py inspectdb &gt; app/models.py <span class=\"comment\">#这一步是将上一步生成的写入文件</span></span><br></pre></td></tr></table></figure>\n\n<p>数据库基础设置在 settings.py 文件中，default 名必须存在，否则会报错。</p>\n<p>django 数据库配置文件：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 'default': &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#     'ENGINE': 'django.db.backends.sqlite3',</span></span><br><span class=\"line\">    <span class=\"comment\">#     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),</span></span><br><span class=\"line\">    <span class=\"comment\"># &#125;,</span></span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,</span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>:<span class=\"string\">'xxxxxxxx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>:<span class=\"string\">'xx.xx.xx.xx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'USER'</span>:<span class=\"string\">'root'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>:<span class=\"string\">'xxxxxxxxxxxx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>:<span class=\"string\">'3306'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java面试题整理(一)","date":"2019-09-22T11:35:36.000Z","_content":"\n最近面了几家公司，每次面完都把相关的题整理了一下，现在写出来\n\n\n\n<!--more-->\n\n\n\n1、查找一个字符串(英文)中的指定子串出现的位置，忽略大小写。不能使用字符串函数。\n\n我在写这个解的时候用到了 `split` 这个字符串函数，是不满足要求的。另外一个很重要的点是忽略大小写的问题，我想到的是把原串打散后用 `ASCII` 码的方式进行转换。\n\n下面给出示例：\n\n`TO BE FILLED`\n\n2、什么是多态?\n\n​\t多态是同一个行为具有多个不同表现形式或形态的能力。\n\n​\t多态就是同一个接口，使用不同的实例而执行不同操作。\n\n1. ​\t**优点：**\n\n- ​\t消除类型之间的耦合关系\n- ​\t可替换性\n- ​\t可扩充性\n- ​\t接口性\n- ​\t灵活性\n- ​\t简化性\n\n1. ​\t**存在的条件**\n\n- ​\t继承\n- ​\t重写\n- ​\t父类引用指向子类对象\t\n\n3、接口和抽象类的区别\n\n​\t[简书链接](https://www.jianshu.com/p/038f0b356e9a)\n\n4、垃圾回收\n\n​\t[一个阿里大神](https://www.cnblogs.com/xrq730/p/4836700.html)\n\n5、计数器的优缺点\n\n​\t**优点：**\n\n- ​\t可即刻回收垃圾\n- ​\t暂停时间短\n- ​\t不用沿指定查找\n\n​\t**缺点**\n\n- ​\t计数器值的更新太频繁\n- ​\t计数器需要占用很多空间\n- ​\t无法回收循环引用的对象\n\n[GC算法笔记（二）引用计数法](https://liaodanqi.me/2019/07/28/gc-reference-counting/)\n\n6、`TCP/UDP`的区别\n\n- TCP 是面向连接的协议，UDP 是无连接协议\n- TCP 可靠，UDP 不可靠\n- TCP 有序，UDP 无序\n- TCP 无界，UDP 有界\n- TCP 有流量控制（拥塞控制 ），UDP 没有\n- TCP 传输慢，UDP 传输快\n- TCP 是重量级的，UDP 是轻量级的\n- TCP 的头部比 UDP 大\n\n[参考链接](https://jaminzhang.github.io/network/The-Difference-Between-TCP-And-UDP-Protocol/)\n\n7、CPU占用怎么查看 `TOP`命令\n\n​\ttop命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。top是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程序为止.比较准确的说,top命令提供了实时的对系统处理器的状态监视.它将显示系统中CPU最“敏感”的任务列表.该命令可以按CPU使用.内存使用和执行时间对任务进行排序；而且该命令的很多特性都可以通过交互式命令或者在个人定制文件中进行设定.\n\n8、`List` 去重\n\n​\t第一种方法，直接利用了 Java 8 的新特性：\n\n```Java\nList<String> unique = list.stream().distinct().collect(Collectors.toList());\n```\n\n9、`Redis` 中的`set`\n\n​\tRedis 的 set 是 String类型的无序集合。集合成员是唯一的，这意味着集合中不能出现重复的数据。\n\n10、SQL 中建立索引时，底层发生了什么？\n\n[知乎相关回答链接](https://zhuanlan.zhihu.com/p/23624390)\n\n​\t妈的，这个有点难度。看懂了再更新。。。\n\n","source":"_posts/technique/Java面试题整理-一.md","raw":"---\ntitle: Java面试题整理(一)\ndate: 2019-09-22 19:35:36\ntags: 技术\n---\n\n最近面了几家公司，每次面完都把相关的题整理了一下，现在写出来\n\n\n\n<!--more-->\n\n\n\n1、查找一个字符串(英文)中的指定子串出现的位置，忽略大小写。不能使用字符串函数。\n\n我在写这个解的时候用到了 `split` 这个字符串函数，是不满足要求的。另外一个很重要的点是忽略大小写的问题，我想到的是把原串打散后用 `ASCII` 码的方式进行转换。\n\n下面给出示例：\n\n`TO BE FILLED`\n\n2、什么是多态?\n\n​\t多态是同一个行为具有多个不同表现形式或形态的能力。\n\n​\t多态就是同一个接口，使用不同的实例而执行不同操作。\n\n1. ​\t**优点：**\n\n- ​\t消除类型之间的耦合关系\n- ​\t可替换性\n- ​\t可扩充性\n- ​\t接口性\n- ​\t灵活性\n- ​\t简化性\n\n1. ​\t**存在的条件**\n\n- ​\t继承\n- ​\t重写\n- ​\t父类引用指向子类对象\t\n\n3、接口和抽象类的区别\n\n​\t[简书链接](https://www.jianshu.com/p/038f0b356e9a)\n\n4、垃圾回收\n\n​\t[一个阿里大神](https://www.cnblogs.com/xrq730/p/4836700.html)\n\n5、计数器的优缺点\n\n​\t**优点：**\n\n- ​\t可即刻回收垃圾\n- ​\t暂停时间短\n- ​\t不用沿指定查找\n\n​\t**缺点**\n\n- ​\t计数器值的更新太频繁\n- ​\t计数器需要占用很多空间\n- ​\t无法回收循环引用的对象\n\n[GC算法笔记（二）引用计数法](https://liaodanqi.me/2019/07/28/gc-reference-counting/)\n\n6、`TCP/UDP`的区别\n\n- TCP 是面向连接的协议，UDP 是无连接协议\n- TCP 可靠，UDP 不可靠\n- TCP 有序，UDP 无序\n- TCP 无界，UDP 有界\n- TCP 有流量控制（拥塞控制 ），UDP 没有\n- TCP 传输慢，UDP 传输快\n- TCP 是重量级的，UDP 是轻量级的\n- TCP 的头部比 UDP 大\n\n[参考链接](https://jaminzhang.github.io/network/The-Difference-Between-TCP-And-UDP-Protocol/)\n\n7、CPU占用怎么查看 `TOP`命令\n\n​\ttop命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。top是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程序为止.比较准确的说,top命令提供了实时的对系统处理器的状态监视.它将显示系统中CPU最“敏感”的任务列表.该命令可以按CPU使用.内存使用和执行时间对任务进行排序；而且该命令的很多特性都可以通过交互式命令或者在个人定制文件中进行设定.\n\n8、`List` 去重\n\n​\t第一种方法，直接利用了 Java 8 的新特性：\n\n```Java\nList<String> unique = list.stream().distinct().collect(Collectors.toList());\n```\n\n9、`Redis` 中的`set`\n\n​\tRedis 的 set 是 String类型的无序集合。集合成员是唯一的，这意味着集合中不能出现重复的数据。\n\n10、SQL 中建立索引时，底层发生了什么？\n\n[知乎相关回答链接](https://zhuanlan.zhihu.com/p/23624390)\n\n​\t妈的，这个有点难度。看懂了再更新。。。\n\n","slug":"technique/Java面试题整理-一","published":1,"updated":"2020-03-20T07:42:35.318Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67u003k98ki1d5vhr3o","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近面了几家公司，每次面完都把相关的题整理了一下，现在写出来</p>\n<a id=\"more\"></a>\n\n\n\n<p>1、查找一个字符串(英文)中的指定子串出现的位置，忽略大小写。不能使用字符串函数。</p>\n<p>我在写这个解的时候用到了 <code>split</code> 这个字符串函数，是不满足要求的。另外一个很重要的点是忽略大小写的问题，我想到的是把原串打散后用 <code>ASCII</code> 码的方式进行转换。</p>\n<p>下面给出示例：</p>\n<p><code>TO BE FILLED</code></p>\n<p>2、什么是多态?</p>\n<p>​    多态是同一个行为具有多个不同表现形式或形态的能力。</p>\n<p>​    多态就是同一个接口，使用不同的实例而执行不同操作。</p>\n<ol>\n<li>​    <strong>优点：</strong></li>\n</ol>\n<ul>\n<li>​    消除类型之间的耦合关系</li>\n<li>​    可替换性</li>\n<li>​    可扩充性</li>\n<li>​    接口性</li>\n<li>​    灵活性</li>\n<li>​    简化性</li>\n</ul>\n<ol>\n<li>​    <strong>存在的条件</strong></li>\n</ol>\n<ul>\n<li>​    继承</li>\n<li>​    重写</li>\n<li>​    父类引用指向子类对象    </li>\n</ul>\n<p>3、接口和抽象类的区别</p>\n<p>​    <a href=\"https://www.jianshu.com/p/038f0b356e9a\" target=\"_blank\" rel=\"noopener\">简书链接</a></p>\n<p>4、垃圾回收</p>\n<p>​    <a href=\"https://www.cnblogs.com/xrq730/p/4836700.html\" target=\"_blank\" rel=\"noopener\">一个阿里大神</a></p>\n<p>5、计数器的优缺点</p>\n<p>​    <strong>优点：</strong></p>\n<ul>\n<li>​    可即刻回收垃圾</li>\n<li>​    暂停时间短</li>\n<li>​    不用沿指定查找</li>\n</ul>\n<p>​    <strong>缺点</strong></p>\n<ul>\n<li>​    计数器值的更新太频繁</li>\n<li>​    计数器需要占用很多空间</li>\n<li>​    无法回收循环引用的对象</li>\n</ul>\n<p><a href=\"https://liaodanqi.me/2019/07/28/gc-reference-counting/\" target=\"_blank\" rel=\"noopener\">GC算法笔记（二）引用计数法</a></p>\n<p>6、<code>TCP/UDP</code>的区别</p>\n<ul>\n<li>TCP 是面向连接的协议，UDP 是无连接协议</li>\n<li>TCP 可靠，UDP 不可靠</li>\n<li>TCP 有序，UDP 无序</li>\n<li>TCP 无界，UDP 有界</li>\n<li>TCP 有流量控制（拥塞控制 ），UDP 没有</li>\n<li>TCP 传输慢，UDP 传输快</li>\n<li>TCP 是重量级的，UDP 是轻量级的</li>\n<li>TCP 的头部比 UDP 大</li>\n</ul>\n<p><a href=\"https://jaminzhang.github.io/network/The-Difference-Between-TCP-And-UDP-Protocol/\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<p>7、CPU占用怎么查看 <code>TOP</code>命令</p>\n<p>​    top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。top是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程序为止.比较准确的说,top命令提供了实时的对系统处理器的状态监视.它将显示系统中CPU最“敏感”的任务列表.该命令可以按CPU使用.内存使用和执行时间对任务进行排序；而且该命令的很多特性都可以通过交互式命令或者在个人定制文件中进行设定.</p>\n<p>8、<code>List</code> 去重</p>\n<p>​    第一种方法，直接利用了 Java 8 的新特性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; unique = list.stream().distinct().collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<p>9、<code>Redis</code> 中的<code>set</code></p>\n<p>​    Redis 的 set 是 String类型的无序集合。集合成员是唯一的，这意味着集合中不能出现重复的数据。</p>\n<p>10、SQL 中建立索引时，底层发生了什么？</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/23624390\" target=\"_blank\" rel=\"noopener\">知乎相关回答链接</a></p>\n<p>​    妈的，这个有点难度。看懂了再更新。。。</p>\n","site":{"data":{}},"excerpt":"<p>最近面了几家公司，每次面完都把相关的题整理了一下，现在写出来</p>","more":"<p>1、查找一个字符串(英文)中的指定子串出现的位置，忽略大小写。不能使用字符串函数。</p>\n<p>我在写这个解的时候用到了 <code>split</code> 这个字符串函数，是不满足要求的。另外一个很重要的点是忽略大小写的问题，我想到的是把原串打散后用 <code>ASCII</code> 码的方式进行转换。</p>\n<p>下面给出示例：</p>\n<p><code>TO BE FILLED</code></p>\n<p>2、什么是多态?</p>\n<p>​    多态是同一个行为具有多个不同表现形式或形态的能力。</p>\n<p>​    多态就是同一个接口，使用不同的实例而执行不同操作。</p>\n<ol>\n<li>​    <strong>优点：</strong></li>\n</ol>\n<ul>\n<li>​    消除类型之间的耦合关系</li>\n<li>​    可替换性</li>\n<li>​    可扩充性</li>\n<li>​    接口性</li>\n<li>​    灵活性</li>\n<li>​    简化性</li>\n</ul>\n<ol>\n<li>​    <strong>存在的条件</strong></li>\n</ol>\n<ul>\n<li>​    继承</li>\n<li>​    重写</li>\n<li>​    父类引用指向子类对象    </li>\n</ul>\n<p>3、接口和抽象类的区别</p>\n<p>​    <a href=\"https://www.jianshu.com/p/038f0b356e9a\" target=\"_blank\" rel=\"noopener\">简书链接</a></p>\n<p>4、垃圾回收</p>\n<p>​    <a href=\"https://www.cnblogs.com/xrq730/p/4836700.html\" target=\"_blank\" rel=\"noopener\">一个阿里大神</a></p>\n<p>5、计数器的优缺点</p>\n<p>​    <strong>优点：</strong></p>\n<ul>\n<li>​    可即刻回收垃圾</li>\n<li>​    暂停时间短</li>\n<li>​    不用沿指定查找</li>\n</ul>\n<p>​    <strong>缺点</strong></p>\n<ul>\n<li>​    计数器值的更新太频繁</li>\n<li>​    计数器需要占用很多空间</li>\n<li>​    无法回收循环引用的对象</li>\n</ul>\n<p><a href=\"https://liaodanqi.me/2019/07/28/gc-reference-counting/\" target=\"_blank\" rel=\"noopener\">GC算法笔记（二）引用计数法</a></p>\n<p>6、<code>TCP/UDP</code>的区别</p>\n<ul>\n<li>TCP 是面向连接的协议，UDP 是无连接协议</li>\n<li>TCP 可靠，UDP 不可靠</li>\n<li>TCP 有序，UDP 无序</li>\n<li>TCP 无界，UDP 有界</li>\n<li>TCP 有流量控制（拥塞控制 ），UDP 没有</li>\n<li>TCP 传输慢，UDP 传输快</li>\n<li>TCP 是重量级的，UDP 是轻量级的</li>\n<li>TCP 的头部比 UDP 大</li>\n</ul>\n<p><a href=\"https://jaminzhang.github.io/network/The-Difference-Between-TCP-And-UDP-Protocol/\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<p>7、CPU占用怎么查看 <code>TOP</code>命令</p>\n<p>​    top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。top是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程序为止.比较准确的说,top命令提供了实时的对系统处理器的状态监视.它将显示系统中CPU最“敏感”的任务列表.该命令可以按CPU使用.内存使用和执行时间对任务进行排序；而且该命令的很多特性都可以通过交互式命令或者在个人定制文件中进行设定.</p>\n<p>8、<code>List</code> 去重</p>\n<p>​    第一种方法，直接利用了 Java 8 的新特性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; unique = list.stream().distinct().collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<p>9、<code>Redis</code> 中的<code>set</code></p>\n<p>​    Redis 的 set 是 String类型的无序集合。集合成员是唯一的，这意味着集合中不能出现重复的数据。</p>\n<p>10、SQL 中建立索引时，底层发生了什么？</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/23624390\" target=\"_blank\" rel=\"noopener\">知乎相关回答链接</a></p>\n<p>​    妈的，这个有点难度。看懂了再更新。。。</p>"},{"title":"MYSQL技巧","date":"2019-11-13T06:15:38.000Z","keywords":null,"description":null,"_content":"\n这里记录`MySQL`使用过程，经常遇到的问题的解决方案（不涉及高级较高级的操作）。\n\n\n\n<!--more-->\n\n\n\n1. 如何将数据库从一台服务器移动到另一台服务器？\n\n   ```mysql\n   mysqldump -uuser -ppassword myDatabase | mysql -hremoteserver -uremoteuser -premoteserverpassword \n   ```\n\n    下面的这个更详细。\n\n   ```\n   mysqldump -h 'xxx.x.x.x' -uTHATUSER -pTHATPWD --opt --compress THATDB --skip-lock-tables | mysql -h localhost -uMYUSER -pMYPWD MYDB\n   ```\n\n   这里使用了管道操作。这是一种在线方式，前面的`mysqldump` 用来把指定的数据库导出，管道操作将导出的数据作为输入导入到后面的数据库里。","source":"_posts/technique/MYSQL技巧.md","raw":"---\ntitle: MYSQL技巧\ndate: 2019-11-13 14:15:38\ntags: 技术\nkeywords: \ndescription:\n---\n\n这里记录`MySQL`使用过程，经常遇到的问题的解决方案（不涉及高级较高级的操作）。\n\n\n\n<!--more-->\n\n\n\n1. 如何将数据库从一台服务器移动到另一台服务器？\n\n   ```mysql\n   mysqldump -uuser -ppassword myDatabase | mysql -hremoteserver -uremoteuser -premoteserverpassword \n   ```\n\n    下面的这个更详细。\n\n   ```\n   mysqldump -h 'xxx.x.x.x' -uTHATUSER -pTHATPWD --opt --compress THATDB --skip-lock-tables | mysql -h localhost -uMYUSER -pMYPWD MYDB\n   ```\n\n   这里使用了管道操作。这是一种在线方式，前面的`mysqldump` 用来把指定的数据库导出，管道操作将导出的数据作为输入导入到后面的数据库里。","slug":"technique/MYSQL技巧","published":1,"updated":"2020-03-20T07:42:35.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67v003m98kigi2e6oez","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>这里记录<code>MySQL</code>使用过程，经常遇到的问题的解决方案（不涉及高级较高级的操作）。</p>\n<a id=\"more\"></a>\n\n\n\n<ol>\n<li><p>如何将数据库从一台服务器移动到另一台服务器？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -uuser -ppassword myDatabase | mysql -hremoteserver -uremoteuser -premoteserverpassword</span><br></pre></td></tr></table></figure>\n\n<p> 下面的这个更详细。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -h &#39;xxx.x.x.x&#39; -uTHATUSER -pTHATPWD --opt --compress THATDB --skip-lock-tables | mysql -h localhost -uMYUSER -pMYPWD MYDB</span><br></pre></td></tr></table></figure>\n\n<p>这里使用了管道操作。这是一种在线方式，前面的<code>mysqldump</code> 用来把指定的数据库导出，管道操作将导出的数据作为输入导入到后面的数据库里。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>这里记录<code>MySQL</code>使用过程，经常遇到的问题的解决方案（不涉及高级较高级的操作）。</p>","more":"<ol>\n<li><p>如何将数据库从一台服务器移动到另一台服务器？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -uuser -ppassword myDatabase | mysql -hremoteserver -uremoteuser -premoteserverpassword</span><br></pre></td></tr></table></figure>\n\n<p> 下面的这个更详细。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -h &#39;xxx.x.x.x&#39; -uTHATUSER -pTHATPWD --opt --compress THATDB --skip-lock-tables | mysql -h localhost -uMYUSER -pMYPWD MYDB</span><br></pre></td></tr></table></figure>\n\n<p>这里使用了管道操作。这是一种在线方式，前面的<code>mysqldump</code> 用来把指定的数据库导出，管道操作将导出的数据作为输入导入到后面的数据库里。</p>\n</li>\n</ol>"},{"title":"TODO","date":"2019-11-13T15:30:43.000Z","keywords":null,"description":null,"_content":"\n网上得来的知识点，一点点突破\n\n\n\n<!--more-->\n\n\n\n- [ ] Hashmap 源码级掌握，扩容，红黑树，最小树化容量，hash 冲突解决，有些面试官会提出发自灵魂的审问，比如为什么是红黑树，别的树不可以吗；为什么 8 的时候树化，4 不可以吗，等等 \n- [ ] concureentHashMap，段锁，如何分段，和 hashmap 在 hash 上的区别，性能，等等\n- [ ] HashTable，同步锁，这块可能会问你 synchronized 关键字 1.6 之后提升了什么，怎么提升的这些\n  ArrayList 优势，扩容，什么时候用\n- [ ] LinkedList 优势，什么时候用，和 arraylist 的区别 等等\n- [ ] 基本类型和包装类型的区别，涉及自动装箱和拆箱，怎么做的，原理\n- [ ] String，StringBuffer，StringBuilder 哪个是安全的\n- [ ] 字符串编码的区别\n- [ ] 什么是泛型，怎么用泛型\n- [ ] static 能不能修饰 threadLocal，为什么\n- [ ] Comparable 和 Comparator 接口是干什么的，其区别\n- [ ] 多态的原理是什么\n- [ ] 接口和抽象类，面试官问我是怎么理解的，我说接口对应功能，抽象类对应属性，然后面试官给我说了他的看法，说抽象类更偏向于一种模板~ 然后又交流了一下各自的想法\n- [ ] 如何通过反射和设置对象私有字段的值\n- [ ] 快速失败(fail-fast)和安全失败(fail-safe)的区别是什么\n- [ ] synchronized 的实现原理以及锁优化？\n- [ ] volatile 的实现原理？\n- [ ] Java 的信号灯？\n- [ ] synchronized 在静态方法和普通方法的区别？\n- [ ] 怎么实现所有线程在等待某个事件的发生才会去执行？\n- [ ] CAS ？ CAS 有什么缺陷，如何解决？\n- [ ] synchronized 和 lock 有什么区别？\n- [ ] Hashtable 是怎么加锁的 ？\n- [ ] List，Map，Set 接口在取元素师，各有什么特点\n- [ ] 如何线程安全的实现一个计数器\n- [ ] 生产者消费者模式，要求手写过代码，还是要知道的\n- [ ] 单例模式，饿汉式，懒汉式，线程安全的做法，两次判断 instance 是否为空，每次判断的作用是什么\n- [ ] 线程池，这个还是很重要的，在生产中用的挺多，四个线程池类型，其参数，参数的理解很重要，corepoolSize 怎么设置，maxpoolsize 怎么设置，keep-alive 各种的，和美团面试官探讨过阻塞队列在生产中的设置，他说他一般设置为 0，防止用户阻塞\n- [ ] cyclicbarrier 和 countdownlatch 的区别，个人理解 赛马和点火箭\n- [ ] 线程回调，这块 被问过让我设计一个 RPC，怎么实现，其实用到了回调这块的东西\n- [ ] sleep 和 yeild 方法有什么区别\n- [ ] volatile 关键字，可见性。\n- [ ] 乐观锁和悲观锁的使用场景\n- [ ] 悲观锁的常见实现方式：lock synchronized retreentlock\n- [ ] 乐观锁：CAS MVCC\n- [ ] 读写锁的实现方式，16 位 int 的前八位和后八位分别作为读锁和写锁的标志位\n- [ ] 死锁的条件，怎么解除死锁，怎么观测死锁。\n- [ ] 希望大家能够好好看一下反射的原理，怎么确定类，怎么调方法\n- [ ] RPC 框架，同步异步，响应时间，这些都被问到过，还让设计过同步，异步，阻塞，非阻塞 在深信服的面试中遇到过，最好再找一些应用场景加以理解\n\n\n\n## JAVA 基础\n- [ ] HashMap 的源码，实现原理； JDK8 做了什么优化\n- [ ] HashMap 扩容机制，为什么都是 2 的 N 次幂\n- [ ] ArrayList 和 Vector 的区别，扩容机制等\n- [ ] CopyOnWriteArrayList 原理\n- [ ] HashSet 和 TreeSet 原理\n- [ ] ArrayBlockingQueue 和 LinkedBlockingQueue 区别\n- [ ] 集合迭代器的原理\n- [ ] 传值和传引用的区别\n- [ ] 动态代理\n- [ ] JDK8 Concurrent HashMap 的原理\n\n## 多线程\n- [ ] 创建多线程的方式，以及线程的状态转换\n- [ ] 线程的中断机制\n- [ ] ThreadPoolExecutor 初始化参数； Executors 静态方法\n- [ ] synchronized 的使用方式及原理\n- [ ] 偏向锁、轻量级锁、自旋锁等优化\n- [ ] ReentrantLock 的特点及 AQS 原理\n- [ ] Semaphore、CountDownLatch、CyclicBarrier 等使用\n- [ ] ThreadLocal 的原理、与 Thread 类的关系、以及内存泄漏问题\n- [ ] volatile 的原理及内存屏障相关\n- [ ] Lock 接口有哪些实现类，使用场景是什么\n- [ ] 悲观锁，乐观锁，优缺点，CAS 有什么缺陷，该如何解决\n\n","source":"_posts/technique/TODO.md","raw":"---\ntitle: TODO\ndate: 2019-11-13 23:30:43\ntags: 技术\nkeywords:\ndescription:\n---\n\n网上得来的知识点，一点点突破\n\n\n\n<!--more-->\n\n\n\n- [ ] Hashmap 源码级掌握，扩容，红黑树，最小树化容量，hash 冲突解决，有些面试官会提出发自灵魂的审问，比如为什么是红黑树，别的树不可以吗；为什么 8 的时候树化，4 不可以吗，等等 \n- [ ] concureentHashMap，段锁，如何分段，和 hashmap 在 hash 上的区别，性能，等等\n- [ ] HashTable，同步锁，这块可能会问你 synchronized 关键字 1.6 之后提升了什么，怎么提升的这些\n  ArrayList 优势，扩容，什么时候用\n- [ ] LinkedList 优势，什么时候用，和 arraylist 的区别 等等\n- [ ] 基本类型和包装类型的区别，涉及自动装箱和拆箱，怎么做的，原理\n- [ ] String，StringBuffer，StringBuilder 哪个是安全的\n- [ ] 字符串编码的区别\n- [ ] 什么是泛型，怎么用泛型\n- [ ] static 能不能修饰 threadLocal，为什么\n- [ ] Comparable 和 Comparator 接口是干什么的，其区别\n- [ ] 多态的原理是什么\n- [ ] 接口和抽象类，面试官问我是怎么理解的，我说接口对应功能，抽象类对应属性，然后面试官给我说了他的看法，说抽象类更偏向于一种模板~ 然后又交流了一下各自的想法\n- [ ] 如何通过反射和设置对象私有字段的值\n- [ ] 快速失败(fail-fast)和安全失败(fail-safe)的区别是什么\n- [ ] synchronized 的实现原理以及锁优化？\n- [ ] volatile 的实现原理？\n- [ ] Java 的信号灯？\n- [ ] synchronized 在静态方法和普通方法的区别？\n- [ ] 怎么实现所有线程在等待某个事件的发生才会去执行？\n- [ ] CAS ？ CAS 有什么缺陷，如何解决？\n- [ ] synchronized 和 lock 有什么区别？\n- [ ] Hashtable 是怎么加锁的 ？\n- [ ] List，Map，Set 接口在取元素师，各有什么特点\n- [ ] 如何线程安全的实现一个计数器\n- [ ] 生产者消费者模式，要求手写过代码，还是要知道的\n- [ ] 单例模式，饿汉式，懒汉式，线程安全的做法，两次判断 instance 是否为空，每次判断的作用是什么\n- [ ] 线程池，这个还是很重要的，在生产中用的挺多，四个线程池类型，其参数，参数的理解很重要，corepoolSize 怎么设置，maxpoolsize 怎么设置，keep-alive 各种的，和美团面试官探讨过阻塞队列在生产中的设置，他说他一般设置为 0，防止用户阻塞\n- [ ] cyclicbarrier 和 countdownlatch 的区别，个人理解 赛马和点火箭\n- [ ] 线程回调，这块 被问过让我设计一个 RPC，怎么实现，其实用到了回调这块的东西\n- [ ] sleep 和 yeild 方法有什么区别\n- [ ] volatile 关键字，可见性。\n- [ ] 乐观锁和悲观锁的使用场景\n- [ ] 悲观锁的常见实现方式：lock synchronized retreentlock\n- [ ] 乐观锁：CAS MVCC\n- [ ] 读写锁的实现方式，16 位 int 的前八位和后八位分别作为读锁和写锁的标志位\n- [ ] 死锁的条件，怎么解除死锁，怎么观测死锁。\n- [ ] 希望大家能够好好看一下反射的原理，怎么确定类，怎么调方法\n- [ ] RPC 框架，同步异步，响应时间，这些都被问到过，还让设计过同步，异步，阻塞，非阻塞 在深信服的面试中遇到过，最好再找一些应用场景加以理解\n\n\n\n## JAVA 基础\n- [ ] HashMap 的源码，实现原理； JDK8 做了什么优化\n- [ ] HashMap 扩容机制，为什么都是 2 的 N 次幂\n- [ ] ArrayList 和 Vector 的区别，扩容机制等\n- [ ] CopyOnWriteArrayList 原理\n- [ ] HashSet 和 TreeSet 原理\n- [ ] ArrayBlockingQueue 和 LinkedBlockingQueue 区别\n- [ ] 集合迭代器的原理\n- [ ] 传值和传引用的区别\n- [ ] 动态代理\n- [ ] JDK8 Concurrent HashMap 的原理\n\n## 多线程\n- [ ] 创建多线程的方式，以及线程的状态转换\n- [ ] 线程的中断机制\n- [ ] ThreadPoolExecutor 初始化参数； Executors 静态方法\n- [ ] synchronized 的使用方式及原理\n- [ ] 偏向锁、轻量级锁、自旋锁等优化\n- [ ] ReentrantLock 的特点及 AQS 原理\n- [ ] Semaphore、CountDownLatch、CyclicBarrier 等使用\n- [ ] ThreadLocal 的原理、与 Thread 类的关系、以及内存泄漏问题\n- [ ] volatile 的原理及内存屏障相关\n- [ ] Lock 接口有哪些实现类，使用场景是什么\n- [ ] 悲观锁，乐观锁，优缺点，CAS 有什么缺陷，该如何解决\n\n","slug":"technique/TODO","published":1,"updated":"2020-03-20T07:42:35.325Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw67y003o98ki7nykhmiq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>网上得来的知识点，一点点突破</p>\n<a id=\"more\"></a>\n\n\n\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> Hashmap 源码级掌握，扩容，红黑树，最小树化容量，hash 冲突解决，有些面试官会提出发自灵魂的审问，比如为什么是红黑树，别的树不可以吗；为什么 8 的时候树化，4 不可以吗，等等 </li>\n<li><input disabled=\"\" type=\"checkbox\"> concureentHashMap，段锁，如何分段，和 hashmap 在 hash 上的区别，性能，等等</li>\n<li><input disabled=\"\" type=\"checkbox\"> HashTable，同步锁，这块可能会问你 synchronized 关键字 1.6 之后提升了什么，怎么提升的这些<br>ArrayList 优势，扩容，什么时候用</li>\n<li><input disabled=\"\" type=\"checkbox\"> LinkedList 优势，什么时候用，和 arraylist 的区别 等等</li>\n<li><input disabled=\"\" type=\"checkbox\"> 基本类型和包装类型的区别，涉及自动装箱和拆箱，怎么做的，原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> String，StringBuffer，StringBuilder 哪个是安全的</li>\n<li><input disabled=\"\" type=\"checkbox\"> 字符串编码的区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 什么是泛型，怎么用泛型</li>\n<li><input disabled=\"\" type=\"checkbox\"> static 能不能修饰 threadLocal，为什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> Comparable 和 Comparator 接口是干什么的，其区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 多态的原理是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> 接口和抽象类，面试官问我是怎么理解的，我说接口对应功能，抽象类对应属性，然后面试官给我说了他的看法，说抽象类更偏向于一种模板~ 然后又交流了一下各自的想法</li>\n<li><input disabled=\"\" type=\"checkbox\"> 如何通过反射和设置对象私有字段的值</li>\n<li><input disabled=\"\" type=\"checkbox\"> 快速失败(fail-fast)和安全失败(fail-safe)的区别是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 的实现原理以及锁优化？</li>\n<li><input disabled=\"\" type=\"checkbox\"> volatile 的实现原理？</li>\n<li><input disabled=\"\" type=\"checkbox\"> Java 的信号灯？</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 在静态方法和普通方法的区别？</li>\n<li><input disabled=\"\" type=\"checkbox\"> 怎么实现所有线程在等待某个事件的发生才会去执行？</li>\n<li><input disabled=\"\" type=\"checkbox\"> CAS ？ CAS 有什么缺陷，如何解决？</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 和 lock 有什么区别？</li>\n<li><input disabled=\"\" type=\"checkbox\"> Hashtable 是怎么加锁的 ？</li>\n<li><input disabled=\"\" type=\"checkbox\"> List，Map，Set 接口在取元素师，各有什么特点</li>\n<li><input disabled=\"\" type=\"checkbox\"> 如何线程安全的实现一个计数器</li>\n<li><input disabled=\"\" type=\"checkbox\"> 生产者消费者模式，要求手写过代码，还是要知道的</li>\n<li><input disabled=\"\" type=\"checkbox\"> 单例模式，饿汉式，懒汉式，线程安全的做法，两次判断 instance 是否为空，每次判断的作用是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> 线程池，这个还是很重要的，在生产中用的挺多，四个线程池类型，其参数，参数的理解很重要，corepoolSize 怎么设置，maxpoolsize 怎么设置，keep-alive 各种的，和美团面试官探讨过阻塞队列在生产中的设置，他说他一般设置为 0，防止用户阻塞</li>\n<li><input disabled=\"\" type=\"checkbox\"> cyclicbarrier 和 countdownlatch 的区别，个人理解 赛马和点火箭</li>\n<li><input disabled=\"\" type=\"checkbox\"> 线程回调，这块 被问过让我设计一个 RPC，怎么实现，其实用到了回调这块的东西</li>\n<li><input disabled=\"\" type=\"checkbox\"> sleep 和 yeild 方法有什么区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> volatile 关键字，可见性。</li>\n<li><input disabled=\"\" type=\"checkbox\"> 乐观锁和悲观锁的使用场景</li>\n<li><input disabled=\"\" type=\"checkbox\"> 悲观锁的常见实现方式：lock synchronized retreentlock</li>\n<li><input disabled=\"\" type=\"checkbox\"> 乐观锁：CAS MVCC</li>\n<li><input disabled=\"\" type=\"checkbox\"> 读写锁的实现方式，16 位 int 的前八位和后八位分别作为读锁和写锁的标志位</li>\n<li><input disabled=\"\" type=\"checkbox\"> 死锁的条件，怎么解除死锁，怎么观测死锁。</li>\n<li><input disabled=\"\" type=\"checkbox\"> 希望大家能够好好看一下反射的原理，怎么确定类，怎么调方法</li>\n<li><input disabled=\"\" type=\"checkbox\"> RPC 框架，同步异步，响应时间，这些都被问到过，还让设计过同步，异步，阻塞，非阻塞 在深信服的面试中遇到过，最好再找一些应用场景加以理解</li>\n</ul>\n<h2 id=\"JAVA-基础\"><a href=\"#JAVA-基础\" class=\"headerlink\" title=\"JAVA 基础\"></a>JAVA 基础</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> HashMap 的源码，实现原理； JDK8 做了什么优化</li>\n<li><input disabled=\"\" type=\"checkbox\"> HashMap 扩容机制，为什么都是 2 的 N 次幂</li>\n<li><input disabled=\"\" type=\"checkbox\"> ArrayList 和 Vector 的区别，扩容机制等</li>\n<li><input disabled=\"\" type=\"checkbox\"> CopyOnWriteArrayList 原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> HashSet 和 TreeSet 原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> ArrayBlockingQueue 和 LinkedBlockingQueue 区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 集合迭代器的原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> 传值和传引用的区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 动态代理</li>\n<li><input disabled=\"\" type=\"checkbox\"> JDK8 Concurrent HashMap 的原理</li>\n</ul>\n<h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 创建多线程的方式，以及线程的状态转换</li>\n<li><input disabled=\"\" type=\"checkbox\"> 线程的中断机制</li>\n<li><input disabled=\"\" type=\"checkbox\"> ThreadPoolExecutor 初始化参数； Executors 静态方法</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 的使用方式及原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> 偏向锁、轻量级锁、自旋锁等优化</li>\n<li><input disabled=\"\" type=\"checkbox\"> ReentrantLock 的特点及 AQS 原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> Semaphore、CountDownLatch、CyclicBarrier 等使用</li>\n<li><input disabled=\"\" type=\"checkbox\"> ThreadLocal 的原理、与 Thread 类的关系、以及内存泄漏问题</li>\n<li><input disabled=\"\" type=\"checkbox\"> volatile 的原理及内存屏障相关</li>\n<li><input disabled=\"\" type=\"checkbox\"> Lock 接口有哪些实现类，使用场景是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> 悲观锁，乐观锁，优缺点，CAS 有什么缺陷，该如何解决</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>网上得来的知识点，一点点突破</p>","more":"<ul>\n<li><input disabled=\"\" type=\"checkbox\"> Hashmap 源码级掌握，扩容，红黑树，最小树化容量，hash 冲突解决，有些面试官会提出发自灵魂的审问，比如为什么是红黑树，别的树不可以吗；为什么 8 的时候树化，4 不可以吗，等等 </li>\n<li><input disabled=\"\" type=\"checkbox\"> concureentHashMap，段锁，如何分段，和 hashmap 在 hash 上的区别，性能，等等</li>\n<li><input disabled=\"\" type=\"checkbox\"> HashTable，同步锁，这块可能会问你 synchronized 关键字 1.6 之后提升了什么，怎么提升的这些<br>ArrayList 优势，扩容，什么时候用</li>\n<li><input disabled=\"\" type=\"checkbox\"> LinkedList 优势，什么时候用，和 arraylist 的区别 等等</li>\n<li><input disabled=\"\" type=\"checkbox\"> 基本类型和包装类型的区别，涉及自动装箱和拆箱，怎么做的，原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> String，StringBuffer，StringBuilder 哪个是安全的</li>\n<li><input disabled=\"\" type=\"checkbox\"> 字符串编码的区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 什么是泛型，怎么用泛型</li>\n<li><input disabled=\"\" type=\"checkbox\"> static 能不能修饰 threadLocal，为什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> Comparable 和 Comparator 接口是干什么的，其区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 多态的原理是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> 接口和抽象类，面试官问我是怎么理解的，我说接口对应功能，抽象类对应属性，然后面试官给我说了他的看法，说抽象类更偏向于一种模板~ 然后又交流了一下各自的想法</li>\n<li><input disabled=\"\" type=\"checkbox\"> 如何通过反射和设置对象私有字段的值</li>\n<li><input disabled=\"\" type=\"checkbox\"> 快速失败(fail-fast)和安全失败(fail-safe)的区别是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 的实现原理以及锁优化？</li>\n<li><input disabled=\"\" type=\"checkbox\"> volatile 的实现原理？</li>\n<li><input disabled=\"\" type=\"checkbox\"> Java 的信号灯？</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 在静态方法和普通方法的区别？</li>\n<li><input disabled=\"\" type=\"checkbox\"> 怎么实现所有线程在等待某个事件的发生才会去执行？</li>\n<li><input disabled=\"\" type=\"checkbox\"> CAS ？ CAS 有什么缺陷，如何解决？</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 和 lock 有什么区别？</li>\n<li><input disabled=\"\" type=\"checkbox\"> Hashtable 是怎么加锁的 ？</li>\n<li><input disabled=\"\" type=\"checkbox\"> List，Map，Set 接口在取元素师，各有什么特点</li>\n<li><input disabled=\"\" type=\"checkbox\"> 如何线程安全的实现一个计数器</li>\n<li><input disabled=\"\" type=\"checkbox\"> 生产者消费者模式，要求手写过代码，还是要知道的</li>\n<li><input disabled=\"\" type=\"checkbox\"> 单例模式，饿汉式，懒汉式，线程安全的做法，两次判断 instance 是否为空，每次判断的作用是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> 线程池，这个还是很重要的，在生产中用的挺多，四个线程池类型，其参数，参数的理解很重要，corepoolSize 怎么设置，maxpoolsize 怎么设置，keep-alive 各种的，和美团面试官探讨过阻塞队列在生产中的设置，他说他一般设置为 0，防止用户阻塞</li>\n<li><input disabled=\"\" type=\"checkbox\"> cyclicbarrier 和 countdownlatch 的区别，个人理解 赛马和点火箭</li>\n<li><input disabled=\"\" type=\"checkbox\"> 线程回调，这块 被问过让我设计一个 RPC，怎么实现，其实用到了回调这块的东西</li>\n<li><input disabled=\"\" type=\"checkbox\"> sleep 和 yeild 方法有什么区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> volatile 关键字，可见性。</li>\n<li><input disabled=\"\" type=\"checkbox\"> 乐观锁和悲观锁的使用场景</li>\n<li><input disabled=\"\" type=\"checkbox\"> 悲观锁的常见实现方式：lock synchronized retreentlock</li>\n<li><input disabled=\"\" type=\"checkbox\"> 乐观锁：CAS MVCC</li>\n<li><input disabled=\"\" type=\"checkbox\"> 读写锁的实现方式，16 位 int 的前八位和后八位分别作为读锁和写锁的标志位</li>\n<li><input disabled=\"\" type=\"checkbox\"> 死锁的条件，怎么解除死锁，怎么观测死锁。</li>\n<li><input disabled=\"\" type=\"checkbox\"> 希望大家能够好好看一下反射的原理，怎么确定类，怎么调方法</li>\n<li><input disabled=\"\" type=\"checkbox\"> RPC 框架，同步异步，响应时间，这些都被问到过，还让设计过同步，异步，阻塞，非阻塞 在深信服的面试中遇到过，最好再找一些应用场景加以理解</li>\n</ul>\n<h2 id=\"JAVA-基础\"><a href=\"#JAVA-基础\" class=\"headerlink\" title=\"JAVA 基础\"></a>JAVA 基础</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> HashMap 的源码，实现原理； JDK8 做了什么优化</li>\n<li><input disabled=\"\" type=\"checkbox\"> HashMap 扩容机制，为什么都是 2 的 N 次幂</li>\n<li><input disabled=\"\" type=\"checkbox\"> ArrayList 和 Vector 的区别，扩容机制等</li>\n<li><input disabled=\"\" type=\"checkbox\"> CopyOnWriteArrayList 原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> HashSet 和 TreeSet 原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> ArrayBlockingQueue 和 LinkedBlockingQueue 区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 集合迭代器的原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> 传值和传引用的区别</li>\n<li><input disabled=\"\" type=\"checkbox\"> 动态代理</li>\n<li><input disabled=\"\" type=\"checkbox\"> JDK8 Concurrent HashMap 的原理</li>\n</ul>\n<h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 创建多线程的方式，以及线程的状态转换</li>\n<li><input disabled=\"\" type=\"checkbox\"> 线程的中断机制</li>\n<li><input disabled=\"\" type=\"checkbox\"> ThreadPoolExecutor 初始化参数； Executors 静态方法</li>\n<li><input disabled=\"\" type=\"checkbox\"> synchronized 的使用方式及原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> 偏向锁、轻量级锁、自旋锁等优化</li>\n<li><input disabled=\"\" type=\"checkbox\"> ReentrantLock 的特点及 AQS 原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> Semaphore、CountDownLatch、CyclicBarrier 等使用</li>\n<li><input disabled=\"\" type=\"checkbox\"> ThreadLocal 的原理、与 Thread 类的关系、以及内存泄漏问题</li>\n<li><input disabled=\"\" type=\"checkbox\"> volatile 的原理及内存屏障相关</li>\n<li><input disabled=\"\" type=\"checkbox\"> Lock 接口有哪些实现类，使用场景是什么</li>\n<li><input disabled=\"\" type=\"checkbox\"> 悲观锁，乐观锁，优缺点，CAS 有什么缺陷，该如何解决</li>\n</ul>"},{"title":"Memcached与Redis对比","date":"2019-12-04T07:57:58.000Z","keywords":null,"description":null,"_content":"\nRedis is more powerful, more popular, and better supported than memcached. Memcached can only do a small fraction of the things Redis can do. Redis is better even where their features overlap.For anything new, use Redis.\n\n\n\n<!--more-->\n\n\n\n# Memcached vs Redis: Direct Comparison\n\nBoth tools are powerful, fast, in-memory data stores that are useful as a cache. Both can help speed up your application by caching database results, HTML fragments, or anything else that might be expensive to generate.\n\n## Points to Consider\n\nWhen used for the same thing, here is how they compare using the original question's \"Points to Consider\":\n\n- **Read/write speed**: Both are extremely fast. Benchmarks vary by workload, versions, and many other factors but generally show redis to be as fast or almost as fast as memcached. I recommend redis, but not because memcached is slow. It's not.\n\n- Memory usage\n\n  : Redis is better.\n\n  - memcached: You specify the cache size and as you insert items the daemon quickly grows to a little more than this size. There is never really a way to reclaim any of that space, short of restarting memcached. All your keys could be expired, you could flush the database, and it would still use the full chunk of RAM you configured it with.\n  - redis: Setting a max size is up to you. Redis will never use more than it has to and will give you back memory it is no longer using.\n  - I stored 100,000 ~2KB strings (~200MB) of random sentences into both. Memcached RAM usage grew to ~225MB. Redis RAM usage grew to ~228MB. After flushing both, redis dropped to ~29MB and memcached stayed at ~225MB. They are similarly efficient in how they store data, but only one is capable of reclaiming it.\n\n- **Disk I/O dumping**: A clear win for redis since it does this by default and has very configurable persistence. Memcached has no mechanisms for dumping to disk without 3rd party tools.\n\n- **Scaling**: Both give you tons of headroom before you need more than a single instance as a cache. Redis includes tools to help you go beyond that while memcached does not.\n\n## memcached\n\nMemcached is a simple volatile cache server. It allows you to store key/value pairs where the value is limited to being a string up to 1MB.\n\nIt's good at this, but that's all it does. You can access those values by their key at extremely high speed, often saturating available network or even memory bandwidth.\n\nWhen you restart memcached your data is gone. This is fine for a cache. You shouldn't store anything important there.\n\nIf you need high performance or high availability there are 3rd party tools, products, and services available.\n\n## redis\n\nRedis can do the same jobs as memcached can, and can do them better.\n\nRedis can [act as a cache](https://redis.io/topics/lru-cache) as well. It can store key/value pairs too. In redis they can even be up to 512MB.\n\nYou can turn off persistence and it will happily lose your data on restart too. If you want your cache to survive restarts it lets you do that as well. In fact, that's the default.\n\nIt's super fast too, often limited by network or memory bandwidth.\n\nIf one instance of redis/memcached isn't enough performance for your workload, redis is the clear choice. Redis includes [cluster support](https://redis.io/topics/cluster-tutorial) and comes with high availability tools ([redis-sentinel](https://redis.io/topics/sentinel)) right \"in the box\". Over the past few years redis has also emerged as the clear leader in 3rd party tooling. Companies like Redis Labs, Amazon, and others offer many useful redis tools and services. The ecosystem around redis is much larger. The number of large scale deployments is now likely greater than for memcached.\n\n# The Redis Superset\n\nRedis is more than a cache. It is an in-memory data structure server. Below you will find a quick overview of things Redis can do beyond being a simple key/value cache like memcached. *Most* of redis' features are things memcached cannot do.\n\n## Documentation\n\nRedis is better documented than memcached. While this can be subjective, it seems to be more and more true all the time.\n\n[redis.io](https://redis.io/) is a fantastic easily navigated resource. It lets you [try redis in the browser](https://try.redis.io/) and even gives you live interactive examples with each command in the docs.\n\nThere are now 2x as many stackoverflow results for redis as memcached. 2x as many Google results. More readily accessible examples in more languages. More active development. More active client development. These measurements might not mean much individually, but in combination they paint a clear picture that support and documentation for redis is greater and much more up-to-date.\n\n## [Persistence](https://redis.io/topics/persistence)\n\nBy default redis persists your data to disk using a mechanism called snapshotting. If you have enough RAM available it's able to write all of your data to disk with almost no performance degradation. It's almost free!\n\nIn snapshot mode there is a chance that a sudden crash could result in a small amount of lost data. If you absolutely need to make sure no data is ever lost, don't worry, redis has your back there too with AOF (Append Only File) mode. In this persistence mode data can be synced to disk as it is written. This can reduce maximum write throughput to however fast your disk can write, but should still be quite fast.\n\nThere are many configuration options to fine tune persistence if you need, but the defaults are very sensible. These options make it easy to setup redis as a safe, redundant place to store data. It is a *real* database.\n\n## Many Data Types\n\nMemcached is limited to strings, but Redis is a data structure server that can serve up many different data types. It also provides the commands you need to make the most of those data types.\n\n### Strings ([commands](https://redis.io/commands#string))\n\nSimple text or binary values that can be up to 512MB in size. This is the only data type redis and memcached share, though memcached strings are limited to 1MB.\n\nRedis gives you more tools for leveraging this datatype by offering commands for bitwise operations, bit-level manipulation, floating point increment/decrement support, range queries, and multi-key operations. Memcached doesn't support any of that.\n\nStrings are useful for all sorts of use cases, which is why memcached is fairly useful with this data type alone.\n\n### Hashes ([commands](https://redis.io/commands#hash))\n\nHashes are sort of like a key value store within a key value store. They map between string fields and string values. Field->value maps using a hash are slightly more space efficient than key->value maps using regular strings.\n\nHashes are useful as a namespace, or when you want to logically group many keys. With a hash you can grab all the members efficiently, expire all the members together, delete all the members together, etc. Great for any use case where you have several key/value pairs that need to grouped.\n\nOne example use of a hash is for storing user profiles between applications. A redis hash stored with the user ID as the key will allow you to store as many bits of data about a user as needed while keeping them stored under a single key. The advantage of using a hash instead of serializing the profile into a string is that you can have different applications read/write different fields within the user profile without having to worry about one app overriding changes made by others (which can happen if you serialize stale data).\n\n### Lists ([commands](https://redis.io/commands#list))\n\nRedis lists are ordered collections of strings. They are optimized for inserting, reading, or removing values from the top or bottom (aka: left or right) of the list.\n\nRedis provides many [commands](https://redis.io/commands#list) for leveraging lists, including commands to push/pop items, push/pop between lists, truncate lists, perform range queries, etc.\n\nLists make great durable, atomic, queues. These work great for job queues, logs, buffers, and many other use cases.\n\n### Sets ([commands](https://redis.io/commands#set))\n\nSets are unordered collections of unique values. They are optimized to let you quickly check if a value is in the set, quickly add/remove values, and to measure overlap with other sets.\n\nThese are great for things like access control lists, unique visitor trackers, and many other things. Most programming languages have something similar (usually called a Set). This is like that, only distributed.\n\nRedis provides several [commands](https://redis.io/commands#set) to manage sets. Obvious ones like adding, removing, and checking the set are present. So are less obvious commands like popping/reading a random item and commands for performing unions and intersections with other sets.\n\n### Sorted Sets ([commands](https://redis.io/commands#sorted_set))\n\nSorted Sets are also collections of unique values. These ones, as the name implies, are ordered. They are ordered by a score, then lexicographically.\n\nThis data type is optimized for quick lookups by score. Getting the highest, lowest, or any range of values in between is extremely fast.\n\nIf you add users to a sorted set along with their high score, you have yourself a perfect leader-board. As new high scores come in, just add them to the set again with their high score and it will re-order your leader-board. Also great for keeping track of the last time users visited and who is active in your application.\n\nStoring values with the same score causes them to be ordered lexicographically (think alphabetically). This can be useful for things like auto-complete features.\n\nMany of the sorted set [commands](https://redis.io/commands#sorted_set) are similar to commands for sets, sometimes with an additional score parameter. Also included are commands for managing scores and querying by score.\n\n### Geo\n\nRedis has several [commands](https://redis.io/commands#geo) for storing, retrieving, and measuring geographic data. This includes radius queries and measuring distances between points.\n\nTechnically geographic data in redis is stored within sorted sets, so this isn't a truly separate data type. It is more of an extension on top of sorted sets.\n\n### Bitmap and HyperLogLog\n\nLike geo, these aren't completely separate data types. These are commands that allow you to treat string data as if it's either a bitmap or a hyperloglog.\n\nBitmaps are what the bit-level operators I referenced under `Strings` are for. This data type was the basic building block for reddit's recent collaborative art project: [r/Place](https://redditblog.com/2017/04/13/how-we-built-rplace/).\n\nHyperLogLog allows you to use a constant extremely small amount of space to count almost unlimited unique values with shocking accuracy. Using only ~16KB you could efficiently count the number of unique visitors to your site, even if that number is in the millions.\n\n## Transactions and Atomicity\n\nCommands in redis are atomic, meaning you can be sure that as soon as you write a value to redis that value is visible to all clients connected to redis. There is no wait for that value to propagate. Technically memcached is atomic as well, but with redis adding all this functionality beyond memcached it is worth noting and somewhat impressive that all these additional data types and features are also atomic.\n\nWhile not quite the same as transactions in relational databases, redis also has [transactions](https://redis.io/topics/transactions) that use \"optimistic locking\" ([WATCH](https://redis.io/commands/watch)/[MULTI](https://redis.io/commands/multi)/[EXEC](https://redis.io/commands/exec)).\n\n## Pipelining\n\nRedis provides a feature called '[pipelining](https://redis.io/topics/pipelining)'. If you have many redis commands you want to execute you can use pipelining to send them to redis all-at-once instead of one-at-a-time.\n\nNormally when you execute a command to either redis or memcached, each command is a separate request/response cycle. With pipelining, redis can buffer several commands and execute them all at once, responding with all of the responses to all of your commands in a single reply.\n\nThis can allow you to achieve even greater throughput on bulk importing or other actions that involve lots of commands.\n\n## Pub/Sub\n\nRedis has [commands](https://redis.io/commands#pubsub) dedicated to [pub/sub functionality](https://redis.io/topics/pubsub), allowing redis to act as a high speed message broadcaster. This allows a single client to publish messages to many other clients connected to a channel.\n\nRedis does pub/sub as well as almost any tool. Dedicated message brokers like [RabbitMQ](https://www.rabbitmq.com/) may have advantages in certain areas, but the fact that the same server can also give you persistent durable queues and other data structures your pub/sub workloads likely need, Redis will often prove to be the best and most simple tool for the job.\n\n## Lua Scripting\n\nYou can kind of think of [lua scripts](https://redis.io/commands/eval) like redis's own SQL or stored procedures. It's both more and less than that, but the analogy mostly works.\n\nMaybe you have complex calculations you want redis to perform. Maybe you can't afford to have your transactions roll back and need guarantees every step of a complex process will happen atomically. These problems and many more can be solved with lua scripting.\n\nThe entire script is executed atomically, so if you can fit your logic into a lua script you can often avoid messing with optimistic locking transactions.\n\n## Scaling\n\nAs mentioned above, redis includes built in support for clustering and is bundled with its own high availability tool called `redis-sentinel`.\n\n# Conclusion\n\nWithout hesitation I would recommend redis over memcached for any new projects, or existing projects that don't already use memcached.\n\nThe above may sound like I don't like memcached. On the contrary: it is a powerful, simple, stable, mature, and hardened tool. There are even some use cases where it's a little faster than redis. I love memcached. I just don't think it makes much sense for future development.\n\nRedis does everything memcached does, often better. Any performance advantage for memcached is minor and workload specific. There are also workloads for which redis will be faster, and many more workloads that redis can do which memcached simply can't. The tiny performance differences seem minor in the face of the giant gulf in functionality and the fact that both tools are so fast and efficient they may very well be the last piece of your infrastructure you'll ever have to worry about scaling.\n\nThere is only one scenario where memcached makes more sense: where memcached is already in use as a cache. If you are already caching with memcached then keep using it, if it meets your needs. It is likely not worth the effort to move to redis and if you are going to use redis just for caching it may not offer enough benefit to be worth your time. If memcached isn't meeting your needs, then you should probably move to redis. This is true whether you need to scale beyond memcached or you need additional functionality.","source":"_posts/technique/Memcached与Redis对比.md","raw":"---\ntitle: Memcached与Redis对比\ndate: 2019-12-04 15:57:58\ntags:\nkeywords:\ndescription:\n---\n\nRedis is more powerful, more popular, and better supported than memcached. Memcached can only do a small fraction of the things Redis can do. Redis is better even where their features overlap.For anything new, use Redis.\n\n\n\n<!--more-->\n\n\n\n# Memcached vs Redis: Direct Comparison\n\nBoth tools are powerful, fast, in-memory data stores that are useful as a cache. Both can help speed up your application by caching database results, HTML fragments, or anything else that might be expensive to generate.\n\n## Points to Consider\n\nWhen used for the same thing, here is how they compare using the original question's \"Points to Consider\":\n\n- **Read/write speed**: Both are extremely fast. Benchmarks vary by workload, versions, and many other factors but generally show redis to be as fast or almost as fast as memcached. I recommend redis, but not because memcached is slow. It's not.\n\n- Memory usage\n\n  : Redis is better.\n\n  - memcached: You specify the cache size and as you insert items the daemon quickly grows to a little more than this size. There is never really a way to reclaim any of that space, short of restarting memcached. All your keys could be expired, you could flush the database, and it would still use the full chunk of RAM you configured it with.\n  - redis: Setting a max size is up to you. Redis will never use more than it has to and will give you back memory it is no longer using.\n  - I stored 100,000 ~2KB strings (~200MB) of random sentences into both. Memcached RAM usage grew to ~225MB. Redis RAM usage grew to ~228MB. After flushing both, redis dropped to ~29MB and memcached stayed at ~225MB. They are similarly efficient in how they store data, but only one is capable of reclaiming it.\n\n- **Disk I/O dumping**: A clear win for redis since it does this by default and has very configurable persistence. Memcached has no mechanisms for dumping to disk without 3rd party tools.\n\n- **Scaling**: Both give you tons of headroom before you need more than a single instance as a cache. Redis includes tools to help you go beyond that while memcached does not.\n\n## memcached\n\nMemcached is a simple volatile cache server. It allows you to store key/value pairs where the value is limited to being a string up to 1MB.\n\nIt's good at this, but that's all it does. You can access those values by their key at extremely high speed, often saturating available network or even memory bandwidth.\n\nWhen you restart memcached your data is gone. This is fine for a cache. You shouldn't store anything important there.\n\nIf you need high performance or high availability there are 3rd party tools, products, and services available.\n\n## redis\n\nRedis can do the same jobs as memcached can, and can do them better.\n\nRedis can [act as a cache](https://redis.io/topics/lru-cache) as well. It can store key/value pairs too. In redis they can even be up to 512MB.\n\nYou can turn off persistence and it will happily lose your data on restart too. If you want your cache to survive restarts it lets you do that as well. In fact, that's the default.\n\nIt's super fast too, often limited by network or memory bandwidth.\n\nIf one instance of redis/memcached isn't enough performance for your workload, redis is the clear choice. Redis includes [cluster support](https://redis.io/topics/cluster-tutorial) and comes with high availability tools ([redis-sentinel](https://redis.io/topics/sentinel)) right \"in the box\". Over the past few years redis has also emerged as the clear leader in 3rd party tooling. Companies like Redis Labs, Amazon, and others offer many useful redis tools and services. The ecosystem around redis is much larger. The number of large scale deployments is now likely greater than for memcached.\n\n# The Redis Superset\n\nRedis is more than a cache. It is an in-memory data structure server. Below you will find a quick overview of things Redis can do beyond being a simple key/value cache like memcached. *Most* of redis' features are things memcached cannot do.\n\n## Documentation\n\nRedis is better documented than memcached. While this can be subjective, it seems to be more and more true all the time.\n\n[redis.io](https://redis.io/) is a fantastic easily navigated resource. It lets you [try redis in the browser](https://try.redis.io/) and even gives you live interactive examples with each command in the docs.\n\nThere are now 2x as many stackoverflow results for redis as memcached. 2x as many Google results. More readily accessible examples in more languages. More active development. More active client development. These measurements might not mean much individually, but in combination they paint a clear picture that support and documentation for redis is greater and much more up-to-date.\n\n## [Persistence](https://redis.io/topics/persistence)\n\nBy default redis persists your data to disk using a mechanism called snapshotting. If you have enough RAM available it's able to write all of your data to disk with almost no performance degradation. It's almost free!\n\nIn snapshot mode there is a chance that a sudden crash could result in a small amount of lost data. If you absolutely need to make sure no data is ever lost, don't worry, redis has your back there too with AOF (Append Only File) mode. In this persistence mode data can be synced to disk as it is written. This can reduce maximum write throughput to however fast your disk can write, but should still be quite fast.\n\nThere are many configuration options to fine tune persistence if you need, but the defaults are very sensible. These options make it easy to setup redis as a safe, redundant place to store data. It is a *real* database.\n\n## Many Data Types\n\nMemcached is limited to strings, but Redis is a data structure server that can serve up many different data types. It also provides the commands you need to make the most of those data types.\n\n### Strings ([commands](https://redis.io/commands#string))\n\nSimple text or binary values that can be up to 512MB in size. This is the only data type redis and memcached share, though memcached strings are limited to 1MB.\n\nRedis gives you more tools for leveraging this datatype by offering commands for bitwise operations, bit-level manipulation, floating point increment/decrement support, range queries, and multi-key operations. Memcached doesn't support any of that.\n\nStrings are useful for all sorts of use cases, which is why memcached is fairly useful with this data type alone.\n\n### Hashes ([commands](https://redis.io/commands#hash))\n\nHashes are sort of like a key value store within a key value store. They map between string fields and string values. Field->value maps using a hash are slightly more space efficient than key->value maps using regular strings.\n\nHashes are useful as a namespace, or when you want to logically group many keys. With a hash you can grab all the members efficiently, expire all the members together, delete all the members together, etc. Great for any use case where you have several key/value pairs that need to grouped.\n\nOne example use of a hash is for storing user profiles between applications. A redis hash stored with the user ID as the key will allow you to store as many bits of data about a user as needed while keeping them stored under a single key. The advantage of using a hash instead of serializing the profile into a string is that you can have different applications read/write different fields within the user profile without having to worry about one app overriding changes made by others (which can happen if you serialize stale data).\n\n### Lists ([commands](https://redis.io/commands#list))\n\nRedis lists are ordered collections of strings. They are optimized for inserting, reading, or removing values from the top or bottom (aka: left or right) of the list.\n\nRedis provides many [commands](https://redis.io/commands#list) for leveraging lists, including commands to push/pop items, push/pop between lists, truncate lists, perform range queries, etc.\n\nLists make great durable, atomic, queues. These work great for job queues, logs, buffers, and many other use cases.\n\n### Sets ([commands](https://redis.io/commands#set))\n\nSets are unordered collections of unique values. They are optimized to let you quickly check if a value is in the set, quickly add/remove values, and to measure overlap with other sets.\n\nThese are great for things like access control lists, unique visitor trackers, and many other things. Most programming languages have something similar (usually called a Set). This is like that, only distributed.\n\nRedis provides several [commands](https://redis.io/commands#set) to manage sets. Obvious ones like adding, removing, and checking the set are present. So are less obvious commands like popping/reading a random item and commands for performing unions and intersections with other sets.\n\n### Sorted Sets ([commands](https://redis.io/commands#sorted_set))\n\nSorted Sets are also collections of unique values. These ones, as the name implies, are ordered. They are ordered by a score, then lexicographically.\n\nThis data type is optimized for quick lookups by score. Getting the highest, lowest, or any range of values in between is extremely fast.\n\nIf you add users to a sorted set along with their high score, you have yourself a perfect leader-board. As new high scores come in, just add them to the set again with their high score and it will re-order your leader-board. Also great for keeping track of the last time users visited and who is active in your application.\n\nStoring values with the same score causes them to be ordered lexicographically (think alphabetically). This can be useful for things like auto-complete features.\n\nMany of the sorted set [commands](https://redis.io/commands#sorted_set) are similar to commands for sets, sometimes with an additional score parameter. Also included are commands for managing scores and querying by score.\n\n### Geo\n\nRedis has several [commands](https://redis.io/commands#geo) for storing, retrieving, and measuring geographic data. This includes radius queries and measuring distances between points.\n\nTechnically geographic data in redis is stored within sorted sets, so this isn't a truly separate data type. It is more of an extension on top of sorted sets.\n\n### Bitmap and HyperLogLog\n\nLike geo, these aren't completely separate data types. These are commands that allow you to treat string data as if it's either a bitmap or a hyperloglog.\n\nBitmaps are what the bit-level operators I referenced under `Strings` are for. This data type was the basic building block for reddit's recent collaborative art project: [r/Place](https://redditblog.com/2017/04/13/how-we-built-rplace/).\n\nHyperLogLog allows you to use a constant extremely small amount of space to count almost unlimited unique values with shocking accuracy. Using only ~16KB you could efficiently count the number of unique visitors to your site, even if that number is in the millions.\n\n## Transactions and Atomicity\n\nCommands in redis are atomic, meaning you can be sure that as soon as you write a value to redis that value is visible to all clients connected to redis. There is no wait for that value to propagate. Technically memcached is atomic as well, but with redis adding all this functionality beyond memcached it is worth noting and somewhat impressive that all these additional data types and features are also atomic.\n\nWhile not quite the same as transactions in relational databases, redis also has [transactions](https://redis.io/topics/transactions) that use \"optimistic locking\" ([WATCH](https://redis.io/commands/watch)/[MULTI](https://redis.io/commands/multi)/[EXEC](https://redis.io/commands/exec)).\n\n## Pipelining\n\nRedis provides a feature called '[pipelining](https://redis.io/topics/pipelining)'. If you have many redis commands you want to execute you can use pipelining to send them to redis all-at-once instead of one-at-a-time.\n\nNormally when you execute a command to either redis or memcached, each command is a separate request/response cycle. With pipelining, redis can buffer several commands and execute them all at once, responding with all of the responses to all of your commands in a single reply.\n\nThis can allow you to achieve even greater throughput on bulk importing or other actions that involve lots of commands.\n\n## Pub/Sub\n\nRedis has [commands](https://redis.io/commands#pubsub) dedicated to [pub/sub functionality](https://redis.io/topics/pubsub), allowing redis to act as a high speed message broadcaster. This allows a single client to publish messages to many other clients connected to a channel.\n\nRedis does pub/sub as well as almost any tool. Dedicated message brokers like [RabbitMQ](https://www.rabbitmq.com/) may have advantages in certain areas, but the fact that the same server can also give you persistent durable queues and other data structures your pub/sub workloads likely need, Redis will often prove to be the best and most simple tool for the job.\n\n## Lua Scripting\n\nYou can kind of think of [lua scripts](https://redis.io/commands/eval) like redis's own SQL or stored procedures. It's both more and less than that, but the analogy mostly works.\n\nMaybe you have complex calculations you want redis to perform. Maybe you can't afford to have your transactions roll back and need guarantees every step of a complex process will happen atomically. These problems and many more can be solved with lua scripting.\n\nThe entire script is executed atomically, so if you can fit your logic into a lua script you can often avoid messing with optimistic locking transactions.\n\n## Scaling\n\nAs mentioned above, redis includes built in support for clustering and is bundled with its own high availability tool called `redis-sentinel`.\n\n# Conclusion\n\nWithout hesitation I would recommend redis over memcached for any new projects, or existing projects that don't already use memcached.\n\nThe above may sound like I don't like memcached. On the contrary: it is a powerful, simple, stable, mature, and hardened tool. There are even some use cases where it's a little faster than redis. I love memcached. I just don't think it makes much sense for future development.\n\nRedis does everything memcached does, often better. Any performance advantage for memcached is minor and workload specific. There are also workloads for which redis will be faster, and many more workloads that redis can do which memcached simply can't. The tiny performance differences seem minor in the face of the giant gulf in functionality and the fact that both tools are so fast and efficient they may very well be the last piece of your infrastructure you'll ever have to worry about scaling.\n\nThere is only one scenario where memcached makes more sense: where memcached is already in use as a cache. If you are already caching with memcached then keep using it, if it meets your needs. It is likely not worth the effort to move to redis and if you are going to use redis just for caching it may not offer enough benefit to be worth your time. If memcached isn't meeting your needs, then you should probably move to redis. This is true whether you need to scale beyond memcached or you need additional functionality.","slug":"technique/Memcached与Redis对比","published":1,"updated":"2020-03-20T07:42:35.323Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw680003q98kiez2zb3xo","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Redis is more powerful, more popular, and better supported than memcached. Memcached can only do a small fraction of the things Redis can do. Redis is better even where their features overlap.For anything new, use Redis.</p>\n<a id=\"more\"></a>\n\n\n\n<h1 id=\"Memcached-vs-Redis-Direct-Comparison\"><a href=\"#Memcached-vs-Redis-Direct-Comparison\" class=\"headerlink\" title=\"Memcached vs Redis: Direct Comparison\"></a>Memcached vs Redis: Direct Comparison</h1><p>Both tools are powerful, fast, in-memory data stores that are useful as a cache. Both can help speed up your application by caching database results, HTML fragments, or anything else that might be expensive to generate.</p>\n<h2 id=\"Points-to-Consider\"><a href=\"#Points-to-Consider\" class=\"headerlink\" title=\"Points to Consider\"></a>Points to Consider</h2><p>When used for the same thing, here is how they compare using the original question’s “Points to Consider”:</p>\n<ul>\n<li><p><strong>Read/write speed</strong>: Both are extremely fast. Benchmarks vary by workload, versions, and many other factors but generally show redis to be as fast or almost as fast as memcached. I recommend redis, but not because memcached is slow. It’s not.</p>\n</li>\n<li><p>Memory usage</p>\n<p>: Redis is better.</p>\n<ul>\n<li>memcached: You specify the cache size and as you insert items the daemon quickly grows to a little more than this size. There is never really a way to reclaim any of that space, short of restarting memcached. All your keys could be expired, you could flush the database, and it would still use the full chunk of RAM you configured it with.</li>\n<li>redis: Setting a max size is up to you. Redis will never use more than it has to and will give you back memory it is no longer using.</li>\n<li>I stored 100,000 <del>2KB strings (</del>200MB) of random sentences into both. Memcached RAM usage grew to ~225MB. Redis RAM usage grew to ~228MB. After flushing both, redis dropped to ~29MB and memcached stayed at ~225MB. They are similarly efficient in how they store data, but only one is capable of reclaiming it.</li>\n</ul>\n</li>\n<li><p><strong>Disk I/O dumping</strong>: A clear win for redis since it does this by default and has very configurable persistence. Memcached has no mechanisms for dumping to disk without 3rd party tools.</p>\n</li>\n<li><p><strong>Scaling</strong>: Both give you tons of headroom before you need more than a single instance as a cache. Redis includes tools to help you go beyond that while memcached does not.</p>\n</li>\n</ul>\n<h2 id=\"memcached\"><a href=\"#memcached\" class=\"headerlink\" title=\"memcached\"></a>memcached</h2><p>Memcached is a simple volatile cache server. It allows you to store key/value pairs where the value is limited to being a string up to 1MB.</p>\n<p>It’s good at this, but that’s all it does. You can access those values by their key at extremely high speed, often saturating available network or even memory bandwidth.</p>\n<p>When you restart memcached your data is gone. This is fine for a cache. You shouldn’t store anything important there.</p>\n<p>If you need high performance or high availability there are 3rd party tools, products, and services available.</p>\n<h2 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h2><p>Redis can do the same jobs as memcached can, and can do them better.</p>\n<p>Redis can <a href=\"https://redis.io/topics/lru-cache\" target=\"_blank\" rel=\"noopener\">act as a cache</a> as well. It can store key/value pairs too. In redis they can even be up to 512MB.</p>\n<p>You can turn off persistence and it will happily lose your data on restart too. If you want your cache to survive restarts it lets you do that as well. In fact, that’s the default.</p>\n<p>It’s super fast too, often limited by network or memory bandwidth.</p>\n<p>If one instance of redis/memcached isn’t enough performance for your workload, redis is the clear choice. Redis includes <a href=\"https://redis.io/topics/cluster-tutorial\" target=\"_blank\" rel=\"noopener\">cluster support</a> and comes with high availability tools (<a href=\"https://redis.io/topics/sentinel\" target=\"_blank\" rel=\"noopener\">redis-sentinel</a>) right “in the box”. Over the past few years redis has also emerged as the clear leader in 3rd party tooling. Companies like Redis Labs, Amazon, and others offer many useful redis tools and services. The ecosystem around redis is much larger. The number of large scale deployments is now likely greater than for memcached.</p>\n<h1 id=\"The-Redis-Superset\"><a href=\"#The-Redis-Superset\" class=\"headerlink\" title=\"The Redis Superset\"></a>The Redis Superset</h1><p>Redis is more than a cache. It is an in-memory data structure server. Below you will find a quick overview of things Redis can do beyond being a simple key/value cache like memcached. <em>Most</em> of redis’ features are things memcached cannot do.</p>\n<h2 id=\"Documentation\"><a href=\"#Documentation\" class=\"headerlink\" title=\"Documentation\"></a>Documentation</h2><p>Redis is better documented than memcached. While this can be subjective, it seems to be more and more true all the time.</p>\n<p><a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener\">redis.io</a> is a fantastic easily navigated resource. It lets you <a href=\"https://try.redis.io/\" target=\"_blank\" rel=\"noopener\">try redis in the browser</a> and even gives you live interactive examples with each command in the docs.</p>\n<p>There are now 2x as many stackoverflow results for redis as memcached. 2x as many Google results. More readily accessible examples in more languages. More active development. More active client development. These measurements might not mean much individually, but in combination they paint a clear picture that support and documentation for redis is greater and much more up-to-date.</p>\n<h2 id=\"Persistence\"><a href=\"#Persistence\" class=\"headerlink\" title=\"Persistence\"></a><a href=\"https://redis.io/topics/persistence\" target=\"_blank\" rel=\"noopener\">Persistence</a></h2><p>By default redis persists your data to disk using a mechanism called snapshotting. If you have enough RAM available it’s able to write all of your data to disk with almost no performance degradation. It’s almost free!</p>\n<p>In snapshot mode there is a chance that a sudden crash could result in a small amount of lost data. If you absolutely need to make sure no data is ever lost, don’t worry, redis has your back there too with AOF (Append Only File) mode. In this persistence mode data can be synced to disk as it is written. This can reduce maximum write throughput to however fast your disk can write, but should still be quite fast.</p>\n<p>There are many configuration options to fine tune persistence if you need, but the defaults are very sensible. These options make it easy to setup redis as a safe, redundant place to store data. It is a <em>real</em> database.</p>\n<h2 id=\"Many-Data-Types\"><a href=\"#Many-Data-Types\" class=\"headerlink\" title=\"Many Data Types\"></a>Many Data Types</h2><p>Memcached is limited to strings, but Redis is a data structure server that can serve up many different data types. It also provides the commands you need to make the most of those data types.</p>\n<h3 id=\"Strings-commands\"><a href=\"#Strings-commands\" class=\"headerlink\" title=\"Strings (commands)\"></a>Strings (<a href=\"https://redis.io/commands#string\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Simple text or binary values that can be up to 512MB in size. This is the only data type redis and memcached share, though memcached strings are limited to 1MB.</p>\n<p>Redis gives you more tools for leveraging this datatype by offering commands for bitwise operations, bit-level manipulation, floating point increment/decrement support, range queries, and multi-key operations. Memcached doesn’t support any of that.</p>\n<p>Strings are useful for all sorts of use cases, which is why memcached is fairly useful with this data type alone.</p>\n<h3 id=\"Hashes-commands\"><a href=\"#Hashes-commands\" class=\"headerlink\" title=\"Hashes (commands)\"></a>Hashes (<a href=\"https://redis.io/commands#hash\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Hashes are sort of like a key value store within a key value store. They map between string fields and string values. Field-&gt;value maps using a hash are slightly more space efficient than key-&gt;value maps using regular strings.</p>\n<p>Hashes are useful as a namespace, or when you want to logically group many keys. With a hash you can grab all the members efficiently, expire all the members together, delete all the members together, etc. Great for any use case where you have several key/value pairs that need to grouped.</p>\n<p>One example use of a hash is for storing user profiles between applications. A redis hash stored with the user ID as the key will allow you to store as many bits of data about a user as needed while keeping them stored under a single key. The advantage of using a hash instead of serializing the profile into a string is that you can have different applications read/write different fields within the user profile without having to worry about one app overriding changes made by others (which can happen if you serialize stale data).</p>\n<h3 id=\"Lists-commands\"><a href=\"#Lists-commands\" class=\"headerlink\" title=\"Lists (commands)\"></a>Lists (<a href=\"https://redis.io/commands#list\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Redis lists are ordered collections of strings. They are optimized for inserting, reading, or removing values from the top or bottom (aka: left or right) of the list.</p>\n<p>Redis provides many <a href=\"https://redis.io/commands#list\" target=\"_blank\" rel=\"noopener\">commands</a> for leveraging lists, including commands to push/pop items, push/pop between lists, truncate lists, perform range queries, etc.</p>\n<p>Lists make great durable, atomic, queues. These work great for job queues, logs, buffers, and many other use cases.</p>\n<h3 id=\"Sets-commands\"><a href=\"#Sets-commands\" class=\"headerlink\" title=\"Sets (commands)\"></a>Sets (<a href=\"https://redis.io/commands#set\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Sets are unordered collections of unique values. They are optimized to let you quickly check if a value is in the set, quickly add/remove values, and to measure overlap with other sets.</p>\n<p>These are great for things like access control lists, unique visitor trackers, and many other things. Most programming languages have something similar (usually called a Set). This is like that, only distributed.</p>\n<p>Redis provides several <a href=\"https://redis.io/commands#set\" target=\"_blank\" rel=\"noopener\">commands</a> to manage sets. Obvious ones like adding, removing, and checking the set are present. So are less obvious commands like popping/reading a random item and commands for performing unions and intersections with other sets.</p>\n<h3 id=\"Sorted-Sets-commands\"><a href=\"#Sorted-Sets-commands\" class=\"headerlink\" title=\"Sorted Sets (commands)\"></a>Sorted Sets (<a href=\"https://redis.io/commands#sorted_set\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Sorted Sets are also collections of unique values. These ones, as the name implies, are ordered. They are ordered by a score, then lexicographically.</p>\n<p>This data type is optimized for quick lookups by score. Getting the highest, lowest, or any range of values in between is extremely fast.</p>\n<p>If you add users to a sorted set along with their high score, you have yourself a perfect leader-board. As new high scores come in, just add them to the set again with their high score and it will re-order your leader-board. Also great for keeping track of the last time users visited and who is active in your application.</p>\n<p>Storing values with the same score causes them to be ordered lexicographically (think alphabetically). This can be useful for things like auto-complete features.</p>\n<p>Many of the sorted set <a href=\"https://redis.io/commands#sorted_set\" target=\"_blank\" rel=\"noopener\">commands</a> are similar to commands for sets, sometimes with an additional score parameter. Also included are commands for managing scores and querying by score.</p>\n<h3 id=\"Geo\"><a href=\"#Geo\" class=\"headerlink\" title=\"Geo\"></a>Geo</h3><p>Redis has several <a href=\"https://redis.io/commands#geo\" target=\"_blank\" rel=\"noopener\">commands</a> for storing, retrieving, and measuring geographic data. This includes radius queries and measuring distances between points.</p>\n<p>Technically geographic data in redis is stored within sorted sets, so this isn’t a truly separate data type. It is more of an extension on top of sorted sets.</p>\n<h3 id=\"Bitmap-and-HyperLogLog\"><a href=\"#Bitmap-and-HyperLogLog\" class=\"headerlink\" title=\"Bitmap and HyperLogLog\"></a>Bitmap and HyperLogLog</h3><p>Like geo, these aren’t completely separate data types. These are commands that allow you to treat string data as if it’s either a bitmap or a hyperloglog.</p>\n<p>Bitmaps are what the bit-level operators I referenced under <code>Strings</code> are for. This data type was the basic building block for reddit’s recent collaborative art project: <a href=\"https://redditblog.com/2017/04/13/how-we-built-rplace/\" target=\"_blank\" rel=\"noopener\">r/Place</a>.</p>\n<p>HyperLogLog allows you to use a constant extremely small amount of space to count almost unlimited unique values with shocking accuracy. Using only ~16KB you could efficiently count the number of unique visitors to your site, even if that number is in the millions.</p>\n<h2 id=\"Transactions-and-Atomicity\"><a href=\"#Transactions-and-Atomicity\" class=\"headerlink\" title=\"Transactions and Atomicity\"></a>Transactions and Atomicity</h2><p>Commands in redis are atomic, meaning you can be sure that as soon as you write a value to redis that value is visible to all clients connected to redis. There is no wait for that value to propagate. Technically memcached is atomic as well, but with redis adding all this functionality beyond memcached it is worth noting and somewhat impressive that all these additional data types and features are also atomic.</p>\n<p>While not quite the same as transactions in relational databases, redis also has <a href=\"https://redis.io/topics/transactions\" target=\"_blank\" rel=\"noopener\">transactions</a> that use “optimistic locking” (<a href=\"https://redis.io/commands/watch\" target=\"_blank\" rel=\"noopener\">WATCH</a>/<a href=\"https://redis.io/commands/multi\" target=\"_blank\" rel=\"noopener\">MULTI</a>/<a href=\"https://redis.io/commands/exec\" target=\"_blank\" rel=\"noopener\">EXEC</a>).</p>\n<h2 id=\"Pipelining\"><a href=\"#Pipelining\" class=\"headerlink\" title=\"Pipelining\"></a>Pipelining</h2><p>Redis provides a feature called ‘<a href=\"https://redis.io/topics/pipelining\" target=\"_blank\" rel=\"noopener\">pipelining</a>‘. If you have many redis commands you want to execute you can use pipelining to send them to redis all-at-once instead of one-at-a-time.</p>\n<p>Normally when you execute a command to either redis or memcached, each command is a separate request/response cycle. With pipelining, redis can buffer several commands and execute them all at once, responding with all of the responses to all of your commands in a single reply.</p>\n<p>This can allow you to achieve even greater throughput on bulk importing or other actions that involve lots of commands.</p>\n<h2 id=\"Pub-Sub\"><a href=\"#Pub-Sub\" class=\"headerlink\" title=\"Pub/Sub\"></a>Pub/Sub</h2><p>Redis has <a href=\"https://redis.io/commands#pubsub\" target=\"_blank\" rel=\"noopener\">commands</a> dedicated to <a href=\"https://redis.io/topics/pubsub\" target=\"_blank\" rel=\"noopener\">pub/sub functionality</a>, allowing redis to act as a high speed message broadcaster. This allows a single client to publish messages to many other clients connected to a channel.</p>\n<p>Redis does pub/sub as well as almost any tool. Dedicated message brokers like <a href=\"https://www.rabbitmq.com/\" target=\"_blank\" rel=\"noopener\">RabbitMQ</a> may have advantages in certain areas, but the fact that the same server can also give you persistent durable queues and other data structures your pub/sub workloads likely need, Redis will often prove to be the best and most simple tool for the job.</p>\n<h2 id=\"Lua-Scripting\"><a href=\"#Lua-Scripting\" class=\"headerlink\" title=\"Lua Scripting\"></a>Lua Scripting</h2><p>You can kind of think of <a href=\"https://redis.io/commands/eval\" target=\"_blank\" rel=\"noopener\">lua scripts</a> like redis’s own SQL or stored procedures. It’s both more and less than that, but the analogy mostly works.</p>\n<p>Maybe you have complex calculations you want redis to perform. Maybe you can’t afford to have your transactions roll back and need guarantees every step of a complex process will happen atomically. These problems and many more can be solved with lua scripting.</p>\n<p>The entire script is executed atomically, so if you can fit your logic into a lua script you can often avoid messing with optimistic locking transactions.</p>\n<h2 id=\"Scaling\"><a href=\"#Scaling\" class=\"headerlink\" title=\"Scaling\"></a>Scaling</h2><p>As mentioned above, redis includes built in support for clustering and is bundled with its own high availability tool called <code>redis-sentinel</code>.</p>\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><p>Without hesitation I would recommend redis over memcached for any new projects, or existing projects that don’t already use memcached.</p>\n<p>The above may sound like I don’t like memcached. On the contrary: it is a powerful, simple, stable, mature, and hardened tool. There are even some use cases where it’s a little faster than redis. I love memcached. I just don’t think it makes much sense for future development.</p>\n<p>Redis does everything memcached does, often better. Any performance advantage for memcached is minor and workload specific. There are also workloads for which redis will be faster, and many more workloads that redis can do which memcached simply can’t. The tiny performance differences seem minor in the face of the giant gulf in functionality and the fact that both tools are so fast and efficient they may very well be the last piece of your infrastructure you’ll ever have to worry about scaling.</p>\n<p>There is only one scenario where memcached makes more sense: where memcached is already in use as a cache. If you are already caching with memcached then keep using it, if it meets your needs. It is likely not worth the effort to move to redis and if you are going to use redis just for caching it may not offer enough benefit to be worth your time. If memcached isn’t meeting your needs, then you should probably move to redis. This is true whether you need to scale beyond memcached or you need additional functionality.</p>\n","site":{"data":{}},"excerpt":"<p>Redis is more powerful, more popular, and better supported than memcached. Memcached can only do a small fraction of the things Redis can do. Redis is better even where their features overlap.For anything new, use Redis.</p>","more":"<h1 id=\"Memcached-vs-Redis-Direct-Comparison\"><a href=\"#Memcached-vs-Redis-Direct-Comparison\" class=\"headerlink\" title=\"Memcached vs Redis: Direct Comparison\"></a>Memcached vs Redis: Direct Comparison</h1><p>Both tools are powerful, fast, in-memory data stores that are useful as a cache. Both can help speed up your application by caching database results, HTML fragments, or anything else that might be expensive to generate.</p>\n<h2 id=\"Points-to-Consider\"><a href=\"#Points-to-Consider\" class=\"headerlink\" title=\"Points to Consider\"></a>Points to Consider</h2><p>When used for the same thing, here is how they compare using the original question’s “Points to Consider”:</p>\n<ul>\n<li><p><strong>Read/write speed</strong>: Both are extremely fast. Benchmarks vary by workload, versions, and many other factors but generally show redis to be as fast or almost as fast as memcached. I recommend redis, but not because memcached is slow. It’s not.</p>\n</li>\n<li><p>Memory usage</p>\n<p>: Redis is better.</p>\n<ul>\n<li>memcached: You specify the cache size and as you insert items the daemon quickly grows to a little more than this size. There is never really a way to reclaim any of that space, short of restarting memcached. All your keys could be expired, you could flush the database, and it would still use the full chunk of RAM you configured it with.</li>\n<li>redis: Setting a max size is up to you. Redis will never use more than it has to and will give you back memory it is no longer using.</li>\n<li>I stored 100,000 <del>2KB strings (</del>200MB) of random sentences into both. Memcached RAM usage grew to ~225MB. Redis RAM usage grew to ~228MB. After flushing both, redis dropped to ~29MB and memcached stayed at ~225MB. They are similarly efficient in how they store data, but only one is capable of reclaiming it.</li>\n</ul>\n</li>\n<li><p><strong>Disk I/O dumping</strong>: A clear win for redis since it does this by default and has very configurable persistence. Memcached has no mechanisms for dumping to disk without 3rd party tools.</p>\n</li>\n<li><p><strong>Scaling</strong>: Both give you tons of headroom before you need more than a single instance as a cache. Redis includes tools to help you go beyond that while memcached does not.</p>\n</li>\n</ul>\n<h2 id=\"memcached\"><a href=\"#memcached\" class=\"headerlink\" title=\"memcached\"></a>memcached</h2><p>Memcached is a simple volatile cache server. It allows you to store key/value pairs where the value is limited to being a string up to 1MB.</p>\n<p>It’s good at this, but that’s all it does. You can access those values by their key at extremely high speed, often saturating available network or even memory bandwidth.</p>\n<p>When you restart memcached your data is gone. This is fine for a cache. You shouldn’t store anything important there.</p>\n<p>If you need high performance or high availability there are 3rd party tools, products, and services available.</p>\n<h2 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h2><p>Redis can do the same jobs as memcached can, and can do them better.</p>\n<p>Redis can <a href=\"https://redis.io/topics/lru-cache\" target=\"_blank\" rel=\"noopener\">act as a cache</a> as well. It can store key/value pairs too. In redis they can even be up to 512MB.</p>\n<p>You can turn off persistence and it will happily lose your data on restart too. If you want your cache to survive restarts it lets you do that as well. In fact, that’s the default.</p>\n<p>It’s super fast too, often limited by network or memory bandwidth.</p>\n<p>If one instance of redis/memcached isn’t enough performance for your workload, redis is the clear choice. Redis includes <a href=\"https://redis.io/topics/cluster-tutorial\" target=\"_blank\" rel=\"noopener\">cluster support</a> and comes with high availability tools (<a href=\"https://redis.io/topics/sentinel\" target=\"_blank\" rel=\"noopener\">redis-sentinel</a>) right “in the box”. Over the past few years redis has also emerged as the clear leader in 3rd party tooling. Companies like Redis Labs, Amazon, and others offer many useful redis tools and services. The ecosystem around redis is much larger. The number of large scale deployments is now likely greater than for memcached.</p>\n<h1 id=\"The-Redis-Superset\"><a href=\"#The-Redis-Superset\" class=\"headerlink\" title=\"The Redis Superset\"></a>The Redis Superset</h1><p>Redis is more than a cache. It is an in-memory data structure server. Below you will find a quick overview of things Redis can do beyond being a simple key/value cache like memcached. <em>Most</em> of redis’ features are things memcached cannot do.</p>\n<h2 id=\"Documentation\"><a href=\"#Documentation\" class=\"headerlink\" title=\"Documentation\"></a>Documentation</h2><p>Redis is better documented than memcached. While this can be subjective, it seems to be more and more true all the time.</p>\n<p><a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener\">redis.io</a> is a fantastic easily navigated resource. It lets you <a href=\"https://try.redis.io/\" target=\"_blank\" rel=\"noopener\">try redis in the browser</a> and even gives you live interactive examples with each command in the docs.</p>\n<p>There are now 2x as many stackoverflow results for redis as memcached. 2x as many Google results. More readily accessible examples in more languages. More active development. More active client development. These measurements might not mean much individually, but in combination they paint a clear picture that support and documentation for redis is greater and much more up-to-date.</p>\n<h2 id=\"Persistence\"><a href=\"#Persistence\" class=\"headerlink\" title=\"Persistence\"></a><a href=\"https://redis.io/topics/persistence\" target=\"_blank\" rel=\"noopener\">Persistence</a></h2><p>By default redis persists your data to disk using a mechanism called snapshotting. If you have enough RAM available it’s able to write all of your data to disk with almost no performance degradation. It’s almost free!</p>\n<p>In snapshot mode there is a chance that a sudden crash could result in a small amount of lost data. If you absolutely need to make sure no data is ever lost, don’t worry, redis has your back there too with AOF (Append Only File) mode. In this persistence mode data can be synced to disk as it is written. This can reduce maximum write throughput to however fast your disk can write, but should still be quite fast.</p>\n<p>There are many configuration options to fine tune persistence if you need, but the defaults are very sensible. These options make it easy to setup redis as a safe, redundant place to store data. It is a <em>real</em> database.</p>\n<h2 id=\"Many-Data-Types\"><a href=\"#Many-Data-Types\" class=\"headerlink\" title=\"Many Data Types\"></a>Many Data Types</h2><p>Memcached is limited to strings, but Redis is a data structure server that can serve up many different data types. It also provides the commands you need to make the most of those data types.</p>\n<h3 id=\"Strings-commands\"><a href=\"#Strings-commands\" class=\"headerlink\" title=\"Strings (commands)\"></a>Strings (<a href=\"https://redis.io/commands#string\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Simple text or binary values that can be up to 512MB in size. This is the only data type redis and memcached share, though memcached strings are limited to 1MB.</p>\n<p>Redis gives you more tools for leveraging this datatype by offering commands for bitwise operations, bit-level manipulation, floating point increment/decrement support, range queries, and multi-key operations. Memcached doesn’t support any of that.</p>\n<p>Strings are useful for all sorts of use cases, which is why memcached is fairly useful with this data type alone.</p>\n<h3 id=\"Hashes-commands\"><a href=\"#Hashes-commands\" class=\"headerlink\" title=\"Hashes (commands)\"></a>Hashes (<a href=\"https://redis.io/commands#hash\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Hashes are sort of like a key value store within a key value store. They map between string fields and string values. Field-&gt;value maps using a hash are slightly more space efficient than key-&gt;value maps using regular strings.</p>\n<p>Hashes are useful as a namespace, or when you want to logically group many keys. With a hash you can grab all the members efficiently, expire all the members together, delete all the members together, etc. Great for any use case where you have several key/value pairs that need to grouped.</p>\n<p>One example use of a hash is for storing user profiles between applications. A redis hash stored with the user ID as the key will allow you to store as many bits of data about a user as needed while keeping them stored under a single key. The advantage of using a hash instead of serializing the profile into a string is that you can have different applications read/write different fields within the user profile without having to worry about one app overriding changes made by others (which can happen if you serialize stale data).</p>\n<h3 id=\"Lists-commands\"><a href=\"#Lists-commands\" class=\"headerlink\" title=\"Lists (commands)\"></a>Lists (<a href=\"https://redis.io/commands#list\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Redis lists are ordered collections of strings. They are optimized for inserting, reading, or removing values from the top or bottom (aka: left or right) of the list.</p>\n<p>Redis provides many <a href=\"https://redis.io/commands#list\" target=\"_blank\" rel=\"noopener\">commands</a> for leveraging lists, including commands to push/pop items, push/pop between lists, truncate lists, perform range queries, etc.</p>\n<p>Lists make great durable, atomic, queues. These work great for job queues, logs, buffers, and many other use cases.</p>\n<h3 id=\"Sets-commands\"><a href=\"#Sets-commands\" class=\"headerlink\" title=\"Sets (commands)\"></a>Sets (<a href=\"https://redis.io/commands#set\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Sets are unordered collections of unique values. They are optimized to let you quickly check if a value is in the set, quickly add/remove values, and to measure overlap with other sets.</p>\n<p>These are great for things like access control lists, unique visitor trackers, and many other things. Most programming languages have something similar (usually called a Set). This is like that, only distributed.</p>\n<p>Redis provides several <a href=\"https://redis.io/commands#set\" target=\"_blank\" rel=\"noopener\">commands</a> to manage sets. Obvious ones like adding, removing, and checking the set are present. So are less obvious commands like popping/reading a random item and commands for performing unions and intersections with other sets.</p>\n<h3 id=\"Sorted-Sets-commands\"><a href=\"#Sorted-Sets-commands\" class=\"headerlink\" title=\"Sorted Sets (commands)\"></a>Sorted Sets (<a href=\"https://redis.io/commands#sorted_set\" target=\"_blank\" rel=\"noopener\">commands</a>)</h3><p>Sorted Sets are also collections of unique values. These ones, as the name implies, are ordered. They are ordered by a score, then lexicographically.</p>\n<p>This data type is optimized for quick lookups by score. Getting the highest, lowest, or any range of values in between is extremely fast.</p>\n<p>If you add users to a sorted set along with their high score, you have yourself a perfect leader-board. As new high scores come in, just add them to the set again with their high score and it will re-order your leader-board. Also great for keeping track of the last time users visited and who is active in your application.</p>\n<p>Storing values with the same score causes them to be ordered lexicographically (think alphabetically). This can be useful for things like auto-complete features.</p>\n<p>Many of the sorted set <a href=\"https://redis.io/commands#sorted_set\" target=\"_blank\" rel=\"noopener\">commands</a> are similar to commands for sets, sometimes with an additional score parameter. Also included are commands for managing scores and querying by score.</p>\n<h3 id=\"Geo\"><a href=\"#Geo\" class=\"headerlink\" title=\"Geo\"></a>Geo</h3><p>Redis has several <a href=\"https://redis.io/commands#geo\" target=\"_blank\" rel=\"noopener\">commands</a> for storing, retrieving, and measuring geographic data. This includes radius queries and measuring distances between points.</p>\n<p>Technically geographic data in redis is stored within sorted sets, so this isn’t a truly separate data type. It is more of an extension on top of sorted sets.</p>\n<h3 id=\"Bitmap-and-HyperLogLog\"><a href=\"#Bitmap-and-HyperLogLog\" class=\"headerlink\" title=\"Bitmap and HyperLogLog\"></a>Bitmap and HyperLogLog</h3><p>Like geo, these aren’t completely separate data types. These are commands that allow you to treat string data as if it’s either a bitmap or a hyperloglog.</p>\n<p>Bitmaps are what the bit-level operators I referenced under <code>Strings</code> are for. This data type was the basic building block for reddit’s recent collaborative art project: <a href=\"https://redditblog.com/2017/04/13/how-we-built-rplace/\" target=\"_blank\" rel=\"noopener\">r/Place</a>.</p>\n<p>HyperLogLog allows you to use a constant extremely small amount of space to count almost unlimited unique values with shocking accuracy. Using only ~16KB you could efficiently count the number of unique visitors to your site, even if that number is in the millions.</p>\n<h2 id=\"Transactions-and-Atomicity\"><a href=\"#Transactions-and-Atomicity\" class=\"headerlink\" title=\"Transactions and Atomicity\"></a>Transactions and Atomicity</h2><p>Commands in redis are atomic, meaning you can be sure that as soon as you write a value to redis that value is visible to all clients connected to redis. There is no wait for that value to propagate. Technically memcached is atomic as well, but with redis adding all this functionality beyond memcached it is worth noting and somewhat impressive that all these additional data types and features are also atomic.</p>\n<p>While not quite the same as transactions in relational databases, redis also has <a href=\"https://redis.io/topics/transactions\" target=\"_blank\" rel=\"noopener\">transactions</a> that use “optimistic locking” (<a href=\"https://redis.io/commands/watch\" target=\"_blank\" rel=\"noopener\">WATCH</a>/<a href=\"https://redis.io/commands/multi\" target=\"_blank\" rel=\"noopener\">MULTI</a>/<a href=\"https://redis.io/commands/exec\" target=\"_blank\" rel=\"noopener\">EXEC</a>).</p>\n<h2 id=\"Pipelining\"><a href=\"#Pipelining\" class=\"headerlink\" title=\"Pipelining\"></a>Pipelining</h2><p>Redis provides a feature called ‘<a href=\"https://redis.io/topics/pipelining\" target=\"_blank\" rel=\"noopener\">pipelining</a>‘. If you have many redis commands you want to execute you can use pipelining to send them to redis all-at-once instead of one-at-a-time.</p>\n<p>Normally when you execute a command to either redis or memcached, each command is a separate request/response cycle. With pipelining, redis can buffer several commands and execute them all at once, responding with all of the responses to all of your commands in a single reply.</p>\n<p>This can allow you to achieve even greater throughput on bulk importing or other actions that involve lots of commands.</p>\n<h2 id=\"Pub-Sub\"><a href=\"#Pub-Sub\" class=\"headerlink\" title=\"Pub/Sub\"></a>Pub/Sub</h2><p>Redis has <a href=\"https://redis.io/commands#pubsub\" target=\"_blank\" rel=\"noopener\">commands</a> dedicated to <a href=\"https://redis.io/topics/pubsub\" target=\"_blank\" rel=\"noopener\">pub/sub functionality</a>, allowing redis to act as a high speed message broadcaster. This allows a single client to publish messages to many other clients connected to a channel.</p>\n<p>Redis does pub/sub as well as almost any tool. Dedicated message brokers like <a href=\"https://www.rabbitmq.com/\" target=\"_blank\" rel=\"noopener\">RabbitMQ</a> may have advantages in certain areas, but the fact that the same server can also give you persistent durable queues and other data structures your pub/sub workloads likely need, Redis will often prove to be the best and most simple tool for the job.</p>\n<h2 id=\"Lua-Scripting\"><a href=\"#Lua-Scripting\" class=\"headerlink\" title=\"Lua Scripting\"></a>Lua Scripting</h2><p>You can kind of think of <a href=\"https://redis.io/commands/eval\" target=\"_blank\" rel=\"noopener\">lua scripts</a> like redis’s own SQL or stored procedures. It’s both more and less than that, but the analogy mostly works.</p>\n<p>Maybe you have complex calculations you want redis to perform. Maybe you can’t afford to have your transactions roll back and need guarantees every step of a complex process will happen atomically. These problems and many more can be solved with lua scripting.</p>\n<p>The entire script is executed atomically, so if you can fit your logic into a lua script you can often avoid messing with optimistic locking transactions.</p>\n<h2 id=\"Scaling\"><a href=\"#Scaling\" class=\"headerlink\" title=\"Scaling\"></a>Scaling</h2><p>As mentioned above, redis includes built in support for clustering and is bundled with its own high availability tool called <code>redis-sentinel</code>.</p>\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><p>Without hesitation I would recommend redis over memcached for any new projects, or existing projects that don’t already use memcached.</p>\n<p>The above may sound like I don’t like memcached. On the contrary: it is a powerful, simple, stable, mature, and hardened tool. There are even some use cases where it’s a little faster than redis. I love memcached. I just don’t think it makes much sense for future development.</p>\n<p>Redis does everything memcached does, often better. Any performance advantage for memcached is minor and workload specific. There are also workloads for which redis will be faster, and many more workloads that redis can do which memcached simply can’t. The tiny performance differences seem minor in the face of the giant gulf in functionality and the fact that both tools are so fast and efficient they may very well be the last piece of your infrastructure you’ll ever have to worry about scaling.</p>\n<p>There is only one scenario where memcached makes more sense: where memcached is already in use as a cache. If you are already caching with memcached then keep using it, if it meets your needs. It is likely not worth the effort to move to redis and if you are going to use redis just for caching it may not offer enough benefit to be worth your time. If memcached isn’t meeting your needs, then you should probably move to redis. This is true whether you need to scale beyond memcached or you need additional functionality.</p>"},{"title":"oracle数据库--从备份文件恢复","date":"2019-09-21T13:07:48.000Z","_content":"\nOracle 数据库 .dpdmp 文件导入数据库\n\n\n\n<!--more-->\n\n\n\n使用命令`impdp system/root DIRECTORY=data_dump_dir DUMPFILE=MYDUMPFILE.DPDMP`\n\n其中`system/root`为对应的用户名和密码，后面两个参数依次是`dump`文件所在目录以及文件名。这个操作要求用户~~民~~具有`DBA`权限。\n\n","source":"_posts/technique/oracle数据库-从备份文件恢复.md","raw":"---\ntitle: oracle数据库--从备份文件恢复\ndate: 2019-09-21 21:07:48\ntags: 技术\n---\n\nOracle 数据库 .dpdmp 文件导入数据库\n\n\n\n<!--more-->\n\n\n\n使用命令`impdp system/root DIRECTORY=data_dump_dir DUMPFILE=MYDUMPFILE.DPDMP`\n\n其中`system/root`为对应的用户名和密码，后面两个参数依次是`dump`文件所在目录以及文件名。这个操作要求用户~~民~~具有`DBA`权限。\n\n","slug":"technique/oracle数据库-从备份文件恢复","published":1,"updated":"2020-03-20T07:42:35.329Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw681003s98ki2phn7927","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Oracle 数据库 .dpdmp 文件导入数据库</p>\n<a id=\"more\"></a>\n\n\n\n<p>使用命令<code>impdp system/root DIRECTORY=data_dump_dir DUMPFILE=MYDUMPFILE.DPDMP</code></p>\n<p>其中<code>system/root</code>为对应的用户名和密码，后面两个参数依次是<code>dump</code>文件所在目录以及文件名。这个操作要求用户<del>民</del>具有<code>DBA</code>权限。</p>\n","site":{"data":{}},"excerpt":"<p>Oracle 数据库 .dpdmp 文件导入数据库</p>","more":"<p>使用命令<code>impdp system/root DIRECTORY=data_dump_dir DUMPFILE=MYDUMPFILE.DPDMP</code></p>\n<p>其中<code>system/root</code>为对应的用户名和密码，后面两个参数依次是<code>dump</code>文件所在目录以及文件名。这个操作要求用户<del>民</del>具有<code>DBA</code>权限。</p>"},{"title":"一道笔试题","date":"2019-10-04T07:24:07.000Z","_content":"\n今天按照约定的时间，在电脑上做了一道算法题。现在把题目贴出来。\n\n\n\n<!--more-->\n\n\n\n![题目](/images/笔试题.png)\n\n","source":"_posts/technique/一道笔试题.md","raw":"---\ntitle: 一道笔试题\ndate: 2019-10-04 15:24:07\ntags: 技术\n---\n\n今天按照约定的时间，在电脑上做了一道算法题。现在把题目贴出来。\n\n\n\n<!--more-->\n\n\n\n![题目](/images/笔试题.png)\n\n","slug":"technique/一道笔试题","published":1,"updated":"2020-03-20T07:42:35.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw683003t98kidphc5fkb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天按照约定的时间，在电脑上做了一道算法题。现在把题目贴出来。</p>\n<a id=\"more\"></a>\n\n\n\n<p><img src=\"/images/%E7%AC%94%E8%AF%95%E9%A2%98.png\" alt=\"题目\"></p>\n","site":{"data":{}},"excerpt":"<p>今天按照约定的时间，在电脑上做了一道算法题。现在把题目贴出来。</p>","more":"<p><img src=\"/images/%E7%AC%94%E8%AF%95%E9%A2%98.png\" alt=\"题目\"></p>"},{"title":"利用 Cloudflare 实现端口映射","date":"2019-10-28T13:28:40.000Z","keywords":null,"description":null,"_content":"\n新装的宽带给了公网IP刚好光猫上也有虚拟服务器功能，于是乎想到了要搞一个端口映射的东西。由于使用的是windows 所以自然选择了powershell 作为驱动脚本。上海电信 80、8080、443 端口是完全不给的，其它一率开放。\n\n\n\n<!--more-->\n\n\n\n简单解释一下思路，首先是获取本地的外网 IP 地址，然后把 CF 上的解析记录改一下。在此之前要先在 CF 上设置对应的解析记录。因为这里调用的是 CF 的更新记录 API。 为保证服务的持续有效，设置了一个十分钟的检查，这个可以设置成更短的时间，但是由于DNS生效可能需要一点时间，具体的参数值，自己摸索吧。\n\n```powershell\n$getip = Invoke-WebRequest iiip.co\n$iip = $getip.Content.Trim()\n$apitoken = 'xxxx'\n$zoneId = 'xxxx'\n$url =\"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records?type=A&name=domain.domain.xxx&match=all\"\n$headers = @{\"Authorization\"=\"bearer \"+$apitoken}\n$contentype = \"application/json\"\nwhile(1){\n    $out = Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype\n    $dataa = $out.Content | ConvertFrom-Json\n    $result = $dataa.result | ConvertTo-Json | ConvertFrom-Json\n    $JSON = @{\n            type = \"A\"\n            name = \"domain.domain.xxx\"\n            content = $iip\n        } | ConvertTo-Json\n\n    if($iip -ne $result.content){\n        echo \"they are not equal\"\n        $posturl = \"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records/\"+$result.id\n        $test = Invoke-WebRequest -Uri $posturl -Headers $headers -ContentType $contentype -Method Put -Body $JSON\n        Write-Host \"commit success!\"\n    }else{ \n        Write-Host \"step into sleep\"\n        \n         Start-Sleep -s 600 #这个是暂停时间\n    }\n}\n\n```\n\n------\n\n**更新：**\n\n> 今天把上面的循环语句删掉了。改成了`windows`系统自带的定时任务功能。真香。\n\n```\n$getip = Invoke-WebRequest iiip.co\n$iip = $getip.Content.Trim()\n$apitoken = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$zoneId = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$url =\"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records?type=A&name=yourdomain&match=all\"\n$headers = @{\"Authorization\"=\"bearer \"+$apitoken}\n$contentype = \"application/json\"\n$out = Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype\n$dataa = $out.Content | ConvertFrom-Json\n$result = $dataa.result | ConvertTo-Json | ConvertFrom-Json\n$JSON = @{\n        type = \"A\"\n        name = \"yourdomain\"\n        content = $iip\n      } | ConvertTo-Json\n\nif($iip -ne $result.content){\n   echo \"they are not equal\"\n   $posturl = \"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records/\"+$result.id\n   $test = Invoke-WebRequest -Uri $posturl -Headers $headers -ContentType $contentype -Method Put -Body $JSON\n   Write-Host \"commit success!\"\n }else{ \n   Write-Host \"step into sleep\"\n   Start-Sleep -s 600 #这个是暂停时间\n    }\n\n```\n\n\n\n<hr/>\n\n##### 更新：\n\n> 2020/01/21 API更新强制加入了ttl\n\n```powershell\n$getip = Invoke-WebRequest iiip.co\n$iip = $getip.Content.Trim()\n$apitoken = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$zoneId = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$url =\"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records?type=A&name=yourdomain&match=all\"\n$headers = @{\"Authorization\"=\"Bearer \"+$apitoken}\n$tt = $headers | ConvertTo-Json\nWrite-Host $tt\n$contentype = \"application/json\"\n$out = Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype\nWrite-Host $out\n$dataa = $out.Content | ConvertFrom-Json\n$result = $dataa.result | ConvertTo-Json | ConvertFrom-Json\n$JSON = @{\n        type = \"A\"\n        name = \"yourdomain\"\n        content = $iip\n        ttl = 1\n      } | ConvertTo-Json\n\nif($iip -ne $result.content){\n   echo \"they are not equal\"\n   $posturl = \"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records/\"+$result.id\n   $test = Invoke-WebRequest -Uri $posturl -Body $JSON -ContentType $contentype -Headers $headers -Method PUT\n   Write-Host \"it's hurt\"\n }\n\n```\n\n","source":"_posts/technique/利用Cloudflare实现端口映射.md","raw":"---\ntitle: 利用 Cloudflare 实现端口映射\ndate: 2019-10-28 21:28:40\ntags: 技术\nkeywords:\ndescription:\n---\n\n新装的宽带给了公网IP刚好光猫上也有虚拟服务器功能，于是乎想到了要搞一个端口映射的东西。由于使用的是windows 所以自然选择了powershell 作为驱动脚本。上海电信 80、8080、443 端口是完全不给的，其它一率开放。\n\n\n\n<!--more-->\n\n\n\n简单解释一下思路，首先是获取本地的外网 IP 地址，然后把 CF 上的解析记录改一下。在此之前要先在 CF 上设置对应的解析记录。因为这里调用的是 CF 的更新记录 API。 为保证服务的持续有效，设置了一个十分钟的检查，这个可以设置成更短的时间，但是由于DNS生效可能需要一点时间，具体的参数值，自己摸索吧。\n\n```powershell\n$getip = Invoke-WebRequest iiip.co\n$iip = $getip.Content.Trim()\n$apitoken = 'xxxx'\n$zoneId = 'xxxx'\n$url =\"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records?type=A&name=domain.domain.xxx&match=all\"\n$headers = @{\"Authorization\"=\"bearer \"+$apitoken}\n$contentype = \"application/json\"\nwhile(1){\n    $out = Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype\n    $dataa = $out.Content | ConvertFrom-Json\n    $result = $dataa.result | ConvertTo-Json | ConvertFrom-Json\n    $JSON = @{\n            type = \"A\"\n            name = \"domain.domain.xxx\"\n            content = $iip\n        } | ConvertTo-Json\n\n    if($iip -ne $result.content){\n        echo \"they are not equal\"\n        $posturl = \"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records/\"+$result.id\n        $test = Invoke-WebRequest -Uri $posturl -Headers $headers -ContentType $contentype -Method Put -Body $JSON\n        Write-Host \"commit success!\"\n    }else{ \n        Write-Host \"step into sleep\"\n        \n         Start-Sleep -s 600 #这个是暂停时间\n    }\n}\n\n```\n\n------\n\n**更新：**\n\n> 今天把上面的循环语句删掉了。改成了`windows`系统自带的定时任务功能。真香。\n\n```\n$getip = Invoke-WebRequest iiip.co\n$iip = $getip.Content.Trim()\n$apitoken = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$zoneId = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$url =\"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records?type=A&name=yourdomain&match=all\"\n$headers = @{\"Authorization\"=\"bearer \"+$apitoken}\n$contentype = \"application/json\"\n$out = Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype\n$dataa = $out.Content | ConvertFrom-Json\n$result = $dataa.result | ConvertTo-Json | ConvertFrom-Json\n$JSON = @{\n        type = \"A\"\n        name = \"yourdomain\"\n        content = $iip\n      } | ConvertTo-Json\n\nif($iip -ne $result.content){\n   echo \"they are not equal\"\n   $posturl = \"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records/\"+$result.id\n   $test = Invoke-WebRequest -Uri $posturl -Headers $headers -ContentType $contentype -Method Put -Body $JSON\n   Write-Host \"commit success!\"\n }else{ \n   Write-Host \"step into sleep\"\n   Start-Sleep -s 600 #这个是暂停时间\n    }\n\n```\n\n\n\n<hr/>\n\n##### 更新：\n\n> 2020/01/21 API更新强制加入了ttl\n\n```powershell\n$getip = Invoke-WebRequest iiip.co\n$iip = $getip.Content.Trim()\n$apitoken = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$zoneId = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n$url =\"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records?type=A&name=yourdomain&match=all\"\n$headers = @{\"Authorization\"=\"Bearer \"+$apitoken}\n$tt = $headers | ConvertTo-Json\nWrite-Host $tt\n$contentype = \"application/json\"\n$out = Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype\nWrite-Host $out\n$dataa = $out.Content | ConvertFrom-Json\n$result = $dataa.result | ConvertTo-Json | ConvertFrom-Json\n$JSON = @{\n        type = \"A\"\n        name = \"yourdomain\"\n        content = $iip\n        ttl = 1\n      } | ConvertTo-Json\n\nif($iip -ne $result.content){\n   echo \"they are not equal\"\n   $posturl = \"https://api.cloudflare.com/client/v4/zones/\"+$zoneId+\"/dns_records/\"+$result.id\n   $test = Invoke-WebRequest -Uri $posturl -Body $JSON -ContentType $contentype -Headers $headers -Method PUT\n   Write-Host \"it's hurt\"\n }\n\n```\n\n","slug":"technique/利用Cloudflare实现端口映射","published":1,"updated":"2020-03-20T07:42:35.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw685003w98kigh602ri9","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>新装的宽带给了公网IP刚好光猫上也有虚拟服务器功能，于是乎想到了要搞一个端口映射的东西。由于使用的是windows 所以自然选择了powershell 作为驱动脚本。上海电信 80、8080、443 端口是完全不给的，其它一率开放。</p>\n<a id=\"more\"></a>\n\n\n\n<p>简单解释一下思路，首先是获取本地的外网 IP 地址，然后把 CF 上的解析记录改一下。在此之前要先在 CF 上设置对应的解析记录。因为这里调用的是 CF 的更新记录 API。 为保证服务的持续有效，设置了一个十分钟的检查，这个可以设置成更短的时间，但是由于DNS生效可能需要一点时间，具体的参数值，自己摸索吧。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$getip</span> = <span class=\"built_in\">Invoke-WebRequest</span> iiip.co</span><br><span class=\"line\"><span class=\"variable\">$iip</span> = <span class=\"variable\">$getip</span>.Content.Trim()</span><br><span class=\"line\"><span class=\"variable\">$apitoken</span> = <span class=\"string\">'xxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$zoneId</span> = <span class=\"string\">'xxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$url</span> =<span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records?type=A&amp;name=domain.domain.xxx&amp;match=all\"</span></span><br><span class=\"line\"><span class=\"variable\">$headers</span> = @&#123;<span class=\"string\">\"Authorization\"</span>=<span class=\"string\">\"bearer \"</span>+<span class=\"variable\">$apitoken</span>&#125;</span><br><span class=\"line\"><span class=\"variable\">$contentype</span> = <span class=\"string\">\"application/json\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$out</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$url</span> -Headers <span class=\"variable\">$headers</span> -ContentType <span class=\"variable\">$contentype</span></span><br><span class=\"line\">    <span class=\"variable\">$dataa</span> = <span class=\"variable\">$out</span>.Content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"variable\">$result</span> = <span class=\"variable\">$dataa</span>.result | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"variable\">$JSON</span> = @&#123;</span><br><span class=\"line\">            type = <span class=\"string\">\"A\"</span></span><br><span class=\"line\">            name = <span class=\"string\">\"domain.domain.xxx\"</span></span><br><span class=\"line\">            content = <span class=\"variable\">$iip</span></span><br><span class=\"line\">        &#125; | <span class=\"built_in\">ConvertTo-Json</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$iip</span> <span class=\"nomarkup\">-ne</span> <span class=\"variable\">$result</span>.content)&#123;</span><br><span class=\"line\">        echo <span class=\"string\">\"they are not equal\"</span></span><br><span class=\"line\">        <span class=\"variable\">$posturl</span> = <span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records/\"</span>+<span class=\"variable\">$result</span>.id</span><br><span class=\"line\">        <span class=\"variable\">$test</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$posturl</span> -Headers <span class=\"variable\">$headers</span> -ContentType <span class=\"variable\">$contentype</span> -Method Put -Body <span class=\"variable\">$JSON</span></span><br><span class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"commit success!\"</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"step into sleep\"</span></span><br><span class=\"line\">        </span><br><span class=\"line\">         <span class=\"built_in\">Start-Sleep</span> -s <span class=\"number\">600</span> <span class=\"comment\">#这个是暂停时间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><strong>更新：</strong></p>\n<blockquote>\n<p>今天把上面的循环语句删掉了。改成了<code>windows</code>系统自带的定时任务功能。真香。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$getip &#x3D; Invoke-WebRequest iiip.co</span><br><span class=\"line\">$iip &#x3D; $getip.Content.Trim()</span><br><span class=\"line\">$apitoken &#x3D; &#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><br><span class=\"line\">$zoneId &#x3D; &#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><br><span class=\"line\">$url &#x3D;&quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;&quot;+$zoneId+&quot;&#x2F;dns_records?type&#x3D;A&amp;name&#x3D;yourdomain&amp;match&#x3D;all&quot;</span><br><span class=\"line\">$headers &#x3D; @&#123;&quot;Authorization&quot;&#x3D;&quot;bearer &quot;+$apitoken&#125;</span><br><span class=\"line\">$contentype &#x3D; &quot;application&#x2F;json&quot;</span><br><span class=\"line\">$out &#x3D; Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype</span><br><span class=\"line\">$dataa &#x3D; $out.Content | ConvertFrom-Json</span><br><span class=\"line\">$result &#x3D; $dataa.result | ConvertTo-Json | ConvertFrom-Json</span><br><span class=\"line\">$JSON &#x3D; @&#123;</span><br><span class=\"line\">        type &#x3D; &quot;A&quot;</span><br><span class=\"line\">        name &#x3D; &quot;yourdomain&quot;</span><br><span class=\"line\">        content &#x3D; $iip</span><br><span class=\"line\">      &#125; | ConvertTo-Json</span><br><span class=\"line\"></span><br><span class=\"line\">if($iip -ne $result.content)&#123;</span><br><span class=\"line\">   echo &quot;they are not equal&quot;</span><br><span class=\"line\">   $posturl &#x3D; &quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;&quot;+$zoneId+&quot;&#x2F;dns_records&#x2F;&quot;+$result.id</span><br><span class=\"line\">   $test &#x3D; Invoke-WebRequest -Uri $posturl -Headers $headers -ContentType $contentype -Method Put -Body $JSON</span><br><span class=\"line\">   Write-Host &quot;commit success!&quot;</span><br><span class=\"line\"> &#125;else&#123; </span><br><span class=\"line\">   Write-Host &quot;step into sleep&quot;</span><br><span class=\"line\">   Start-Sleep -s 600 #这个是暂停时间</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr/>\n\n<h5 id=\"更新：\"><a href=\"#更新：\" class=\"headerlink\" title=\"更新：\"></a>更新：</h5><blockquote>\n<p>2020/01/21 API更新强制加入了ttl</p>\n</blockquote>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$getip</span> = <span class=\"built_in\">Invoke-WebRequest</span> iiip.co</span><br><span class=\"line\"><span class=\"variable\">$iip</span> = <span class=\"variable\">$getip</span>.Content.Trim()</span><br><span class=\"line\"><span class=\"variable\">$apitoken</span> = <span class=\"string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$zoneId</span> = <span class=\"string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$url</span> =<span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records?type=A&amp;name=yourdomain&amp;match=all\"</span></span><br><span class=\"line\"><span class=\"variable\">$headers</span> = @&#123;<span class=\"string\">\"Authorization\"</span>=<span class=\"string\">\"Bearer \"</span>+<span class=\"variable\">$apitoken</span>&#125;</span><br><span class=\"line\"><span class=\"variable\">$tt</span> = <span class=\"variable\">$headers</span> | <span class=\"built_in\">ConvertTo-Json</span></span><br><span class=\"line\"><span class=\"built_in\">Write-Host</span> <span class=\"variable\">$tt</span></span><br><span class=\"line\"><span class=\"variable\">$contentype</span> = <span class=\"string\">\"application/json\"</span></span><br><span class=\"line\"><span class=\"variable\">$out</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$url</span> -Headers <span class=\"variable\">$headers</span> -ContentType <span class=\"variable\">$contentype</span></span><br><span class=\"line\"><span class=\"built_in\">Write-Host</span> <span class=\"variable\">$out</span></span><br><span class=\"line\"><span class=\"variable\">$dataa</span> = <span class=\"variable\">$out</span>.Content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$dataa</span>.result | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\"><span class=\"variable\">$JSON</span> = @&#123;</span><br><span class=\"line\">        type = <span class=\"string\">\"A\"</span></span><br><span class=\"line\">        name = <span class=\"string\">\"yourdomain\"</span></span><br><span class=\"line\">        content = <span class=\"variable\">$iip</span></span><br><span class=\"line\">        ttl = <span class=\"number\">1</span></span><br><span class=\"line\">      &#125; | <span class=\"built_in\">ConvertTo-Json</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$iip</span> <span class=\"nomarkup\">-ne</span> <span class=\"variable\">$result</span>.content)&#123;</span><br><span class=\"line\">   echo <span class=\"string\">\"they are not equal\"</span></span><br><span class=\"line\">   <span class=\"variable\">$posturl</span> = <span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records/\"</span>+<span class=\"variable\">$result</span>.id</span><br><span class=\"line\">   <span class=\"variable\">$test</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$posturl</span> -Body <span class=\"variable\">$JSON</span> -ContentType <span class=\"variable\">$contentype</span> -Headers <span class=\"variable\">$headers</span> -Method PUT</span><br><span class=\"line\">   <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"it's hurt\"</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>新装的宽带给了公网IP刚好光猫上也有虚拟服务器功能，于是乎想到了要搞一个端口映射的东西。由于使用的是windows 所以自然选择了powershell 作为驱动脚本。上海电信 80、8080、443 端口是完全不给的，其它一率开放。</p>","more":"<p>简单解释一下思路，首先是获取本地的外网 IP 地址，然后把 CF 上的解析记录改一下。在此之前要先在 CF 上设置对应的解析记录。因为这里调用的是 CF 的更新记录 API。 为保证服务的持续有效，设置了一个十分钟的检查，这个可以设置成更短的时间，但是由于DNS生效可能需要一点时间，具体的参数值，自己摸索吧。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$getip</span> = <span class=\"built_in\">Invoke-WebRequest</span> iiip.co</span><br><span class=\"line\"><span class=\"variable\">$iip</span> = <span class=\"variable\">$getip</span>.Content.Trim()</span><br><span class=\"line\"><span class=\"variable\">$apitoken</span> = <span class=\"string\">'xxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$zoneId</span> = <span class=\"string\">'xxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$url</span> =<span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records?type=A&amp;name=domain.domain.xxx&amp;match=all\"</span></span><br><span class=\"line\"><span class=\"variable\">$headers</span> = @&#123;<span class=\"string\">\"Authorization\"</span>=<span class=\"string\">\"bearer \"</span>+<span class=\"variable\">$apitoken</span>&#125;</span><br><span class=\"line\"><span class=\"variable\">$contentype</span> = <span class=\"string\">\"application/json\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$out</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$url</span> -Headers <span class=\"variable\">$headers</span> -ContentType <span class=\"variable\">$contentype</span></span><br><span class=\"line\">    <span class=\"variable\">$dataa</span> = <span class=\"variable\">$out</span>.Content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"variable\">$result</span> = <span class=\"variable\">$dataa</span>.result | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"variable\">$JSON</span> = @&#123;</span><br><span class=\"line\">            type = <span class=\"string\">\"A\"</span></span><br><span class=\"line\">            name = <span class=\"string\">\"domain.domain.xxx\"</span></span><br><span class=\"line\">            content = <span class=\"variable\">$iip</span></span><br><span class=\"line\">        &#125; | <span class=\"built_in\">ConvertTo-Json</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$iip</span> <span class=\"nomarkup\">-ne</span> <span class=\"variable\">$result</span>.content)&#123;</span><br><span class=\"line\">        echo <span class=\"string\">\"they are not equal\"</span></span><br><span class=\"line\">        <span class=\"variable\">$posturl</span> = <span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records/\"</span>+<span class=\"variable\">$result</span>.id</span><br><span class=\"line\">        <span class=\"variable\">$test</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$posturl</span> -Headers <span class=\"variable\">$headers</span> -ContentType <span class=\"variable\">$contentype</span> -Method Put -Body <span class=\"variable\">$JSON</span></span><br><span class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"commit success!\"</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"step into sleep\"</span></span><br><span class=\"line\">        </span><br><span class=\"line\">         <span class=\"built_in\">Start-Sleep</span> -s <span class=\"number\">600</span> <span class=\"comment\">#这个是暂停时间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><strong>更新：</strong></p>\n<blockquote>\n<p>今天把上面的循环语句删掉了。改成了<code>windows</code>系统自带的定时任务功能。真香。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$getip &#x3D; Invoke-WebRequest iiip.co</span><br><span class=\"line\">$iip &#x3D; $getip.Content.Trim()</span><br><span class=\"line\">$apitoken &#x3D; &#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><br><span class=\"line\">$zoneId &#x3D; &#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><br><span class=\"line\">$url &#x3D;&quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;&quot;+$zoneId+&quot;&#x2F;dns_records?type&#x3D;A&amp;name&#x3D;yourdomain&amp;match&#x3D;all&quot;</span><br><span class=\"line\">$headers &#x3D; @&#123;&quot;Authorization&quot;&#x3D;&quot;bearer &quot;+$apitoken&#125;</span><br><span class=\"line\">$contentype &#x3D; &quot;application&#x2F;json&quot;</span><br><span class=\"line\">$out &#x3D; Invoke-WebRequest -Uri $url -Headers $headers -ContentType $contentype</span><br><span class=\"line\">$dataa &#x3D; $out.Content | ConvertFrom-Json</span><br><span class=\"line\">$result &#x3D; $dataa.result | ConvertTo-Json | ConvertFrom-Json</span><br><span class=\"line\">$JSON &#x3D; @&#123;</span><br><span class=\"line\">        type &#x3D; &quot;A&quot;</span><br><span class=\"line\">        name &#x3D; &quot;yourdomain&quot;</span><br><span class=\"line\">        content &#x3D; $iip</span><br><span class=\"line\">      &#125; | ConvertTo-Json</span><br><span class=\"line\"></span><br><span class=\"line\">if($iip -ne $result.content)&#123;</span><br><span class=\"line\">   echo &quot;they are not equal&quot;</span><br><span class=\"line\">   $posturl &#x3D; &quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;&quot;+$zoneId+&quot;&#x2F;dns_records&#x2F;&quot;+$result.id</span><br><span class=\"line\">   $test &#x3D; Invoke-WebRequest -Uri $posturl -Headers $headers -ContentType $contentype -Method Put -Body $JSON</span><br><span class=\"line\">   Write-Host &quot;commit success!&quot;</span><br><span class=\"line\"> &#125;else&#123; </span><br><span class=\"line\">   Write-Host &quot;step into sleep&quot;</span><br><span class=\"line\">   Start-Sleep -s 600 #这个是暂停时间</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr/>\n\n<h5 id=\"更新：\"><a href=\"#更新：\" class=\"headerlink\" title=\"更新：\"></a>更新：</h5><blockquote>\n<p>2020/01/21 API更新强制加入了ttl</p>\n</blockquote>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$getip</span> = <span class=\"built_in\">Invoke-WebRequest</span> iiip.co</span><br><span class=\"line\"><span class=\"variable\">$iip</span> = <span class=\"variable\">$getip</span>.Content.Trim()</span><br><span class=\"line\"><span class=\"variable\">$apitoken</span> = <span class=\"string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$zoneId</span> = <span class=\"string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class=\"line\"><span class=\"variable\">$url</span> =<span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records?type=A&amp;name=yourdomain&amp;match=all\"</span></span><br><span class=\"line\"><span class=\"variable\">$headers</span> = @&#123;<span class=\"string\">\"Authorization\"</span>=<span class=\"string\">\"Bearer \"</span>+<span class=\"variable\">$apitoken</span>&#125;</span><br><span class=\"line\"><span class=\"variable\">$tt</span> = <span class=\"variable\">$headers</span> | <span class=\"built_in\">ConvertTo-Json</span></span><br><span class=\"line\"><span class=\"built_in\">Write-Host</span> <span class=\"variable\">$tt</span></span><br><span class=\"line\"><span class=\"variable\">$contentype</span> = <span class=\"string\">\"application/json\"</span></span><br><span class=\"line\"><span class=\"variable\">$out</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$url</span> -Headers <span class=\"variable\">$headers</span> -ContentType <span class=\"variable\">$contentype</span></span><br><span class=\"line\"><span class=\"built_in\">Write-Host</span> <span class=\"variable\">$out</span></span><br><span class=\"line\"><span class=\"variable\">$dataa</span> = <span class=\"variable\">$out</span>.Content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$dataa</span>.result | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\"><span class=\"variable\">$JSON</span> = @&#123;</span><br><span class=\"line\">        type = <span class=\"string\">\"A\"</span></span><br><span class=\"line\">        name = <span class=\"string\">\"yourdomain\"</span></span><br><span class=\"line\">        content = <span class=\"variable\">$iip</span></span><br><span class=\"line\">        ttl = <span class=\"number\">1</span></span><br><span class=\"line\">      &#125; | <span class=\"built_in\">ConvertTo-Json</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$iip</span> <span class=\"nomarkup\">-ne</span> <span class=\"variable\">$result</span>.content)&#123;</span><br><span class=\"line\">   echo <span class=\"string\">\"they are not equal\"</span></span><br><span class=\"line\">   <span class=\"variable\">$posturl</span> = <span class=\"string\">\"https://api.cloudflare.com/client/v4/zones/\"</span>+<span class=\"variable\">$zoneId</span>+<span class=\"string\">\"/dns_records/\"</span>+<span class=\"variable\">$result</span>.id</span><br><span class=\"line\">   <span class=\"variable\">$test</span> = <span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"variable\">$posturl</span> -Body <span class=\"variable\">$JSON</span> -ContentType <span class=\"variable\">$contentype</span> -Headers <span class=\"variable\">$headers</span> -Method PUT</span><br><span class=\"line\">   <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"it's hurt\"</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>"},{"title":"又一个大坑","date":"2019-08-27T00:31:53.000Z","_content":"\n一不小心又进坑里了，这次的坑我是真的血亏。\n\n\n\n<!--more-->\n\n\n\n丢的文章不说还把环境弄坏了。目前只有两篇文章在列，也不想去恢复了。丢了就丢了吧。以后应该不会再去这么搞了。太麻烦了，以后长个心眼，多多备份吧。唯一的出路，哈哈哈。","source":"_posts/technique/又一个大坑.md","raw":"---\ntitle: 又一个大坑\ndate: 2019-08-27 08:31:53\ntags: 坑\n---\n\n一不小心又进坑里了，这次的坑我是真的血亏。\n\n\n\n<!--more-->\n\n\n\n丢的文章不说还把环境弄坏了。目前只有两篇文章在列，也不想去恢复了。丢了就丢了吧。以后应该不会再去这么搞了。太麻烦了，以后长个心眼，多多备份吧。唯一的出路，哈哈哈。","slug":"technique/又一个大坑","published":1,"updated":"2020-03-20T07:42:35.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw686003x98ki4vrihsbf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>一不小心又进坑里了，这次的坑我是真的血亏。</p>\n<a id=\"more\"></a>\n\n\n\n<p>丢的文章不说还把环境弄坏了。目前只有两篇文章在列，也不想去恢复了。丢了就丢了吧。以后应该不会再去这么搞了。太麻烦了，以后长个心眼，多多备份吧。唯一的出路，哈哈哈。</p>\n","site":{"data":{}},"excerpt":"<p>一不小心又进坑里了，这次的坑我是真的血亏。</p>","more":"<p>丢的文章不说还把环境弄坏了。目前只有两篇文章在列，也不想去恢复了。丢了就丢了吧。以后应该不会再去这么搞了。太麻烦了，以后长个心眼，多多备份吧。唯一的出路，哈哈哈。</p>"},{"title":"如何实现SS客户端自动切换服务器","date":"2019-11-15T02:10:39.000Z","keywords":null,"description":null,"_content":"\n如何实现 `Shadowsocks` 客户端自动切换服务器呢？这里的自动切换仅仅是切换，没有附加条件的切换。根据其配置文件可以找到入手点。\n\n\n\n<!--more-->\n\n\n\n其配置文件内决定当前活动服务器的是一个`index`参数。这个参数就是所有配置信息在配置文件中的顺序，所以，想办法自动改变这个参数就可以实现自动切换的目的。\n\n**计划**\n\n- [x] Windows 下使用 Powershell 来解决\n- [ ] Windows 下使用 Python 来解决\n\n完成后相应的代码会贴在下面\n\n<hr>\n\n##### PowerShell 版\n\n```powershell\n\n#获取json文件\nwhile(1){\n    $pattern = \"\\d{1,3}.{1,3}\\d.{1,3}\\d{1,3}\"\n    $t=(Get-Random -Minimum 500 -Maximum 600)\n    $json = (Get-Content -Raw -Path \"X:\\XXX\\XXX\\XXX\\gui-config.json\" | ConvertFrom-Json)\n    Write-Host \"Start! Refresh in $t seconds...\" ( Get-Date)\n    Write-Host \"当前活动服务器: \" $json.configs.Get($json.index).server \"序号：\"$json.configs.length\"-\"$json.index\n    Start-Sleep -Seconds $t\n    $json.index+=1\n    $i = $json.index\n    #判断当前index 是否在正确范围内，如果在则进行下面的操作，目前存在的问题是不知道第3个服务器状态是否可用\n    if($i -gt 1 -and $i -lt $json.configs.length) {\n          if(!(Test-Connection $json.configs.Get($json.index).server -Quiet)){\n        do{\n            $json.index+=1\n\n        }while(Test-Connection $json.configs.Get($json.index).server -Quiet)\n    } \n    }else{\n\n        $json.index = 2\n    }\n    ($json | ConvertTo-Json | Out-File -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n    Write-Host \"停止 XXX\"\n    Stop-Process -Name Shadowsocks\n    Write-Host \"停止 XXX\"\n    \n    $target = $json.configs.Get($json.index).server\n    if($target -match $pattern){\n        $ip=$target\n    }else{\n         $ip=([System.Net.Dns]::GetHostAddresses($target) | ConvertTo-Json | ConvertFrom-Json).IPAddressToString\n    }\n    $r= (Invoke-WebRequest http://ip.taobao.com/service/getIpInfo.php?ip=$ip).content | ConvertFrom-Json\n    Write-Host $r.data.country $r.data.region\n    Write-Host \"启动 XXX\"\n    Start-Process -FilePath \"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"\n \n}\n```\n\n<hr/>\n更改了检测方式，每次循环都先把 index+1 之再进行可用性判断。\n\n```powershell\n\n#Get json File\nwhile(1){\n    $pattern = \"\\d{1,3}.{1,3}\\d.{1,3}\\d{1,3}\"\n    $t=(Get-Random -Minimum 120 -Maximum 300)\n    $json = (Get-Content -Raw -Path \"X:\\XXX\\XXX\\XXX\\\\gui-config.json\" | ConvertFrom-Json)\n    Stop-Process -Name Shadowsocks\n    $json.index+=1\n    $i = $json.index\n    if($i -gt 0 -and $i -lt $json.configs.length) {\n        ($json | ConvertTo-Json -Compress | Out-File -Encoding utf8 -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n        Start-Process -FilePath \"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"\n        do{\n            $json.index+=1\n            Stop-Process -Name Shadowsocks\n            ($json | ConvertTo-Json -Compress | Out-File -Encoding utf8 -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n            Start-Process -FilePath \"X:\\XXX\\XXX\\XXX\\\\Shadowsocks.exe\"\n            try{\n            $statusCode = (Invoke-WebRequest -Uri \"http://www.t66y.com\" -Proxy \"http://127.0.0.1:1080\" -TimeoutSec 5).statusCode}\n            catch{\n            $statusCode = 500            \n         }\n        }while($statusCode -ne 200)\n    \n    }else{\n        $json.index = 0\n    }\n       <#检测主逻辑，简单判断IP地址是否可以ping通，但是不对 SS 能否正常连接做检测所以，以下方法不好用。    \n    \n              if(!(Test-Connection $json.configs.Get($json.index).server -Quiet)){\n            do{\n                $json.index+=1\n            }while(Test-Connection $json.configs.Get($json.index).server -Quiet)\n        } \n        }else{\n            $json.index = 0\n        }\n       #>  \n\n    ($json | ConvertTo-Json -Compress | Out-File -Encoding utf8 -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n  \n    $target = $json.configs.Get($json.index).server\n    #IP地址检测\n    if($target -match $pattern){\n        $ip=$target\n    }else{\n         $ip=([System.Net.Dns]::GetHostAddresses($target) | ConvertTo-Json | ConvertFrom-Json).IPAddressToString\n    }\n    $r= (Invoke-WebRequest http://ip.taobao.com/service/getIpInfo.php?ip=$ip).content | ConvertFrom-Json\n    Write-Host \"==>Current Location ==>\"$r.data.country  $r.data.region\n\n    Write-Host \"==>开始! Refresh in $t seconds...\" ( Get-Date)\n    Write-Host \"==>Current Server: \" $json.configs.Get($json.index).server \"Index: \"$json.configs.length\"-\"$json.index\n    Start-Sleep -Seconds $t\n}\n```\n\n\n\n\n\n\n\n<hr>\n\n##### 更新：\n\n​\t11/16  加入IP地址属地查询并印到控制台。\n\n​\t11/17 加入 SS 连通性检测，保证每一次连接都有效。","source":"_posts/technique/如何实现SS客户端自动切换服务器.md","raw":"---\ntitle: 如何实现SS客户端自动切换服务器\ndate: 2019-11-15 10:10:39\ntags: 技术\nkeywords:\ndescription:\n---\n\n如何实现 `Shadowsocks` 客户端自动切换服务器呢？这里的自动切换仅仅是切换，没有附加条件的切换。根据其配置文件可以找到入手点。\n\n\n\n<!--more-->\n\n\n\n其配置文件内决定当前活动服务器的是一个`index`参数。这个参数就是所有配置信息在配置文件中的顺序，所以，想办法自动改变这个参数就可以实现自动切换的目的。\n\n**计划**\n\n- [x] Windows 下使用 Powershell 来解决\n- [ ] Windows 下使用 Python 来解决\n\n完成后相应的代码会贴在下面\n\n<hr>\n\n##### PowerShell 版\n\n```powershell\n\n#获取json文件\nwhile(1){\n    $pattern = \"\\d{1,3}.{1,3}\\d.{1,3}\\d{1,3}\"\n    $t=(Get-Random -Minimum 500 -Maximum 600)\n    $json = (Get-Content -Raw -Path \"X:\\XXX\\XXX\\XXX\\gui-config.json\" | ConvertFrom-Json)\n    Write-Host \"Start! Refresh in $t seconds...\" ( Get-Date)\n    Write-Host \"当前活动服务器: \" $json.configs.Get($json.index).server \"序号：\"$json.configs.length\"-\"$json.index\n    Start-Sleep -Seconds $t\n    $json.index+=1\n    $i = $json.index\n    #判断当前index 是否在正确范围内，如果在则进行下面的操作，目前存在的问题是不知道第3个服务器状态是否可用\n    if($i -gt 1 -and $i -lt $json.configs.length) {\n          if(!(Test-Connection $json.configs.Get($json.index).server -Quiet)){\n        do{\n            $json.index+=1\n\n        }while(Test-Connection $json.configs.Get($json.index).server -Quiet)\n    } \n    }else{\n\n        $json.index = 2\n    }\n    ($json | ConvertTo-Json | Out-File -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n    Write-Host \"停止 XXX\"\n    Stop-Process -Name Shadowsocks\n    Write-Host \"停止 XXX\"\n    \n    $target = $json.configs.Get($json.index).server\n    if($target -match $pattern){\n        $ip=$target\n    }else{\n         $ip=([System.Net.Dns]::GetHostAddresses($target) | ConvertTo-Json | ConvertFrom-Json).IPAddressToString\n    }\n    $r= (Invoke-WebRequest http://ip.taobao.com/service/getIpInfo.php?ip=$ip).content | ConvertFrom-Json\n    Write-Host $r.data.country $r.data.region\n    Write-Host \"启动 XXX\"\n    Start-Process -FilePath \"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"\n \n}\n```\n\n<hr/>\n更改了检测方式，每次循环都先把 index+1 之再进行可用性判断。\n\n```powershell\n\n#Get json File\nwhile(1){\n    $pattern = \"\\d{1,3}.{1,3}\\d.{1,3}\\d{1,3}\"\n    $t=(Get-Random -Minimum 120 -Maximum 300)\n    $json = (Get-Content -Raw -Path \"X:\\XXX\\XXX\\XXX\\\\gui-config.json\" | ConvertFrom-Json)\n    Stop-Process -Name Shadowsocks\n    $json.index+=1\n    $i = $json.index\n    if($i -gt 0 -and $i -lt $json.configs.length) {\n        ($json | ConvertTo-Json -Compress | Out-File -Encoding utf8 -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n        Start-Process -FilePath \"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"\n        do{\n            $json.index+=1\n            Stop-Process -Name Shadowsocks\n            ($json | ConvertTo-Json -Compress | Out-File -Encoding utf8 -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n            Start-Process -FilePath \"X:\\XXX\\XXX\\XXX\\\\Shadowsocks.exe\"\n            try{\n            $statusCode = (Invoke-WebRequest -Uri \"http://www.t66y.com\" -Proxy \"http://127.0.0.1:1080\" -TimeoutSec 5).statusCode}\n            catch{\n            $statusCode = 500            \n         }\n        }while($statusCode -ne 200)\n    \n    }else{\n        $json.index = 0\n    }\n       <#检测主逻辑，简单判断IP地址是否可以ping通，但是不对 SS 能否正常连接做检测所以，以下方法不好用。    \n    \n              if(!(Test-Connection $json.configs.Get($json.index).server -Quiet)){\n            do{\n                $json.index+=1\n            }while(Test-Connection $json.configs.Get($json.index).server -Quiet)\n        } \n        }else{\n            $json.index = 0\n        }\n       #>  \n\n    ($json | ConvertTo-Json -Compress | Out-File -Encoding utf8 -FilePath \"X:\\XXX\\XXX\\XXX\\gui-config.json\")\n  \n    $target = $json.configs.Get($json.index).server\n    #IP地址检测\n    if($target -match $pattern){\n        $ip=$target\n    }else{\n         $ip=([System.Net.Dns]::GetHostAddresses($target) | ConvertTo-Json | ConvertFrom-Json).IPAddressToString\n    }\n    $r= (Invoke-WebRequest http://ip.taobao.com/service/getIpInfo.php?ip=$ip).content | ConvertFrom-Json\n    Write-Host \"==>Current Location ==>\"$r.data.country  $r.data.region\n\n    Write-Host \"==>开始! Refresh in $t seconds...\" ( Get-Date)\n    Write-Host \"==>Current Server: \" $json.configs.Get($json.index).server \"Index: \"$json.configs.length\"-\"$json.index\n    Start-Sleep -Seconds $t\n}\n```\n\n\n\n\n\n\n\n<hr>\n\n##### 更新：\n\n​\t11/16  加入IP地址属地查询并印到控制台。\n\n​\t11/17 加入 SS 连通性检测，保证每一次连接都有效。","slug":"technique/如何实现SS客户端自动切换服务器","published":1,"updated":"2020-03-20T07:42:35.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw689003z98ki7e6q7nfw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>如何实现 <code>Shadowsocks</code> 客户端自动切换服务器呢？这里的自动切换仅仅是切换，没有附加条件的切换。根据其配置文件可以找到入手点。</p>\n<a id=\"more\"></a>\n\n\n\n<p>其配置文件内决定当前活动服务器的是一个<code>index</code>参数。这个参数就是所有配置信息在配置文件中的顺序，所以，想办法自动改变这个参数就可以实现自动切换的目的。</p>\n<p><strong>计划</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Windows 下使用 Powershell 来解决</li>\n<li><input disabled=\"\" type=\"checkbox\"> Windows 下使用 Python 来解决</li>\n</ul>\n<p>完成后相应的代码会贴在下面</p>\n<hr>\n\n<h5 id=\"PowerShell-版\"><a href=\"#PowerShell-版\" class=\"headerlink\" title=\"PowerShell 版\"></a>PowerShell 版</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取json文件</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$pattern</span> = <span class=\"string\">\"\\d&#123;1,3&#125;.&#123;1,3&#125;\\d.&#123;1,3&#125;\\d&#123;1,3&#125;\"</span></span><br><span class=\"line\">    <span class=\"variable\">$t</span>=(<span class=\"built_in\">Get-Random</span> -Minimum <span class=\"number\">500</span> -Maximum <span class=\"number\">600</span>)</span><br><span class=\"line\">    <span class=\"variable\">$json</span> = (<span class=\"built_in\">Get-Content</span> -Raw -Path <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span> | <span class=\"built_in\">ConvertFrom-Json</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"Start! Refresh in <span class=\"variable\">$t</span> seconds...\"</span> ( <span class=\"built_in\">Get-Date</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"当前活动服务器: \"</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server <span class=\"string\">\"序号：\"</span><span class=\"variable\">$json</span>.configs.length<span class=\"string\">\"-\"</span><span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"built_in\">Start-Sleep</span> -Seconds <span class=\"variable\">$t</span></span><br><span class=\"line\">    <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"variable\">$i</span> = <span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"comment\">#判断当前index 是否在正确范围内，如果在则进行下面的操作，目前存在的问题是不知道第3个服务器状态是否可用</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span> <span class=\"nomarkup\">-gt</span> <span class=\"number\">1</span> -and <span class=\"variable\">$i</span> <span class=\"nomarkup\">-lt</span> <span class=\"variable\">$json</span>.configs.length) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!(<span class=\"built_in\">Test-Connection</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server -Quiet))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">while</span>(<span class=\"built_in\">Test-Connection</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server -Quiet)</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$json</span>.index = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">Out-File</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"停止 XXX\"</span></span><br><span class=\"line\">    <span class=\"built_in\">Stop-Process</span> -Name Shadowsocks</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"停止 XXX\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable\">$target</span> = <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$target</span> <span class=\"nomarkup\">-match</span> <span class=\"variable\">$pattern</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$ip</span>=<span class=\"variable\">$target</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">         <span class=\"variable\">$ip</span>=([System.Net.Dns]::GetHostAddresses(<span class=\"variable\">$target</span>) | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span>).IPAddressToString</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$r</span>= (<span class=\"built_in\">Invoke-WebRequest</span> http://ip.taobao.com/service/getIpInfo.php?ip=<span class=\"variable\">$ip</span>).content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"variable\">$r</span>.data.country <span class=\"variable\">$r</span>.data.region</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"启动 XXX\"</span></span><br><span class=\"line\">    <span class=\"built_in\">Start-Process</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr/>\n更改了检测方式，每次循环都先把 index+1 之再进行可用性判断。\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Get json File</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$pattern</span> = <span class=\"string\">\"\\d&#123;1,3&#125;.&#123;1,3&#125;\\d.&#123;1,3&#125;\\d&#123;1,3&#125;\"</span></span><br><span class=\"line\">    <span class=\"variable\">$t</span>=(<span class=\"built_in\">Get-Random</span> -Minimum <span class=\"number\">120</span> -Maximum <span class=\"number\">300</span>)</span><br><span class=\"line\">    <span class=\"variable\">$json</span> = (<span class=\"built_in\">Get-Content</span> -Raw -Path <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\\\gui-config.json\"</span> | <span class=\"built_in\">ConvertFrom-Json</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Stop-Process</span> -Name Shadowsocks</span><br><span class=\"line\">    <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"variable\">$i</span> = <span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span> <span class=\"nomarkup\">-gt</span> <span class=\"number\">0</span> -and <span class=\"variable\">$i</span> <span class=\"nomarkup\">-lt</span> <span class=\"variable\">$json</span>.configs.length) &#123;</span><br><span class=\"line\">        (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> -Compress | <span class=\"built_in\">Out-File</span> -Encoding utf8 -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">Start-Process</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"</span></span><br><span class=\"line\">        <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"built_in\">Stop-Process</span> -Name Shadowsocks</span><br><span class=\"line\">            (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> -Compress | <span class=\"built_in\">Out-File</span> -Encoding utf8 -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">            <span class=\"built_in\">Start-Process</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\\\Shadowsocks.exe\"</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$statusCode</span> = (<span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"string\">\"http://www.t66y.com\"</span> -Proxy <span class=\"string\">\"http://127.0.0.1:1080\"</span> -TimeoutSec <span class=\"number\">5</span>).statusCode&#125;</span><br><span class=\"line\">            catch&#123;</span><br><span class=\"line\">            <span class=\"variable\">$statusCode</span> = <span class=\"number\">500</span>            </span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">while</span>(<span class=\"variable\">$statusCode</span> <span class=\"nomarkup\">-ne</span> <span class=\"number\">200</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$json</span>.index = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">       <span class=\"comment\">&lt;#检测主逻辑，简单判断IP地址是否可以ping通，但是不对 SS 能否正常连接做检测所以，以下方法不好用。    </span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">              if(!(Test-Connection $json.configs.Get($json.index).server -Quiet))&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            do&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                $json.index+=1</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;while(Test-Connection $json.configs.Get($json.index).server -Quiet)</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; </span></span><br><span class=\"line\"><span class=\"comment\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            $json.index = 0</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">       #&gt;</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> -Compress | <span class=\"built_in\">Out-File</span> -Encoding utf8 -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"variable\">$target</span> = <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server</span><br><span class=\"line\">    <span class=\"comment\">#IP地址检测</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$target</span> <span class=\"nomarkup\">-match</span> <span class=\"variable\">$pattern</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$ip</span>=<span class=\"variable\">$target</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">         <span class=\"variable\">$ip</span>=([System.Net.Dns]::GetHostAddresses(<span class=\"variable\">$target</span>) | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span>).IPAddressToString</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$r</span>= (<span class=\"built_in\">Invoke-WebRequest</span> http://ip.taobao.com/service/getIpInfo.php?ip=<span class=\"variable\">$ip</span>).content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"==&gt;Current Location ==&gt;\"</span><span class=\"variable\">$r</span>.data.country  <span class=\"variable\">$r</span>.data.region</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"==&gt;开始! Refresh in <span class=\"variable\">$t</span> seconds...\"</span> ( <span class=\"built_in\">Get-Date</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"==&gt;Current Server: \"</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server <span class=\"string\">\"Index: \"</span><span class=\"variable\">$json</span>.configs.length<span class=\"string\">\"-\"</span><span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"built_in\">Start-Sleep</span> -Seconds <span class=\"variable\">$t</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<hr>\n\n<h5 id=\"更新：\"><a href=\"#更新：\" class=\"headerlink\" title=\"更新：\"></a>更新：</h5><p>​    11/16  加入IP地址属地查询并印到控制台。</p>\n<p>​    11/17 加入 SS 连通性检测，保证每一次连接都有效。</p>\n","site":{"data":{}},"excerpt":"<p>如何实现 <code>Shadowsocks</code> 客户端自动切换服务器呢？这里的自动切换仅仅是切换，没有附加条件的切换。根据其配置文件可以找到入手点。</p>","more":"<p>其配置文件内决定当前活动服务器的是一个<code>index</code>参数。这个参数就是所有配置信息在配置文件中的顺序，所以，想办法自动改变这个参数就可以实现自动切换的目的。</p>\n<p><strong>计划</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Windows 下使用 Powershell 来解决</li>\n<li><input disabled=\"\" type=\"checkbox\"> Windows 下使用 Python 来解决</li>\n</ul>\n<p>完成后相应的代码会贴在下面</p>\n<hr>\n\n<h5 id=\"PowerShell-版\"><a href=\"#PowerShell-版\" class=\"headerlink\" title=\"PowerShell 版\"></a>PowerShell 版</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取json文件</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$pattern</span> = <span class=\"string\">\"\\d&#123;1,3&#125;.&#123;1,3&#125;\\d.&#123;1,3&#125;\\d&#123;1,3&#125;\"</span></span><br><span class=\"line\">    <span class=\"variable\">$t</span>=(<span class=\"built_in\">Get-Random</span> -Minimum <span class=\"number\">500</span> -Maximum <span class=\"number\">600</span>)</span><br><span class=\"line\">    <span class=\"variable\">$json</span> = (<span class=\"built_in\">Get-Content</span> -Raw -Path <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span> | <span class=\"built_in\">ConvertFrom-Json</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"Start! Refresh in <span class=\"variable\">$t</span> seconds...\"</span> ( <span class=\"built_in\">Get-Date</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"当前活动服务器: \"</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server <span class=\"string\">\"序号：\"</span><span class=\"variable\">$json</span>.configs.length<span class=\"string\">\"-\"</span><span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"built_in\">Start-Sleep</span> -Seconds <span class=\"variable\">$t</span></span><br><span class=\"line\">    <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"variable\">$i</span> = <span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"comment\">#判断当前index 是否在正确范围内，如果在则进行下面的操作，目前存在的问题是不知道第3个服务器状态是否可用</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span> <span class=\"nomarkup\">-gt</span> <span class=\"number\">1</span> -and <span class=\"variable\">$i</span> <span class=\"nomarkup\">-lt</span> <span class=\"variable\">$json</span>.configs.length) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!(<span class=\"built_in\">Test-Connection</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server -Quiet))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">while</span>(<span class=\"built_in\">Test-Connection</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server -Quiet)</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$json</span>.index = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">Out-File</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"停止 XXX\"</span></span><br><span class=\"line\">    <span class=\"built_in\">Stop-Process</span> -Name Shadowsocks</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"停止 XXX\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable\">$target</span> = <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$target</span> <span class=\"nomarkup\">-match</span> <span class=\"variable\">$pattern</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$ip</span>=<span class=\"variable\">$target</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">         <span class=\"variable\">$ip</span>=([System.Net.Dns]::GetHostAddresses(<span class=\"variable\">$target</span>) | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span>).IPAddressToString</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$r</span>= (<span class=\"built_in\">Invoke-WebRequest</span> http://ip.taobao.com/service/getIpInfo.php?ip=<span class=\"variable\">$ip</span>).content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"variable\">$r</span>.data.country <span class=\"variable\">$r</span>.data.region</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"启动 XXX\"</span></span><br><span class=\"line\">    <span class=\"built_in\">Start-Process</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr/>\n更改了检测方式，每次循环都先把 index+1 之再进行可用性判断。\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Get json File</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$pattern</span> = <span class=\"string\">\"\\d&#123;1,3&#125;.&#123;1,3&#125;\\d.&#123;1,3&#125;\\d&#123;1,3&#125;\"</span></span><br><span class=\"line\">    <span class=\"variable\">$t</span>=(<span class=\"built_in\">Get-Random</span> -Minimum <span class=\"number\">120</span> -Maximum <span class=\"number\">300</span>)</span><br><span class=\"line\">    <span class=\"variable\">$json</span> = (<span class=\"built_in\">Get-Content</span> -Raw -Path <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\\\gui-config.json\"</span> | <span class=\"built_in\">ConvertFrom-Json</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Stop-Process</span> -Name Shadowsocks</span><br><span class=\"line\">    <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"variable\">$i</span> = <span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span> <span class=\"nomarkup\">-gt</span> <span class=\"number\">0</span> -and <span class=\"variable\">$i</span> <span class=\"nomarkup\">-lt</span> <span class=\"variable\">$json</span>.configs.length) &#123;</span><br><span class=\"line\">        (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> -Compress | <span class=\"built_in\">Out-File</span> -Encoding utf8 -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">Start-Process</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\Shadowsocks.exe\"</span></span><br><span class=\"line\">        <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$json</span>.index+=<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"built_in\">Stop-Process</span> -Name Shadowsocks</span><br><span class=\"line\">            (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> -Compress | <span class=\"built_in\">Out-File</span> -Encoding utf8 -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">            <span class=\"built_in\">Start-Process</span> -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\\\Shadowsocks.exe\"</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$statusCode</span> = (<span class=\"built_in\">Invoke-WebRequest</span> -Uri <span class=\"string\">\"http://www.t66y.com\"</span> -Proxy <span class=\"string\">\"http://127.0.0.1:1080\"</span> -TimeoutSec <span class=\"number\">5</span>).statusCode&#125;</span><br><span class=\"line\">            catch&#123;</span><br><span class=\"line\">            <span class=\"variable\">$statusCode</span> = <span class=\"number\">500</span>            </span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">while</span>(<span class=\"variable\">$statusCode</span> <span class=\"nomarkup\">-ne</span> <span class=\"number\">200</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$json</span>.index = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">       <span class=\"comment\">&lt;#检测主逻辑，简单判断IP地址是否可以ping通，但是不对 SS 能否正常连接做检测所以，以下方法不好用。    </span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">              if(!(Test-Connection $json.configs.Get($json.index).server -Quiet))&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            do&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                $json.index+=1</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;while(Test-Connection $json.configs.Get($json.index).server -Quiet)</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; </span></span><br><span class=\"line\"><span class=\"comment\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            $json.index = 0</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">       #&gt;</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    (<span class=\"variable\">$json</span> | <span class=\"built_in\">ConvertTo-Json</span> -Compress | <span class=\"built_in\">Out-File</span> -Encoding utf8 -FilePath <span class=\"string\">\"X:\\XXX\\XXX\\XXX\\gui-config.json\"</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"variable\">$target</span> = <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server</span><br><span class=\"line\">    <span class=\"comment\">#IP地址检测</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$target</span> <span class=\"nomarkup\">-match</span> <span class=\"variable\">$pattern</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$ip</span>=<span class=\"variable\">$target</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">         <span class=\"variable\">$ip</span>=([System.Net.Dns]::GetHostAddresses(<span class=\"variable\">$target</span>) | <span class=\"built_in\">ConvertTo-Json</span> | <span class=\"built_in\">ConvertFrom-Json</span>).IPAddressToString</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$r</span>= (<span class=\"built_in\">Invoke-WebRequest</span> http://ip.taobao.com/service/getIpInfo.php?ip=<span class=\"variable\">$ip</span>).content | <span class=\"built_in\">ConvertFrom-Json</span></span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"==&gt;Current Location ==&gt;\"</span><span class=\"variable\">$r</span>.data.country  <span class=\"variable\">$r</span>.data.region</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"==&gt;开始! Refresh in <span class=\"variable\">$t</span> seconds...\"</span> ( <span class=\"built_in\">Get-Date</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"==&gt;Current Server: \"</span> <span class=\"variable\">$json</span>.configs.Get(<span class=\"variable\">$json</span>.index).server <span class=\"string\">\"Index: \"</span><span class=\"variable\">$json</span>.configs.length<span class=\"string\">\"-\"</span><span class=\"variable\">$json</span>.index</span><br><span class=\"line\">    <span class=\"built_in\">Start-Sleep</span> -Seconds <span class=\"variable\">$t</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<hr>\n\n<h5 id=\"更新：\"><a href=\"#更新：\" class=\"headerlink\" title=\"更新：\"></a>更新：</h5><p>​    11/16  加入IP地址属地查询并印到控制台。</p>\n<p>​    11/17 加入 SS 连通性检测，保证每一次连接都有效。</p>"},{"title":"数据结构","date":"2019-09-29T11:58:48.000Z","_content":"\n\n\n数据结构--浙江大学\n\n\n\n<!--more-->\n\n\n\n广义表(Generalized List)\n\n​\t广义表是线性表的推广\n\n​\t对于线性表而言，n个元素都是基本的单元素；\n\n​\t广义表中，这些元素不仅可以是单元素也可以是另一个广义表。\n\n多重链表\n\n​\t链表中的节点可能同时隶属于多个链\n\n​\t多重链表结点的指针域会有多个，但包含两个指针的链表并不一定是多重链表\n\n多重链表有广泛的用途：基本上如树、图这样相对复杂的数据结构都可以采用多重链表方式实现存储。\n\n矩阵可以用二维数组表示 ，但二维数组表示有两个缺陷：其一是数组的大小需要事先确定；其二为，对于稀疏矩阵，将造成大量的存储空间浪费\n\n堆栈\n\n是一种线性结构也是一种特殊的线性表。\n\n后缀表达式\n\n中缀表达式：运算符位于两个运算数之间。如，a+b*c-d/e\n\n求值策略：将中缀表达式转换为后缀表达式然后求值。例：2+9/3-5 -> 293/+5-\n\n​\t特点：1、运算数相对顺序不变；2、运算符号顺序发生改变，需要存储等待中的运算符号；要将当前运算符号与等待中的最后一个运算符号比较\n\n后缀表达式：运算符位于两个运算之间。如，abc*+de/-\n\n后缀表达式求值策略：从左向右扫描，逐个独步一时运算数和运算符号\n\n堆栈具有一定操作约束的线性表，只在一端做插入、删除。后入先出。\n\n栈的顺序存储结构通常由一个一维数组和一个记录栈顶元素位置的变量组成。\n\n栈的链式存储结构实际上就是一个单链表，叫做链栈。插入和删除操作只能在链栈的栈顶进行。\n\n中缀表达式如何转换为后缀表达式\n\n​\t\n\n```\n从头到尾读取中缀表达式的每个对象，对不同对象按不同的情况处理。\n\t1、运算数：直接输出\n\t2、左括号：压入堆栈；\n\t3、右括号：将栈顶的运算符弹出并输出，直到遇到左括号（出栈，不输出）；\n\t4、运算符：\n\t\t若优先级大于栈顶运算符时，则把它压栈；\n\t\t若优先级小于等于栈顶运算符时，将栈顶运算符弹出并输出；再比较新的栈顶运算符，直到该运算符大于栈顶运算符优先级为止，然后将该运算符压栈；\n\t5、若各对象处理完毕，则把堆栈中存留的运算符一并输出。\n```\n\n堆栈的其他应用：\n\n​\t\n\n```\n函数调用及递归实现\n深度优先搜索\n回溯算法\n```\n\n\n\n------\n\n应用示例：中缀表达式转换为后缀表达式：\n\n```java\npackage cn.edu.zzu;\n\nimport sun.plugin2.main.server.Plugin;\n\nimport java.security.spec.PKCS8EncodedKeySpec;\nimport java.util.Scanner;\nimport java.util.Stack;\n\n/**\n * @author\n */\npublic class Main {\n\n    static Stack<Character> op = new Stack<>();\n    static Stack<Character> optemp = new Stack<>();\n    static final String MINUS = \"-\";\n    static final String PLUS = \"+\";\n    static final String MULTIPLY = \"*\";\n    static final String DIVIDE = \"/\";\n    static final String LEFT_BRACKET = \"(\";\n    static final String RIGHT_BRACKET = \")\";\n\n    public static void main(String[] args) {\n        System.out.println(\"请输入一个式子。。。\");\n        Scanner scanner = new Scanner(System.in);\n        String exp = scanner.nextLine();\n//        String exp = \"1+((2+3)*4)-5\";\n//        String exp = \"A*(B+C)-D/(E+F)\";\n//        String exp = \"a*(b+c)-d\";\n//        String exp = \"2*(9+6/3-5)+4\";\n        System.out.println(exp);\n        System.out.print(getRp(exp));\n    }\n\n    private static String getRp(String exp) {\n        StringBuilder out = new StringBuilder();\n        char[] chars = exp.toCharArray();\n        int j = 0;\n        for (int i = 0; i < exp.length(); i++) {\n//            System.out.println(op + \"this is op\" + j++);\n//            System.out.println(optemp + \"this is optemp\");\n            String s = String.valueOf(chars[i]);\n            if (!s.equals(MINUS) && !s.equals(PLUS) && !s.equals(MULTIPLY) && !s.equals(DIVIDE) && !s.equals(LEFT_BRACKET) && !s.equals(RIGHT_BRACKET)) {\n                op.push(chars[i]);\n            } else {\n                if (s.equals(MINUS) || s.equals(PLUS)) {\n                    if (optemp.empty() || optemp.peek().toString().equals(LEFT_BRACKET)) {\n                        optemp.push(chars[i]);\n                    } else {\n                        //栈不为空且栈顶元素不是左括号，则这一级要出栈\n                        while (!optemp.peek().toString().equals(LEFT_BRACKET)) {\n                            op.push(optemp.pop());\n                            if (optemp.empty()) {\n//                                optemp.push(chars[i]);\n//                                System.out.println(optemp + \"  in loop\");\n                                break;\n                            }\n                        }\n//                        System.out.println(optemp + \"before\");\n                        optemp.push(chars[i]);\n//                        System.out.println(optemp + \"after\");\n                    }\n                } else if (s.equals(DIVIDE) || s.equals(MULTIPLY)) {\n//                    System.out.println(chars[i]);\n                    if (optemp.empty()) {\n                        optemp.push(chars[i]);\n                    } else {\n                        if (optemp.peek().toString().equals(MINUS) || optemp.peek().toString().equals(PLUS)\n                                || optemp.peek().toString().equals(LEFT_BRACKET)) {\n                            optemp.push(chars[i]);\n                        } else {\n                            while (optemp.peek().toString().equals(DIVIDE) || optemp.peek().toString().equals(MULTIPLY)) {\n                                op.push(optemp.pop());\n                                if (optemp.empty()) {\n                                    optemp.push(chars[i]);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    continue;\n                } else if (s.equals(LEFT_BRACKET)) {\n                    optemp.push(chars[i]);\n                } else if (s.equals(RIGHT_BRACKET)) {\n                    while (!optemp.peek().toString().equals(LEFT_BRACKET)) {\n                        op.push(optemp.pop());\n                    }\n                    Character pop = optemp.pop();\n//                    System.out.println(pop);\n                }\n            }\n        }\n//        System.out.println(op);\n//        System.out.println(optemp);\n        while (!optemp.empty()) {\n            op.push(optemp.pop());\n        }\n        while (!op.empty()) {\n            out.append(op.pop());\n        }\n        char[] c1 = out.toString().toCharArray();\n        StringBuilder scout = new StringBuilder();\n        for (int i = 0; i < c1.length; i++) {\n            scout.append(c1[c1.length - i - 1]);\n        }\n        return scout.toString();\n    }\n}\n\n\n```\n\n","source":"_posts/technique/数据结构.md","raw":"---\ntitle: 数据结构\ndate: 2019-09-29 19:58:48\ntags: 技术\n---\n\n\n\n数据结构--浙江大学\n\n\n\n<!--more-->\n\n\n\n广义表(Generalized List)\n\n​\t广义表是线性表的推广\n\n​\t对于线性表而言，n个元素都是基本的单元素；\n\n​\t广义表中，这些元素不仅可以是单元素也可以是另一个广义表。\n\n多重链表\n\n​\t链表中的节点可能同时隶属于多个链\n\n​\t多重链表结点的指针域会有多个，但包含两个指针的链表并不一定是多重链表\n\n多重链表有广泛的用途：基本上如树、图这样相对复杂的数据结构都可以采用多重链表方式实现存储。\n\n矩阵可以用二维数组表示 ，但二维数组表示有两个缺陷：其一是数组的大小需要事先确定；其二为，对于稀疏矩阵，将造成大量的存储空间浪费\n\n堆栈\n\n是一种线性结构也是一种特殊的线性表。\n\n后缀表达式\n\n中缀表达式：运算符位于两个运算数之间。如，a+b*c-d/e\n\n求值策略：将中缀表达式转换为后缀表达式然后求值。例：2+9/3-5 -> 293/+5-\n\n​\t特点：1、运算数相对顺序不变；2、运算符号顺序发生改变，需要存储等待中的运算符号；要将当前运算符号与等待中的最后一个运算符号比较\n\n后缀表达式：运算符位于两个运算之间。如，abc*+de/-\n\n后缀表达式求值策略：从左向右扫描，逐个独步一时运算数和运算符号\n\n堆栈具有一定操作约束的线性表，只在一端做插入、删除。后入先出。\n\n栈的顺序存储结构通常由一个一维数组和一个记录栈顶元素位置的变量组成。\n\n栈的链式存储结构实际上就是一个单链表，叫做链栈。插入和删除操作只能在链栈的栈顶进行。\n\n中缀表达式如何转换为后缀表达式\n\n​\t\n\n```\n从头到尾读取中缀表达式的每个对象，对不同对象按不同的情况处理。\n\t1、运算数：直接输出\n\t2、左括号：压入堆栈；\n\t3、右括号：将栈顶的运算符弹出并输出，直到遇到左括号（出栈，不输出）；\n\t4、运算符：\n\t\t若优先级大于栈顶运算符时，则把它压栈；\n\t\t若优先级小于等于栈顶运算符时，将栈顶运算符弹出并输出；再比较新的栈顶运算符，直到该运算符大于栈顶运算符优先级为止，然后将该运算符压栈；\n\t5、若各对象处理完毕，则把堆栈中存留的运算符一并输出。\n```\n\n堆栈的其他应用：\n\n​\t\n\n```\n函数调用及递归实现\n深度优先搜索\n回溯算法\n```\n\n\n\n------\n\n应用示例：中缀表达式转换为后缀表达式：\n\n```java\npackage cn.edu.zzu;\n\nimport sun.plugin2.main.server.Plugin;\n\nimport java.security.spec.PKCS8EncodedKeySpec;\nimport java.util.Scanner;\nimport java.util.Stack;\n\n/**\n * @author\n */\npublic class Main {\n\n    static Stack<Character> op = new Stack<>();\n    static Stack<Character> optemp = new Stack<>();\n    static final String MINUS = \"-\";\n    static final String PLUS = \"+\";\n    static final String MULTIPLY = \"*\";\n    static final String DIVIDE = \"/\";\n    static final String LEFT_BRACKET = \"(\";\n    static final String RIGHT_BRACKET = \")\";\n\n    public static void main(String[] args) {\n        System.out.println(\"请输入一个式子。。。\");\n        Scanner scanner = new Scanner(System.in);\n        String exp = scanner.nextLine();\n//        String exp = \"1+((2+3)*4)-5\";\n//        String exp = \"A*(B+C)-D/(E+F)\";\n//        String exp = \"a*(b+c)-d\";\n//        String exp = \"2*(9+6/3-5)+4\";\n        System.out.println(exp);\n        System.out.print(getRp(exp));\n    }\n\n    private static String getRp(String exp) {\n        StringBuilder out = new StringBuilder();\n        char[] chars = exp.toCharArray();\n        int j = 0;\n        for (int i = 0; i < exp.length(); i++) {\n//            System.out.println(op + \"this is op\" + j++);\n//            System.out.println(optemp + \"this is optemp\");\n            String s = String.valueOf(chars[i]);\n            if (!s.equals(MINUS) && !s.equals(PLUS) && !s.equals(MULTIPLY) && !s.equals(DIVIDE) && !s.equals(LEFT_BRACKET) && !s.equals(RIGHT_BRACKET)) {\n                op.push(chars[i]);\n            } else {\n                if (s.equals(MINUS) || s.equals(PLUS)) {\n                    if (optemp.empty() || optemp.peek().toString().equals(LEFT_BRACKET)) {\n                        optemp.push(chars[i]);\n                    } else {\n                        //栈不为空且栈顶元素不是左括号，则这一级要出栈\n                        while (!optemp.peek().toString().equals(LEFT_BRACKET)) {\n                            op.push(optemp.pop());\n                            if (optemp.empty()) {\n//                                optemp.push(chars[i]);\n//                                System.out.println(optemp + \"  in loop\");\n                                break;\n                            }\n                        }\n//                        System.out.println(optemp + \"before\");\n                        optemp.push(chars[i]);\n//                        System.out.println(optemp + \"after\");\n                    }\n                } else if (s.equals(DIVIDE) || s.equals(MULTIPLY)) {\n//                    System.out.println(chars[i]);\n                    if (optemp.empty()) {\n                        optemp.push(chars[i]);\n                    } else {\n                        if (optemp.peek().toString().equals(MINUS) || optemp.peek().toString().equals(PLUS)\n                                || optemp.peek().toString().equals(LEFT_BRACKET)) {\n                            optemp.push(chars[i]);\n                        } else {\n                            while (optemp.peek().toString().equals(DIVIDE) || optemp.peek().toString().equals(MULTIPLY)) {\n                                op.push(optemp.pop());\n                                if (optemp.empty()) {\n                                    optemp.push(chars[i]);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    continue;\n                } else if (s.equals(LEFT_BRACKET)) {\n                    optemp.push(chars[i]);\n                } else if (s.equals(RIGHT_BRACKET)) {\n                    while (!optemp.peek().toString().equals(LEFT_BRACKET)) {\n                        op.push(optemp.pop());\n                    }\n                    Character pop = optemp.pop();\n//                    System.out.println(pop);\n                }\n            }\n        }\n//        System.out.println(op);\n//        System.out.println(optemp);\n        while (!optemp.empty()) {\n            op.push(optemp.pop());\n        }\n        while (!op.empty()) {\n            out.append(op.pop());\n        }\n        char[] c1 = out.toString().toCharArray();\n        StringBuilder scout = new StringBuilder();\n        for (int i = 0; i < c1.length; i++) {\n            scout.append(c1[c1.length - i - 1]);\n        }\n        return scout.toString();\n    }\n}\n\n\n```\n\n","slug":"technique/数据结构","published":1,"updated":"2020-03-20T07:42:35.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw68a004198ki448m0kyq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>数据结构–浙江大学</p>\n<a id=\"more\"></a>\n\n\n\n<p>广义表(Generalized List)</p>\n<p>​    广义表是线性表的推广</p>\n<p>​    对于线性表而言，n个元素都是基本的单元素；</p>\n<p>​    广义表中，这些元素不仅可以是单元素也可以是另一个广义表。</p>\n<p>多重链表</p>\n<p>​    链表中的节点可能同时隶属于多个链</p>\n<p>​    多重链表结点的指针域会有多个，但包含两个指针的链表并不一定是多重链表</p>\n<p>多重链表有广泛的用途：基本上如树、图这样相对复杂的数据结构都可以采用多重链表方式实现存储。</p>\n<p>矩阵可以用二维数组表示 ，但二维数组表示有两个缺陷：其一是数组的大小需要事先确定；其二为，对于稀疏矩阵，将造成大量的存储空间浪费</p>\n<p>堆栈</p>\n<p>是一种线性结构也是一种特殊的线性表。</p>\n<p>后缀表达式</p>\n<p>中缀表达式：运算符位于两个运算数之间。如，a+b*c-d/e</p>\n<p>求值策略：将中缀表达式转换为后缀表达式然后求值。例：2+9/3-5 -&gt; 293/+5-</p>\n<p>​    特点：1、运算数相对顺序不变；2、运算符号顺序发生改变，需要存储等待中的运算符号；要将当前运算符号与等待中的最后一个运算符号比较</p>\n<p>后缀表达式：运算符位于两个运算之间。如，abc*+de/-</p>\n<p>后缀表达式求值策略：从左向右扫描，逐个独步一时运算数和运算符号</p>\n<p>堆栈具有一定操作约束的线性表，只在一端做插入、删除。后入先出。</p>\n<p>栈的顺序存储结构通常由一个一维数组和一个记录栈顶元素位置的变量组成。</p>\n<p>栈的链式存储结构实际上就是一个单链表，叫做链栈。插入和删除操作只能在链栈的栈顶进行。</p>\n<p>中缀表达式如何转换为后缀表达式</p>\n<p>​    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从头到尾读取中缀表达式的每个对象，对不同对象按不同的情况处理。</span><br><span class=\"line\">\t1、运算数：直接输出</span><br><span class=\"line\">\t2、左括号：压入堆栈；</span><br><span class=\"line\">\t3、右括号：将栈顶的运算符弹出并输出，直到遇到左括号（出栈，不输出）；</span><br><span class=\"line\">\t4、运算符：</span><br><span class=\"line\">\t\t若优先级大于栈顶运算符时，则把它压栈；</span><br><span class=\"line\">\t\t若优先级小于等于栈顶运算符时，将栈顶运算符弹出并输出；再比较新的栈顶运算符，直到该运算符大于栈顶运算符优先级为止，然后将该运算符压栈；</span><br><span class=\"line\">\t5、若各对象处理完毕，则把堆栈中存留的运算符一并输出。</span><br></pre></td></tr></table></figure>\n\n<p>堆栈的其他应用：</p>\n<p>​    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数调用及递归实现</span><br><span class=\"line\">深度优先搜索</span><br><span class=\"line\">回溯算法</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<p>应用示例：中缀表达式转换为后缀表达式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.edu.zzu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sun.plugin2.main.server.Plugin;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.spec.PKCS8EncodedKeySpec;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Stack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Stack&lt;Character&gt; op = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Stack&lt;Character&gt; optemp = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String MINUS = <span class=\"string\">\"-\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PLUS = <span class=\"string\">\"+\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String MULTIPLY = <span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DIVIDE = <span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String LEFT_BRACKET = <span class=\"string\">\"(\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String RIGHT_BRACKET = <span class=\"string\">\")\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"请输入一个式子。。。\"</span>);</span><br><span class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        String exp = scanner.nextLine();</span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"1+((2+3)*4)-5\";</span></span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"A*(B+C)-D/(E+F)\";</span></span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"a*(b+c)-d\";</span></span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"2*(9+6/3-5)+4\";</span></span><br><span class=\"line\">        System.out.println(exp);</span><br><span class=\"line\">        System.out.print(getRp(exp));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title\">getRp</span><span class=\"params\">(String exp)</span> </span>&#123;</span><br><span class=\"line\">        StringBuilder out = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] chars = exp.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; exp.length(); i++) &#123;</span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(op + \"this is op\" + j++);</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(optemp + \"this is optemp\");</span></span><br><span class=\"line\">            String s = String.valueOf(chars[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!s.equals(MINUS) &amp;&amp; !s.equals(PLUS) &amp;&amp; !s.equals(MULTIPLY) &amp;&amp; !s.equals(DIVIDE) &amp;&amp; !s.equals(LEFT_BRACKET) &amp;&amp; !s.equals(RIGHT_BRACKET)) &#123;</span><br><span class=\"line\">                op.push(chars[i]);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s.equals(MINUS) || s.equals(PLUS)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (optemp.empty() || optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                        optemp.push(chars[i]);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//栈不为空且栈顶元素不是左括号，则这一级要出栈</span></span><br><span class=\"line\">                        <span class=\"keyword\">while</span> (!optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                            op.push(optemp.pop());</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (optemp.empty()) &#123;</span><br><span class=\"line\"><span class=\"comment\">//                                optemp.push(chars[i]);</span></span><br><span class=\"line\"><span class=\"comment\">//                                System.out.println(optemp + \"  in loop\");</span></span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"><span class=\"comment\">//                        System.out.println(optemp + \"before\");</span></span><br><span class=\"line\">                        optemp.push(chars[i]);</span><br><span class=\"line\"><span class=\"comment\">//                        System.out.println(optemp + \"after\");</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(DIVIDE) || s.equals(MULTIPLY)) &#123;</span><br><span class=\"line\"><span class=\"comment\">//                    System.out.println(chars[i]);</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (optemp.empty()) &#123;</span><br><span class=\"line\">                        optemp.push(chars[i]);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (optemp.peek().toString().equals(MINUS) || optemp.peek().toString().equals(PLUS)</span><br><span class=\"line\">                                || optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                            optemp.push(chars[i]);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">while</span> (optemp.peek().toString().equals(DIVIDE) || optemp.peek().toString().equals(MULTIPLY)) &#123;</span><br><span class=\"line\">                                op.push(optemp.pop());</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (optemp.empty()) &#123;</span><br><span class=\"line\">                                    optemp.push(chars[i]);</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                    optemp.push(chars[i]);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(RIGHT_BRACKET)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (!optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                        op.push(optemp.pop());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    Character pop = optemp.pop();</span><br><span class=\"line\"><span class=\"comment\">//                    System.out.println(pop);</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(op);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(optemp);</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!optemp.empty()) &#123;</span><br><span class=\"line\">            op.push(optemp.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!op.empty()) &#123;</span><br><span class=\"line\">            out.append(op.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] c1 = out.toString().toCharArray();</span><br><span class=\"line\">        StringBuilder scout = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; c1.length; i++) &#123;</span><br><span class=\"line\">            scout.append(c1[c1.length - i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> scout.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>数据结构–浙江大学</p>","more":"<p>广义表(Generalized List)</p>\n<p>​    广义表是线性表的推广</p>\n<p>​    对于线性表而言，n个元素都是基本的单元素；</p>\n<p>​    广义表中，这些元素不仅可以是单元素也可以是另一个广义表。</p>\n<p>多重链表</p>\n<p>​    链表中的节点可能同时隶属于多个链</p>\n<p>​    多重链表结点的指针域会有多个，但包含两个指针的链表并不一定是多重链表</p>\n<p>多重链表有广泛的用途：基本上如树、图这样相对复杂的数据结构都可以采用多重链表方式实现存储。</p>\n<p>矩阵可以用二维数组表示 ，但二维数组表示有两个缺陷：其一是数组的大小需要事先确定；其二为，对于稀疏矩阵，将造成大量的存储空间浪费</p>\n<p>堆栈</p>\n<p>是一种线性结构也是一种特殊的线性表。</p>\n<p>后缀表达式</p>\n<p>中缀表达式：运算符位于两个运算数之间。如，a+b*c-d/e</p>\n<p>求值策略：将中缀表达式转换为后缀表达式然后求值。例：2+9/3-5 -&gt; 293/+5-</p>\n<p>​    特点：1、运算数相对顺序不变；2、运算符号顺序发生改变，需要存储等待中的运算符号；要将当前运算符号与等待中的最后一个运算符号比较</p>\n<p>后缀表达式：运算符位于两个运算之间。如，abc*+de/-</p>\n<p>后缀表达式求值策略：从左向右扫描，逐个独步一时运算数和运算符号</p>\n<p>堆栈具有一定操作约束的线性表，只在一端做插入、删除。后入先出。</p>\n<p>栈的顺序存储结构通常由一个一维数组和一个记录栈顶元素位置的变量组成。</p>\n<p>栈的链式存储结构实际上就是一个单链表，叫做链栈。插入和删除操作只能在链栈的栈顶进行。</p>\n<p>中缀表达式如何转换为后缀表达式</p>\n<p>​    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从头到尾读取中缀表达式的每个对象，对不同对象按不同的情况处理。</span><br><span class=\"line\">\t1、运算数：直接输出</span><br><span class=\"line\">\t2、左括号：压入堆栈；</span><br><span class=\"line\">\t3、右括号：将栈顶的运算符弹出并输出，直到遇到左括号（出栈，不输出）；</span><br><span class=\"line\">\t4、运算符：</span><br><span class=\"line\">\t\t若优先级大于栈顶运算符时，则把它压栈；</span><br><span class=\"line\">\t\t若优先级小于等于栈顶运算符时，将栈顶运算符弹出并输出；再比较新的栈顶运算符，直到该运算符大于栈顶运算符优先级为止，然后将该运算符压栈；</span><br><span class=\"line\">\t5、若各对象处理完毕，则把堆栈中存留的运算符一并输出。</span><br></pre></td></tr></table></figure>\n\n<p>堆栈的其他应用：</p>\n<p>​    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数调用及递归实现</span><br><span class=\"line\">深度优先搜索</span><br><span class=\"line\">回溯算法</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<p>应用示例：中缀表达式转换为后缀表达式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.edu.zzu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sun.plugin2.main.server.Plugin;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.spec.PKCS8EncodedKeySpec;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Stack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Stack&lt;Character&gt; op = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Stack&lt;Character&gt; optemp = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String MINUS = <span class=\"string\">\"-\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PLUS = <span class=\"string\">\"+\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String MULTIPLY = <span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DIVIDE = <span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String LEFT_BRACKET = <span class=\"string\">\"(\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String RIGHT_BRACKET = <span class=\"string\">\")\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"请输入一个式子。。。\"</span>);</span><br><span class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        String exp = scanner.nextLine();</span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"1+((2+3)*4)-5\";</span></span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"A*(B+C)-D/(E+F)\";</span></span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"a*(b+c)-d\";</span></span><br><span class=\"line\"><span class=\"comment\">//        String exp = \"2*(9+6/3-5)+4\";</span></span><br><span class=\"line\">        System.out.println(exp);</span><br><span class=\"line\">        System.out.print(getRp(exp));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title\">getRp</span><span class=\"params\">(String exp)</span> </span>&#123;</span><br><span class=\"line\">        StringBuilder out = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] chars = exp.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; exp.length(); i++) &#123;</span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(op + \"this is op\" + j++);</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(optemp + \"this is optemp\");</span></span><br><span class=\"line\">            String s = String.valueOf(chars[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!s.equals(MINUS) &amp;&amp; !s.equals(PLUS) &amp;&amp; !s.equals(MULTIPLY) &amp;&amp; !s.equals(DIVIDE) &amp;&amp; !s.equals(LEFT_BRACKET) &amp;&amp; !s.equals(RIGHT_BRACKET)) &#123;</span><br><span class=\"line\">                op.push(chars[i]);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s.equals(MINUS) || s.equals(PLUS)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (optemp.empty() || optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                        optemp.push(chars[i]);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//栈不为空且栈顶元素不是左括号，则这一级要出栈</span></span><br><span class=\"line\">                        <span class=\"keyword\">while</span> (!optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                            op.push(optemp.pop());</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (optemp.empty()) &#123;</span><br><span class=\"line\"><span class=\"comment\">//                                optemp.push(chars[i]);</span></span><br><span class=\"line\"><span class=\"comment\">//                                System.out.println(optemp + \"  in loop\");</span></span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"><span class=\"comment\">//                        System.out.println(optemp + \"before\");</span></span><br><span class=\"line\">                        optemp.push(chars[i]);</span><br><span class=\"line\"><span class=\"comment\">//                        System.out.println(optemp + \"after\");</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(DIVIDE) || s.equals(MULTIPLY)) &#123;</span><br><span class=\"line\"><span class=\"comment\">//                    System.out.println(chars[i]);</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (optemp.empty()) &#123;</span><br><span class=\"line\">                        optemp.push(chars[i]);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (optemp.peek().toString().equals(MINUS) || optemp.peek().toString().equals(PLUS)</span><br><span class=\"line\">                                || optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                            optemp.push(chars[i]);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">while</span> (optemp.peek().toString().equals(DIVIDE) || optemp.peek().toString().equals(MULTIPLY)) &#123;</span><br><span class=\"line\">                                op.push(optemp.pop());</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (optemp.empty()) &#123;</span><br><span class=\"line\">                                    optemp.push(chars[i]);</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                    optemp.push(chars[i]);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(RIGHT_BRACKET)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (!optemp.peek().toString().equals(LEFT_BRACKET)) &#123;</span><br><span class=\"line\">                        op.push(optemp.pop());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    Character pop = optemp.pop();</span><br><span class=\"line\"><span class=\"comment\">//                    System.out.println(pop);</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(op);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(optemp);</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!optemp.empty()) &#123;</span><br><span class=\"line\">            op.push(optemp.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!op.empty()) &#123;</span><br><span class=\"line\">            out.append(op.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] c1 = out.toString().toCharArray();</span><br><span class=\"line\">        StringBuilder scout = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; c1.length; i++) &#123;</span><br><span class=\"line\">            scout.append(c1[c1.length - i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> scout.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"安卓逆向--二杀","date":"2019-07-28T12:09:38.000Z","_content":"\nMiFi 设备送修收到到发现系统固件被更改了。变了 136 版本，之前是 83 。这样一来的话就不得不接受每天被限  17G 的蛋疼事实了。\n\n\n\n<!--more-->\n\n\n\n但是，作为一个经常混迹于吾爱论坛的我来说，这是一件不能接受的，对，完全全无法接受。\n\n从客服那里拿到系统刷机包后便。开始了一番折腾，由于懂的不多，导致我走了不少的弯路。折腾了几天都没成功，那几天心情实在是有点低落。FUCK！\n\n#### 第一步 找到修改点\n\n脑子已经不好使了，只记得上次修改了某个值，但是不记得具体的数字是多少了。只好去搜索安卓手机统计流量用的方法。得到的结果是 TrafficStats 这个类的下的 \n\ngetMobileRxBytes() 方法，按图索骥找到要修改的数 1048576 然后将其修改成比它的数。一切就是像上次那样进行。重新编译并打包后，满怀期待地把它刷入设备中。\n\n开机。。。BOOM!!! 机器一直在重启。\n\n#### 第二步 出问题不要慌，看日志\n\n```powershell\nadb pull /sdcard .\n```\n\n使用上面的命令把日志文件拉下来之后打开查看，发现\n\n```java\njava.lang.UnsatisfiedLinkError dlopen failed: library XXX/libxxx.so not found\n```\n\n于是又开始了一翻搜索，其中过程不表，反正在这一阶段失败了很多次。\n\n~~在这个过程中，遭到了部门领导全部门最低绩效的评价。这个意思是劝退了吧。郑州工资本来就低的情况下，再降点可不就是劝退的意思 ？ （关于这个我想多说两句，其实从进公司起就觉得我这个岗位一个人完全可以处理的了。只是领导自己觉得一个人处理不来吧。所以自己私下里一直在学习。）~~\n\nComment: 记下来多是让自己不能释怀，还是自己能力不够。\n\n网上搜到的大多是有源码的情况下报这个错误怎么处理的。但是我这个完全是逆向出的东西，所以那个方法都不适用。最后还是找到了一个博客，博客里的那个才哥说他自己也是搜了很多地方都没有找到讨论这个问题的。他的方法就是检查以下几个文件、夹中是否有对应的 xxx.so 。\n\n```shell\n/system/etc/public.libraries.txt\n/system/vendor/public.libraries.txt\n/system/lib\n/system/vendor/lib\n```\n\n我查了一下果然没有。于是就分别添加了进去。\n\n#### 第三 成功啦\n\n把导致错误的地方改正之后就开始了刷入修改后的系统包。没有任何异常。\n\n### 总结\n\n面对问题一定不能慌，可是暂时放弃。因为如果一直没有思路的话，不管你怎么做都只是在耗着，对自己没有任何帮助。该放弃时就放弃。另外，就是注意与人的交流，虽然期间也去了论坛，也是给了一些思路，但是事后证明，那些是错误的。最后，做项目一定要条理分明，不然过程真的很痛苦。另外，安卓逆向还是很有意思的嘛，除了过程比较蛋疼之外。\n\n【参考链接】\n\n1. [Android 8.0 dlopen failed 问题](http://www.yanglajiao.com/article/ngyzqf/78991929)\n2. [Framework基础：Android N 公共so库怎么定义呢？](https://www.jianshu.com/p/4be3d1dafbec)\n3. [Android中public的So库的引用问题](http://huzhengyu.com/2018/05/05/Android%E4%B8%ADpublic%E7%9A%84So%E5%BA%93%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/)\n4. [浅谈Android系统编译apk后so文件在dlopen时出现linker权限问题](http://www.ishenping.com/ArtInfo/2114481.html)\n\n![假图一张](/images/pic.png)\n\n\n\n---\n\n更新于：2019/10/03\n\n---\n\n这次逆向的是最新设备的软件，版本号`22`。\n\n关键步骤：在安装包目录下添加lib/arm/libXXX.so。应该是他们在系统打包的时候将相关的东西整合到odex文件中了。\n\n\n\n---\n\n另：接安卓逆向项目\n\n---\n\n","source":"_posts/technique/记录一下136版本的修改结果.md","raw":"---\ntitle: 安卓逆向--二杀\ndate: 2019-07-28 20:09:38\ntags: 技术\n---\n\nMiFi 设备送修收到到发现系统固件被更改了。变了 136 版本，之前是 83 。这样一来的话就不得不接受每天被限  17G 的蛋疼事实了。\n\n\n\n<!--more-->\n\n\n\n但是，作为一个经常混迹于吾爱论坛的我来说，这是一件不能接受的，对，完全全无法接受。\n\n从客服那里拿到系统刷机包后便。开始了一番折腾，由于懂的不多，导致我走了不少的弯路。折腾了几天都没成功，那几天心情实在是有点低落。FUCK！\n\n#### 第一步 找到修改点\n\n脑子已经不好使了，只记得上次修改了某个值，但是不记得具体的数字是多少了。只好去搜索安卓手机统计流量用的方法。得到的结果是 TrafficStats 这个类的下的 \n\ngetMobileRxBytes() 方法，按图索骥找到要修改的数 1048576 然后将其修改成比它的数。一切就是像上次那样进行。重新编译并打包后，满怀期待地把它刷入设备中。\n\n开机。。。BOOM!!! 机器一直在重启。\n\n#### 第二步 出问题不要慌，看日志\n\n```powershell\nadb pull /sdcard .\n```\n\n使用上面的命令把日志文件拉下来之后打开查看，发现\n\n```java\njava.lang.UnsatisfiedLinkError dlopen failed: library XXX/libxxx.so not found\n```\n\n于是又开始了一翻搜索，其中过程不表，反正在这一阶段失败了很多次。\n\n~~在这个过程中，遭到了部门领导全部门最低绩效的评价。这个意思是劝退了吧。郑州工资本来就低的情况下，再降点可不就是劝退的意思 ？ （关于这个我想多说两句，其实从进公司起就觉得我这个岗位一个人完全可以处理的了。只是领导自己觉得一个人处理不来吧。所以自己私下里一直在学习。）~~\n\nComment: 记下来多是让自己不能释怀，还是自己能力不够。\n\n网上搜到的大多是有源码的情况下报这个错误怎么处理的。但是我这个完全是逆向出的东西，所以那个方法都不适用。最后还是找到了一个博客，博客里的那个才哥说他自己也是搜了很多地方都没有找到讨论这个问题的。他的方法就是检查以下几个文件、夹中是否有对应的 xxx.so 。\n\n```shell\n/system/etc/public.libraries.txt\n/system/vendor/public.libraries.txt\n/system/lib\n/system/vendor/lib\n```\n\n我查了一下果然没有。于是就分别添加了进去。\n\n#### 第三 成功啦\n\n把导致错误的地方改正之后就开始了刷入修改后的系统包。没有任何异常。\n\n### 总结\n\n面对问题一定不能慌，可是暂时放弃。因为如果一直没有思路的话，不管你怎么做都只是在耗着，对自己没有任何帮助。该放弃时就放弃。另外，就是注意与人的交流，虽然期间也去了论坛，也是给了一些思路，但是事后证明，那些是错误的。最后，做项目一定要条理分明，不然过程真的很痛苦。另外，安卓逆向还是很有意思的嘛，除了过程比较蛋疼之外。\n\n【参考链接】\n\n1. [Android 8.0 dlopen failed 问题](http://www.yanglajiao.com/article/ngyzqf/78991929)\n2. [Framework基础：Android N 公共so库怎么定义呢？](https://www.jianshu.com/p/4be3d1dafbec)\n3. [Android中public的So库的引用问题](http://huzhengyu.com/2018/05/05/Android%E4%B8%ADpublic%E7%9A%84So%E5%BA%93%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/)\n4. [浅谈Android系统编译apk后so文件在dlopen时出现linker权限问题](http://www.ishenping.com/ArtInfo/2114481.html)\n\n![假图一张](/images/pic.png)\n\n\n\n---\n\n更新于：2019/10/03\n\n---\n\n这次逆向的是最新设备的软件，版本号`22`。\n\n关键步骤：在安装包目录下添加lib/arm/libXXX.so。应该是他们在系统打包的时候将相关的东西整合到odex文件中了。\n\n\n\n---\n\n另：接安卓逆向项目\n\n---\n\n","slug":"technique/记录一下136版本的修改结果","published":1,"updated":"2020-03-20T07:42:35.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw68c004398ki0dxh4dfx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>MiFi 设备送修收到到发现系统固件被更改了。变了 136 版本，之前是 83 。这样一来的话就不得不接受每天被限  17G 的蛋疼事实了。</p>\n<a id=\"more\"></a>\n\n\n\n<p>但是，作为一个经常混迹于吾爱论坛的我来说，这是一件不能接受的，对，完全全无法接受。</p>\n<p>从客服那里拿到系统刷机包后便。开始了一番折腾，由于懂的不多，导致我走了不少的弯路。折腾了几天都没成功，那几天心情实在是有点低落。FUCK！</p>\n<h4 id=\"第一步-找到修改点\"><a href=\"#第一步-找到修改点\" class=\"headerlink\" title=\"第一步 找到修改点\"></a>第一步 找到修改点</h4><p>脑子已经不好使了，只记得上次修改了某个值，但是不记得具体的数字是多少了。只好去搜索安卓手机统计流量用的方法。得到的结果是 TrafficStats 这个类的下的 </p>\n<p>getMobileRxBytes() 方法，按图索骥找到要修改的数 1048576 然后将其修改成比它的数。一切就是像上次那样进行。重新编译并打包后，满怀期待地把它刷入设备中。</p>\n<p>开机。。。BOOM!!! 机器一直在重启。</p>\n<h4 id=\"第二步-出问题不要慌，看日志\"><a href=\"#第二步-出问题不要慌，看日志\" class=\"headerlink\" title=\"第二步 出问题不要慌，看日志\"></a>第二步 出问题不要慌，看日志</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb pull /sdcard .</span><br></pre></td></tr></table></figure>\n\n<p>使用上面的命令把日志文件拉下来之后打开查看，发现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.UnsatisfiedLinkError dlopen failed: library XXX/libxxx.so not found</span><br></pre></td></tr></table></figure>\n\n<p>于是又开始了一翻搜索，其中过程不表，反正在这一阶段失败了很多次。</p>\n<p><del>在这个过程中，遭到了部门领导全部门最低绩效的评价。这个意思是劝退了吧。郑州工资本来就低的情况下，再降点可不就是劝退的意思 ？ （关于这个我想多说两句，其实从进公司起就觉得我这个岗位一个人完全可以处理的了。只是领导自己觉得一个人处理不来吧。所以自己私下里一直在学习。）</del></p>\n<p>Comment: 记下来多是让自己不能释怀，还是自己能力不够。</p>\n<p>网上搜到的大多是有源码的情况下报这个错误怎么处理的。但是我这个完全是逆向出的东西，所以那个方法都不适用。最后还是找到了一个博客，博客里的那个才哥说他自己也是搜了很多地方都没有找到讨论这个问题的。他的方法就是检查以下几个文件、夹中是否有对应的 xxx.so 。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/system/etc/public.libraries.txt</span><br><span class=\"line\">/system/vendor/public.libraries.txt</span><br><span class=\"line\">/system/lib</span><br><span class=\"line\">/system/vendor/lib</span><br></pre></td></tr></table></figure>\n\n<p>我查了一下果然没有。于是就分别添加了进去。</p>\n<h4 id=\"第三-成功啦\"><a href=\"#第三-成功啦\" class=\"headerlink\" title=\"第三 成功啦\"></a>第三 成功啦</h4><p>把导致错误的地方改正之后就开始了刷入修改后的系统包。没有任何异常。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>面对问题一定不能慌，可是暂时放弃。因为如果一直没有思路的话，不管你怎么做都只是在耗着，对自己没有任何帮助。该放弃时就放弃。另外，就是注意与人的交流，虽然期间也去了论坛，也是给了一些思路，但是事后证明，那些是错误的。最后，做项目一定要条理分明，不然过程真的很痛苦。另外，安卓逆向还是很有意思的嘛，除了过程比较蛋疼之外。</p>\n<p>【参考链接】</p>\n<ol>\n<li><a href=\"http://www.yanglajiao.com/article/ngyzqf/78991929\" target=\"_blank\" rel=\"noopener\">Android 8.0 dlopen failed 问题</a></li>\n<li><a href=\"https://www.jianshu.com/p/4be3d1dafbec\" target=\"_blank\" rel=\"noopener\">Framework基础：Android N 公共so库怎么定义呢？</a></li>\n<li><a href=\"http://huzhengyu.com/2018/05/05/Android%E4%B8%ADpublic%E7%9A%84So%E5%BA%93%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/\" target=\"_blank\" rel=\"noopener\">Android中public的So库的引用问题</a></li>\n<li><a href=\"http://www.ishenping.com/ArtInfo/2114481.html\" target=\"_blank\" rel=\"noopener\">浅谈Android系统编译apk后so文件在dlopen时出现linker权限问题</a></li>\n</ol>\n<p><img src=\"/images/pic.png\" alt=\"假图一张\"></p>\n<hr>\n<p>更新于：2019/10/03</p>\n<hr>\n<p>这次逆向的是最新设备的软件，版本号<code>22</code>。</p>\n<p>关键步骤：在安装包目录下添加lib/arm/libXXX.so。应该是他们在系统打包的时候将相关的东西整合到odex文件中了。</p>\n<hr>\n<p>另：接安卓逆向项目</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>MiFi 设备送修收到到发现系统固件被更改了。变了 136 版本，之前是 83 。这样一来的话就不得不接受每天被限  17G 的蛋疼事实了。</p>","more":"<p>但是，作为一个经常混迹于吾爱论坛的我来说，这是一件不能接受的，对，完全全无法接受。</p>\n<p>从客服那里拿到系统刷机包后便。开始了一番折腾，由于懂的不多，导致我走了不少的弯路。折腾了几天都没成功，那几天心情实在是有点低落。FUCK！</p>\n<h4 id=\"第一步-找到修改点\"><a href=\"#第一步-找到修改点\" class=\"headerlink\" title=\"第一步 找到修改点\"></a>第一步 找到修改点</h4><p>脑子已经不好使了，只记得上次修改了某个值，但是不记得具体的数字是多少了。只好去搜索安卓手机统计流量用的方法。得到的结果是 TrafficStats 这个类的下的 </p>\n<p>getMobileRxBytes() 方法，按图索骥找到要修改的数 1048576 然后将其修改成比它的数。一切就是像上次那样进行。重新编译并打包后，满怀期待地把它刷入设备中。</p>\n<p>开机。。。BOOM!!! 机器一直在重启。</p>\n<h4 id=\"第二步-出问题不要慌，看日志\"><a href=\"#第二步-出问题不要慌，看日志\" class=\"headerlink\" title=\"第二步 出问题不要慌，看日志\"></a>第二步 出问题不要慌，看日志</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb pull /sdcard .</span><br></pre></td></tr></table></figure>\n\n<p>使用上面的命令把日志文件拉下来之后打开查看，发现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.UnsatisfiedLinkError dlopen failed: library XXX/libxxx.so not found</span><br></pre></td></tr></table></figure>\n\n<p>于是又开始了一翻搜索，其中过程不表，反正在这一阶段失败了很多次。</p>\n<p><del>在这个过程中，遭到了部门领导全部门最低绩效的评价。这个意思是劝退了吧。郑州工资本来就低的情况下，再降点可不就是劝退的意思 ？ （关于这个我想多说两句，其实从进公司起就觉得我这个岗位一个人完全可以处理的了。只是领导自己觉得一个人处理不来吧。所以自己私下里一直在学习。）</del></p>\n<p>Comment: 记下来多是让自己不能释怀，还是自己能力不够。</p>\n<p>网上搜到的大多是有源码的情况下报这个错误怎么处理的。但是我这个完全是逆向出的东西，所以那个方法都不适用。最后还是找到了一个博客，博客里的那个才哥说他自己也是搜了很多地方都没有找到讨论这个问题的。他的方法就是检查以下几个文件、夹中是否有对应的 xxx.so 。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/system/etc/public.libraries.txt</span><br><span class=\"line\">/system/vendor/public.libraries.txt</span><br><span class=\"line\">/system/lib</span><br><span class=\"line\">/system/vendor/lib</span><br></pre></td></tr></table></figure>\n\n<p>我查了一下果然没有。于是就分别添加了进去。</p>\n<h4 id=\"第三-成功啦\"><a href=\"#第三-成功啦\" class=\"headerlink\" title=\"第三 成功啦\"></a>第三 成功啦</h4><p>把导致错误的地方改正之后就开始了刷入修改后的系统包。没有任何异常。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>面对问题一定不能慌，可是暂时放弃。因为如果一直没有思路的话，不管你怎么做都只是在耗着，对自己没有任何帮助。该放弃时就放弃。另外，就是注意与人的交流，虽然期间也去了论坛，也是给了一些思路，但是事后证明，那些是错误的。最后，做项目一定要条理分明，不然过程真的很痛苦。另外，安卓逆向还是很有意思的嘛，除了过程比较蛋疼之外。</p>\n<p>【参考链接】</p>\n<ol>\n<li><a href=\"http://www.yanglajiao.com/article/ngyzqf/78991929\" target=\"_blank\" rel=\"noopener\">Android 8.0 dlopen failed 问题</a></li>\n<li><a href=\"https://www.jianshu.com/p/4be3d1dafbec\" target=\"_blank\" rel=\"noopener\">Framework基础：Android N 公共so库怎么定义呢？</a></li>\n<li><a href=\"http://huzhengyu.com/2018/05/05/Android%E4%B8%ADpublic%E7%9A%84So%E5%BA%93%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/\" target=\"_blank\" rel=\"noopener\">Android中public的So库的引用问题</a></li>\n<li><a href=\"http://www.ishenping.com/ArtInfo/2114481.html\" target=\"_blank\" rel=\"noopener\">浅谈Android系统编译apk后so文件在dlopen时出现linker权限问题</a></li>\n</ol>\n<p><img src=\"/images/pic.png\" alt=\"假图一张\"></p>\n<hr>\n<p>更新于：2019/10/03</p>\n<hr>\n<p>这次逆向的是最新设备的软件，版本号<code>22</code>。</p>\n<p>关键步骤：在安装包目录下添加lib/arm/libXXX.so。应该是他们在系统打包的时候将相关的东西整合到odex文件中了。</p>\n<hr>\n<p>另：接安卓逆向项目</p>\n<hr>"},{"title":"集合默认大小","date":"2019-10-14T03:04:32.000Z","keywords":null,"description":null,"_content":"\n这个是前天电话面试被问到了，之前是看了的，但是记得不是很清楚。今天又找到了一篇说这个的文章，这里抄下来，以便今后查阅。\n\n\n\n<!--more-->\n\n\n\nList 元素是有序的、可重复\n\nArrayList、Vector默认初始容量为10\n\nVector：线程安全，但速度慢\n\n　　　　底层数据结构是数组结构\n\n　　　　加载因子为1：即当 元素个数 超过 容量长度 时，进行扩容\n\n　　　　扩容增量：原容量的 1倍\n\n　　　　　　如 Vector的容量为10，一次扩容后是容量为20\n\nArrayList：线程不安全，查询速度快\n\n　　　　底层数据结构是数组结构\n\n　　　　扩容增量：原容量的 1.5倍\n\n　　　　　　如 ArrayList的容量为10，一次扩容后是容量为15\n\n见ArrayList源码:\n\n```java\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;   // 原来的容量\n    int newCapacity = oldCapacity + (oldCapacity >> 1);  // 新的容量，原来容量的1.5倍。\n    if (newCapacity - minCapacity < 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE > 0)  // 如果大于ArrayList 可以容许的最大容量，则设置为最大容量。\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);  // 最终利用Arrays.coppy 进行扩容，生成一个1.5倍元素的数组。（即例子中的15个元素的数组。）\n}\n```\n\nSet(集) 元素无序的、不可重复。\n\nHashSet：线程不安全，存取速度快\n\n　　　　　底层实现是一个HashMap（保存数据），实现Set接口\n\n　　　　　默认初始容量为16（为何是16，见下方对HashMap的描述）\n\n　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容\n\n　　　　　扩容增量：原容量的 1 倍\n\n　　　　　　如 HashSet的容量为16，一次扩容后是容量为32\n\n \n\nMap是一个双列集合\n\nHashMap：默认初始容量为16\n\n　　　　　（为何是16：16是2^4，可以提高查询效率，另外，32=16<<1       -->至于详细的原因可另行分析，或分析源代码）\n\n　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容\n\n　　　　　扩容增量：原容量的 1 倍\n\n　　　　　　如 HashSet的容量为16，一次扩容后是容量为32\n","source":"_posts/technique/集合默认大小.md","raw":"---\ntitle: 集合默认大小\ndate: 2019-10-14 11:04:32\ntags: 技术\nkeywords:\ndescription:\n---\n\n这个是前天电话面试被问到了，之前是看了的，但是记得不是很清楚。今天又找到了一篇说这个的文章，这里抄下来，以便今后查阅。\n\n\n\n<!--more-->\n\n\n\nList 元素是有序的、可重复\n\nArrayList、Vector默认初始容量为10\n\nVector：线程安全，但速度慢\n\n　　　　底层数据结构是数组结构\n\n　　　　加载因子为1：即当 元素个数 超过 容量长度 时，进行扩容\n\n　　　　扩容增量：原容量的 1倍\n\n　　　　　　如 Vector的容量为10，一次扩容后是容量为20\n\nArrayList：线程不安全，查询速度快\n\n　　　　底层数据结构是数组结构\n\n　　　　扩容增量：原容量的 1.5倍\n\n　　　　　　如 ArrayList的容量为10，一次扩容后是容量为15\n\n见ArrayList源码:\n\n```java\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;   // 原来的容量\n    int newCapacity = oldCapacity + (oldCapacity >> 1);  // 新的容量，原来容量的1.5倍。\n    if (newCapacity - minCapacity < 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE > 0)  // 如果大于ArrayList 可以容许的最大容量，则设置为最大容量。\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);  // 最终利用Arrays.coppy 进行扩容，生成一个1.5倍元素的数组。（即例子中的15个元素的数组。）\n}\n```\n\nSet(集) 元素无序的、不可重复。\n\nHashSet：线程不安全，存取速度快\n\n　　　　　底层实现是一个HashMap（保存数据），实现Set接口\n\n　　　　　默认初始容量为16（为何是16，见下方对HashMap的描述）\n\n　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容\n\n　　　　　扩容增量：原容量的 1 倍\n\n　　　　　　如 HashSet的容量为16，一次扩容后是容量为32\n\n \n\nMap是一个双列集合\n\nHashMap：默认初始容量为16\n\n　　　　　（为何是16：16是2^4，可以提高查询效率，另外，32=16<<1       -->至于详细的原因可另行分析，或分析源代码）\n\n　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容\n\n　　　　　扩容增量：原容量的 1 倍\n\n　　　　　　如 HashSet的容量为16，一次扩容后是容量为32\n","slug":"technique/集合默认大小","published":1,"updated":"2020-03-20T07:42:35.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw69g004p98kihh2k7g7k","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>这个是前天电话面试被问到了，之前是看了的，但是记得不是很清楚。今天又找到了一篇说这个的文章，这里抄下来，以便今后查阅。</p>\n<a id=\"more\"></a>\n\n\n\n<p>List 元素是有序的、可重复</p>\n<p>ArrayList、Vector默认初始容量为10</p>\n<p>Vector：线程安全，但速度慢</p>\n<p>　　　　底层数据结构是数组结构</p>\n<p>　　　　加载因子为1：即当 元素个数 超过 容量长度 时，进行扩容</p>\n<p>　　　　扩容增量：原容量的 1倍</p>\n<p>　　　　　　如 Vector的容量为10，一次扩容后是容量为20</p>\n<p>ArrayList：线程不安全，查询速度快</p>\n<p>　　　　底层数据结构是数组结构</p>\n<p>　　　　扩容增量：原容量的 1.5倍</p>\n<p>　　　　　　如 ArrayList的容量为10，一次扩容后是容量为15</p>\n<p>见ArrayList源码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> oldCapacity = elementData.length;   <span class=\"comment\">// 原来的容量</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class=\"number\">1</span>);  <span class=\"comment\">// 新的容量，原来容量的1.5倍。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - minCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        newCapacity = minCapacity;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class=\"number\">0</span>)  <span class=\"comment\">// 如果大于ArrayList 可以容许的最大容量，则设置为最大容量。</span></span><br><span class=\"line\">        newCapacity = hugeCapacity(minCapacity);</span><br><span class=\"line\">    <span class=\"comment\">// minCapacity is usually close to size, so this is a win:</span></span><br><span class=\"line\">    elementData = Arrays.copyOf(elementData, newCapacity);  <span class=\"comment\">// 最终利用Arrays.coppy 进行扩容，生成一个1.5倍元素的数组。（即例子中的15个元素的数组。）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Set(集) 元素无序的、不可重复。</p>\n<p>HashSet：线程不安全，存取速度快</p>\n<p>　　　　　底层实现是一个HashMap（保存数据），实现Set接口</p>\n<p>　　　　　默认初始容量为16（为何是16，见下方对HashMap的描述）</p>\n<p>　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容</p>\n<p>　　　　　扩容增量：原容量的 1 倍</p>\n<p>　　　　　　如 HashSet的容量为16，一次扩容后是容量为32</p>\n<p>Map是一个双列集合</p>\n<p>HashMap：默认初始容量为16</p>\n<p>　　　　　（为何是16：16是2^4，可以提高查询效率，另外，32=16&lt;&lt;1       –&gt;至于详细的原因可另行分析，或分析源代码）</p>\n<p>　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容</p>\n<p>　　　　　扩容增量：原容量的 1 倍</p>\n<p>　　　　　　如 HashSet的容量为16，一次扩容后是容量为32</p>\n","site":{"data":{}},"excerpt":"<p>这个是前天电话面试被问到了，之前是看了的，但是记得不是很清楚。今天又找到了一篇说这个的文章，这里抄下来，以便今后查阅。</p>","more":"<p>List 元素是有序的、可重复</p>\n<p>ArrayList、Vector默认初始容量为10</p>\n<p>Vector：线程安全，但速度慢</p>\n<p>　　　　底层数据结构是数组结构</p>\n<p>　　　　加载因子为1：即当 元素个数 超过 容量长度 时，进行扩容</p>\n<p>　　　　扩容增量：原容量的 1倍</p>\n<p>　　　　　　如 Vector的容量为10，一次扩容后是容量为20</p>\n<p>ArrayList：线程不安全，查询速度快</p>\n<p>　　　　底层数据结构是数组结构</p>\n<p>　　　　扩容增量：原容量的 1.5倍</p>\n<p>　　　　　　如 ArrayList的容量为10，一次扩容后是容量为15</p>\n<p>见ArrayList源码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> oldCapacity = elementData.length;   <span class=\"comment\">// 原来的容量</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class=\"number\">1</span>);  <span class=\"comment\">// 新的容量，原来容量的1.5倍。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - minCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        newCapacity = minCapacity;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class=\"number\">0</span>)  <span class=\"comment\">// 如果大于ArrayList 可以容许的最大容量，则设置为最大容量。</span></span><br><span class=\"line\">        newCapacity = hugeCapacity(minCapacity);</span><br><span class=\"line\">    <span class=\"comment\">// minCapacity is usually close to size, so this is a win:</span></span><br><span class=\"line\">    elementData = Arrays.copyOf(elementData, newCapacity);  <span class=\"comment\">// 最终利用Arrays.coppy 进行扩容，生成一个1.5倍元素的数组。（即例子中的15个元素的数组。）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Set(集) 元素无序的、不可重复。</p>\n<p>HashSet：线程不安全，存取速度快</p>\n<p>　　　　　底层实现是一个HashMap（保存数据），实现Set接口</p>\n<p>　　　　　默认初始容量为16（为何是16，见下方对HashMap的描述）</p>\n<p>　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容</p>\n<p>　　　　　扩容增量：原容量的 1 倍</p>\n<p>　　　　　　如 HashSet的容量为16，一次扩容后是容量为32</p>\n<p>Map是一个双列集合</p>\n<p>HashMap：默认初始容量为16</p>\n<p>　　　　　（为何是16：16是2^4，可以提高查询效率，另外，32=16&lt;&lt;1       –&gt;至于详细的原因可另行分析，或分析源代码）</p>\n<p>　　　　　加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容</p>\n<p>　　　　　扩容增量：原容量的 1 倍</p>\n<p>　　　　　　如 HashSet的容量为16，一次扩容后是容量为32</p>"},{"title":"Try on BCH","date":"2020-03-26T11:45:31.000Z","keywords":"百度云 BCH","description":"使用BCH 踩的坑","_content":"\n本文主要记录使用BCH时踩到的坑。\n\n\n\n<!--more-->\n\n\n\n> 证书坑\n>\n> > 配置证书时的坑，由于使用了 Let's encrypt 的自签名证书在配置的时候着实费了少时间。**解决方法是服务器证书填生成的证书包里的fullchain.cer,私钥部分填key结尾的那个**\n> >\n> \n\n> 重定向的坑\n>\n> > wordpress中配置了https后发现在登录时浏览器会返回重定向过多问题。还有就是页面会出现加载不完整的问题，浏览器控制台出现403错误，这是由于wordpress中有部分资源不没有用https方式请求导致。**解决方法是将如下代码加进wp-config.php中即可。**\n> >\n> > ```php\n> > $_SERVER['HTTPS'] = 'on';\n> > define('FORCE_SSL_LOGIN', true);\n> > define('FORCE_SSL_ADMIN', true);\n> > ```\n> >\n\n以上就是使用BCH过程中遇到的坑，希望有缘人能搜到这个解决你的问题。还可以用邮箱联系我\n\nadmin@stupromo.com\n\n","source":"_posts/mynote/Cloud/Try-on-BCH.md","raw":"---\ntitle: Try on BCH\ndate: 2020-03-26 19:45:31\ntags: Cloud \nkeywords: 百度云 BCH\ndescription: 使用BCH 踩的坑\n---\n\n本文主要记录使用BCH时踩到的坑。\n\n\n\n<!--more-->\n\n\n\n> 证书坑\n>\n> > 配置证书时的坑，由于使用了 Let's encrypt 的自签名证书在配置的时候着实费了少时间。**解决方法是服务器证书填生成的证书包里的fullchain.cer,私钥部分填key结尾的那个**\n> >\n> \n\n> 重定向的坑\n>\n> > wordpress中配置了https后发现在登录时浏览器会返回重定向过多问题。还有就是页面会出现加载不完整的问题，浏览器控制台出现403错误，这是由于wordpress中有部分资源不没有用https方式请求导致。**解决方法是将如下代码加进wp-config.php中即可。**\n> >\n> > ```php\n> > $_SERVER['HTTPS'] = 'on';\n> > define('FORCE_SSL_LOGIN', true);\n> > define('FORCE_SSL_ADMIN', true);\n> > ```\n> >\n\n以上就是使用BCH过程中遇到的坑，希望有缘人能搜到这个解决你的问题。还可以用邮箱联系我\n\nadmin@stupromo.com\n\n","slug":"mynote/Cloud/Try-on-BCH","published":1,"updated":"2020-03-27T00:36:12.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw69q004r98kiduhchxqp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>本文主要记录使用BCH时踩到的坑。</p>\n<a id=\"more\"></a>\n\n\n\n<blockquote>\n<p>证书坑</p>\n<blockquote>\n<p>配置证书时的坑，由于使用了 Let’s encrypt 的自签名证书在配置的时候着实费了少时间。<strong>解决方法是服务器证书填生成的证书包里的fullchain.cer,私钥部分填key结尾的那个</strong></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>重定向的坑</p>\n<blockquote>\n<p>wordpress中配置了https后发现在登录时浏览器会返回重定向过多问题。还有就是页面会出现加载不完整的问题，浏览器控制台出现403错误，这是由于wordpress中有部分资源不没有用https方式请求导致。<strong>解决方法是将如下代码加进wp-config.php中即可。</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$_SERVER[<span class=\"string\">'HTTPS'</span>] = <span class=\"string\">'on'</span>;</span><br><span class=\"line\">define(<span class=\"string\">'FORCE_SSL_LOGIN'</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">define(<span class=\"string\">'FORCE_SSL_ADMIN'</span>, <span class=\"keyword\">true</span>);</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n</blockquote>\n<p>以上就是使用BCH过程中遇到的坑，希望有缘人能搜到这个解决你的问题。还可以用邮箱联系我</p>\n<p><a href=\"mailto:admin@stupromo.com\">admin@stupromo.com</a></p>\n","site":{"data":{}},"excerpt":"<p>本文主要记录使用BCH时踩到的坑。</p>","more":"<blockquote>\n<p>证书坑</p>\n<blockquote>\n<p>配置证书时的坑，由于使用了 Let’s encrypt 的自签名证书在配置的时候着实费了少时间。<strong>解决方法是服务器证书填生成的证书包里的fullchain.cer,私钥部分填key结尾的那个</strong></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>重定向的坑</p>\n<blockquote>\n<p>wordpress中配置了https后发现在登录时浏览器会返回重定向过多问题。还有就是页面会出现加载不完整的问题，浏览器控制台出现403错误，这是由于wordpress中有部分资源不没有用https方式请求导致。<strong>解决方法是将如下代码加进wp-config.php中即可。</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$_SERVER[<span class=\"string\">'HTTPS'</span>] = <span class=\"string\">'on'</span>;</span><br><span class=\"line\">define(<span class=\"string\">'FORCE_SSL_LOGIN'</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">define(<span class=\"string\">'FORCE_SSL_ADMIN'</span>, <span class=\"keyword\">true</span>);</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n</blockquote>\n<p>以上就是使用BCH过程中遇到的坑，希望有缘人能搜到这个解决你的问题。还可以用邮箱联系我</p>\n<p><a href=\"mailto:admin@stupromo.com\">admin@stupromo.com</a></p>"},{"title":"notes of daliy use","date":"2020-01-20T09:09:45.000Z","keywords":null,"description":null,"_content":"\nScripts that been used frequently.\n\n常用脚本：\n\n\n\n<!--more-->\n\n\n\nIssue a ssh key \n\n```\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n```\n\nIssue cert:\n\n```\ncurl https://get.acme.sh | sh\n```\n\nOr:\n\n```\nwget -O -  https://get.acme.sh | sh\n```\n\nV2ray:\n\n```bash\nbash <(curl -L -s https://install.direct/go.sh)\n```\n\nShadowsocks:\n\n```text\nhttps://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n```\n\nGit:\n\n```\ngit config --global https.proxy http://127.0.0.1:10086\n\ngit config --global https.proxy https://127.0.0.1:10086\n\ngit config --global --unset http.proxy\n\ngit config --global --unset https.proxy\n```\n\n","source":"_posts/mynote/Linux/notes-of-daily-use.md","raw":"---\ntitle: notes of daliy use\ndate: 2020-01-20 17:09:45\ntags: mynotes Linux\nkeywords:\ndescription:\n---\n\nScripts that been used frequently.\n\n常用脚本：\n\n\n\n<!--more-->\n\n\n\nIssue a ssh key \n\n```\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n```\n\nIssue cert:\n\n```\ncurl https://get.acme.sh | sh\n```\n\nOr:\n\n```\nwget -O -  https://get.acme.sh | sh\n```\n\nV2ray:\n\n```bash\nbash <(curl -L -s https://install.direct/go.sh)\n```\n\nShadowsocks:\n\n```text\nhttps://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n```\n\nGit:\n\n```\ngit config --global https.proxy http://127.0.0.1:10086\n\ngit config --global https.proxy https://127.0.0.1:10086\n\ngit config --global --unset http.proxy\n\ngit config --global --unset https.proxy\n```\n\n","slug":"mynote/Linux/notes-of-daily-use","published":1,"updated":"2020-03-20T07:42:35.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw69u004s98kihovxduyq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Scripts that been used frequently.</p>\n<p>常用脚本：</p>\n<a id=\"more\"></a>\n\n\n\n<p>Issue a ssh key </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Issue cert:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:&#x2F;&#x2F;get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n\n<p>Or:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O -  https:&#x2F;&#x2F;get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n\n<p>V2ray:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure>\n\n<p>Shadowsocks:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;teddysun&#x2F;shadowsocks_install&#x2F;master&#x2F;shadowsocks-all.sh</span><br></pre></td></tr></table></figure>\n\n<p>Git:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global https.proxy http:&#x2F;&#x2F;127.0.0.1:10086</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:10086</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Scripts that been used frequently.</p>\n<p>常用脚本：</p>","more":"<p>Issue a ssh key </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Issue cert:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:&#x2F;&#x2F;get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n\n<p>Or:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O -  https:&#x2F;&#x2F;get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n\n<p>V2ray:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure>\n\n<p>Shadowsocks:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;teddysun&#x2F;shadowsocks_install&#x2F;master&#x2F;shadowsocks-all.sh</span><br></pre></td></tr></table></figure>\n\n<p>Git:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global https.proxy http:&#x2F;&#x2F;127.0.0.1:10086</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:10086</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>"},{"title":"20190827学习笔记","date":"2019-08-27T14:09:40.000Z","_content":"\n今天学习了 Spring 的配置：\n\n\n\n<!--more-->\n\n\n\n一是基于 XML 文件的配置；二是基于配置类的配置。其中第一种文件需要一个XML配置文件在使用Bean时需要从 xml 文件中加载需要的 bean 。第二种是写一个配置类，在配置类中进行相关的配置,以下是示例代码。\n\n```java\npackage com.xxx.config;\nimport com.mchange.v2.c3p0.ComboPooledDataSource;\nimport com.mchange.v2.c3p0.DataSources;\nimport org.apache.commons.dbutils.QueryRunner;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Scope;\nimport javax.sql.DataSource;\nimport java.beans.PropertyVetoException;\n\n/**\n * 该类是一个配置类，它的作用和bean.xml是一样的\n * SPRING中的新注解\n * CONFIGRATION\n * 作用：指定当前类是一个配置类\n * 细节：当配置类作用AnnotationConfigApplicationContext对象创建的参数时，该注解可以不写\n * COMPONENTCSCAN\n * 作用：用于通过此注解指定spring 在创建容器时要扫描的包\n * 属性：\n * value: 它和basePackages的作用是一样的，都是用于包扫描.使用此注解相当于在xml中配置了：\n * <context:component-scan base-package=\"com.luopandeng\"/>\n * Bean\n * 作用：用于把当前方法的返回值作为Bean对象存入spring的ioc容器中\n * 属性：name: 用于指定bean的id.当不写时默认值是当前方法的名称\n * 细节：当我们使用注解配置方法时，如果方法有参数，spring 框架会去容器中查找有没有可用的bean\t对象。\n * 查找的方式和autowired注解的作用是一样的\n * @PropertySource\n *  作用：用于指定properties 文件的位置\n *  性情：文件的名称和路径\n *      关键字：classpath 表示类路径\n */\n@ComponentScan(basePackages = {\"com.luopandeng\"})\n@Configuration\npublic class SpringConfiguration {\n/**\n * Configration Code\n */\n}\n```\n\n总结，xml 方件配置是通过读取配置文件利用反射的方式创建 bean，而配置类则是通过直接创建对象的方式进行 bean 的创建。这个描述可能不准确。","source":"_posts/mynote/Spring/20190827学习笔记.md","raw":"---\ntitle: 20190827学习笔记\ndate: 2019-08-27 22:09:40\ntags: 学习笔记\n---\n\n今天学习了 Spring 的配置：\n\n\n\n<!--more-->\n\n\n\n一是基于 XML 文件的配置；二是基于配置类的配置。其中第一种文件需要一个XML配置文件在使用Bean时需要从 xml 文件中加载需要的 bean 。第二种是写一个配置类，在配置类中进行相关的配置,以下是示例代码。\n\n```java\npackage com.xxx.config;\nimport com.mchange.v2.c3p0.ComboPooledDataSource;\nimport com.mchange.v2.c3p0.DataSources;\nimport org.apache.commons.dbutils.QueryRunner;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Scope;\nimport javax.sql.DataSource;\nimport java.beans.PropertyVetoException;\n\n/**\n * 该类是一个配置类，它的作用和bean.xml是一样的\n * SPRING中的新注解\n * CONFIGRATION\n * 作用：指定当前类是一个配置类\n * 细节：当配置类作用AnnotationConfigApplicationContext对象创建的参数时，该注解可以不写\n * COMPONENTCSCAN\n * 作用：用于通过此注解指定spring 在创建容器时要扫描的包\n * 属性：\n * value: 它和basePackages的作用是一样的，都是用于包扫描.使用此注解相当于在xml中配置了：\n * <context:component-scan base-package=\"com.luopandeng\"/>\n * Bean\n * 作用：用于把当前方法的返回值作为Bean对象存入spring的ioc容器中\n * 属性：name: 用于指定bean的id.当不写时默认值是当前方法的名称\n * 细节：当我们使用注解配置方法时，如果方法有参数，spring 框架会去容器中查找有没有可用的bean\t对象。\n * 查找的方式和autowired注解的作用是一样的\n * @PropertySource\n *  作用：用于指定properties 文件的位置\n *  性情：文件的名称和路径\n *      关键字：classpath 表示类路径\n */\n@ComponentScan(basePackages = {\"com.luopandeng\"})\n@Configuration\npublic class SpringConfiguration {\n/**\n * Configration Code\n */\n}\n```\n\n总结，xml 方件配置是通过读取配置文件利用反射的方式创建 bean，而配置类则是通过直接创建对象的方式进行 bean 的创建。这个描述可能不准确。","slug":"mynote/Spring/20190827学习笔记","published":1,"updated":"2020-03-20T07:42:35.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8axw6ac004x98kidi2wf9sb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天学习了 Spring 的配置：</p>\n<a id=\"more\"></a>\n\n\n\n<p>一是基于 XML 文件的配置；二是基于配置类的配置。其中第一种文件需要一个XML配置文件在使用Bean时需要从 xml 文件中加载需要的 bean 。第二种是写一个配置类，在配置类中进行相关的配置,以下是示例代码。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xxx.config;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mchange.v2.c3p0.DataSources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Scope;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.beans.PropertyVetoException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 该类是一个配置类，它的作用和bean.xml是一样的</span></span><br><span class=\"line\"><span class=\"comment\"> * SPRING中的新注解</span></span><br><span class=\"line\"><span class=\"comment\"> * CONFIGRATION</span></span><br><span class=\"line\"><span class=\"comment\"> * 作用：指定当前类是一个配置类</span></span><br><span class=\"line\"><span class=\"comment\"> * 细节：当配置类作用AnnotationConfigApplicationContext对象创建的参数时，该注解可以不写</span></span><br><span class=\"line\"><span class=\"comment\"> * COMPONENTCSCAN</span></span><br><span class=\"line\"><span class=\"comment\"> * 作用：用于通过此注解指定spring 在创建容器时要扫描的包</span></span><br><span class=\"line\"><span class=\"comment\"> * 属性：</span></span><br><span class=\"line\"><span class=\"comment\"> * value: 它和basePackages的作用是一样的，都是用于包扫描.使用此注解相当于在xml中配置了：</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;context:component-scan base-package=\"com.luopandeng\"/&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * Bean</span></span><br><span class=\"line\"><span class=\"comment\"> * 作用：用于把当前方法的返回值作为Bean对象存入spring的ioc容器中</span></span><br><span class=\"line\"><span class=\"comment\"> * 属性：name: 用于指定bean的id.当不写时默认值是当前方法的名称</span></span><br><span class=\"line\"><span class=\"comment\"> * 细节：当我们使用注解配置方法时，如果方法有参数，spring 框架会去容器中查找有没有可用的bean\t对象。</span></span><br><span class=\"line\"><span class=\"comment\"> * 查找的方式和autowired注解的作用是一样的</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@PropertySource</span></span></span><br><span class=\"line\"><span class=\"comment\"> *  作用：用于指定properties 文件的位置</span></span><br><span class=\"line\"><span class=\"comment\"> *  性情：文件的名称和路径</span></span><br><span class=\"line\"><span class=\"comment\"> *      关键字：classpath 表示类路径</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan</span>(basePackages = &#123;<span class=\"string\">\"com.luopandeng\"</span>&#125;)</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringConfiguration</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Configration Code</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结，xml 方件配置是通过读取配置文件利用反射的方式创建 bean，而配置类则是通过直接创建对象的方式进行 bean 的创建。这个描述可能不准确。</p>\n","site":{"data":{}},"excerpt":"<p>今天学习了 Spring 的配置：</p>","more":"<p>一是基于 XML 文件的配置；二是基于配置类的配置。其中第一种文件需要一个XML配置文件在使用Bean时需要从 xml 文件中加载需要的 bean 。第二种是写一个配置类，在配置类中进行相关的配置,以下是示例代码。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xxx.config;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mchange.v2.c3p0.DataSources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Scope;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.beans.PropertyVetoException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 该类是一个配置类，它的作用和bean.xml是一样的</span></span><br><span class=\"line\"><span class=\"comment\"> * SPRING中的新注解</span></span><br><span class=\"line\"><span class=\"comment\"> * CONFIGRATION</span></span><br><span class=\"line\"><span class=\"comment\"> * 作用：指定当前类是一个配置类</span></span><br><span class=\"line\"><span class=\"comment\"> * 细节：当配置类作用AnnotationConfigApplicationContext对象创建的参数时，该注解可以不写</span></span><br><span class=\"line\"><span class=\"comment\"> * COMPONENTCSCAN</span></span><br><span class=\"line\"><span class=\"comment\"> * 作用：用于通过此注解指定spring 在创建容器时要扫描的包</span></span><br><span class=\"line\"><span class=\"comment\"> * 属性：</span></span><br><span class=\"line\"><span class=\"comment\"> * value: 它和basePackages的作用是一样的，都是用于包扫描.使用此注解相当于在xml中配置了：</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;context:component-scan base-package=\"com.luopandeng\"/&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * Bean</span></span><br><span class=\"line\"><span class=\"comment\"> * 作用：用于把当前方法的返回值作为Bean对象存入spring的ioc容器中</span></span><br><span class=\"line\"><span class=\"comment\"> * 属性：name: 用于指定bean的id.当不写时默认值是当前方法的名称</span></span><br><span class=\"line\"><span class=\"comment\"> * 细节：当我们使用注解配置方法时，如果方法有参数，spring 框架会去容器中查找有没有可用的bean\t对象。</span></span><br><span class=\"line\"><span class=\"comment\"> * 查找的方式和autowired注解的作用是一样的</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@PropertySource</span></span></span><br><span class=\"line\"><span class=\"comment\"> *  作用：用于指定properties 文件的位置</span></span><br><span class=\"line\"><span class=\"comment\"> *  性情：文件的名称和路径</span></span><br><span class=\"line\"><span class=\"comment\"> *      关键字：classpath 表示类路径</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan</span>(basePackages = &#123;<span class=\"string\">\"com.luopandeng\"</span>&#125;)</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringConfiguration</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Configration Code</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结，xml 方件配置是通过读取配置文件利用反射的方式创建 bean，而配置类则是通过直接创建对象的方式进行 bean 的创建。这个描述可能不准确。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck8axw64p000498ki6yh8eara","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw64u000798kidymj0qfm"},{"post_id":"ck8axw647000098ki114kak73","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw64w000998ki0lqb4265"},{"post_id":"ck8axw64r000598ki8nc02p0e","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw64y000c98ki5os616he"},{"post_id":"ck8axw64i000198kigw1ybhzu","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw64z000e98kig46cc3ch"},{"post_id":"ck8axw64w000a98kibukv204l","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw651000g98ki5sk3a3xp"},{"post_id":"ck8axw64y000d98kic52ze90v","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw652000i98kie2l5en96"},{"post_id":"ck8axw64m000398ki5cm6fqfk","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw654000l98kidm9o4g09"},{"post_id":"ck8axw64z000f98ki6dg4c7e7","tag_id":"ck8axw64k000298ki7y3z375r","_id":"ck8axw657000n98kidehk6r0f"},{"post_id":"ck8axw651000h98ki8fshhz3n","tag_id":"ck8axw653000k98kicbg746bt","_id":"ck8axw65c000r98kif3iq54gj"},{"post_id":"ck8axw652000j98ki356ndw4m","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65g000w98kidkb011cl"},{"post_id":"ck8axw65e000t98kier5ycdyc","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65h000y98ki9fia0qec"},{"post_id":"ck8axw654000m98kibyydeuj6","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65j001198ki5l2e15j4"},{"post_id":"ck8axw65i001098ki2qgp8ngs","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65m001498ki4dxq75e6"},{"post_id":"ck8axw657000o98kif5cj7ic6","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65n001698kieu0x5qq2"},{"post_id":"ck8axw65j001298kihp24asnd","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65o001998kif3hhcl77"},{"post_id":"ck8axw65m001598ki2v4b302t","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65q001b98ki9lzl52hc"},{"post_id":"ck8axw659000p98ki8shrd8ze","tag_id":"ck8axw65k001398ki08a40gsz","_id":"ck8axw65r001e98kih0ydemw7"},{"post_id":"ck8axw65n001798ki9a1z7rwb","tag_id":"ck8axw65k001398ki08a40gsz","_id":"ck8axw65t001g98ki42jl67kx"},{"post_id":"ck8axw65p001a98kic2km6c7a","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65v001j98ki1nx9b24a"},{"post_id":"ck8axw65c000s98kiddoe2kbg","tag_id":"ck8axw65k001398ki08a40gsz","_id":"ck8axw65x001l98ki7g6u9clv"},{"post_id":"ck8axw65q001c98kihnnb19jp","tag_id":"ck8axw65b000q98ki0jn95ahq","_id":"ck8axw65y001o98ki1j0d2onw"},{"post_id":"ck8axw65f000v98ki41y79yrx","tag_id":"ck8axw65k001398ki08a40gsz","_id":"ck8axw660001q98ki8q2t4rbh"},{"post_id":"ck8axw65h000x98ki31lt0rf7","tag_id":"ck8axw65k001398ki08a40gsz","_id":"ck8axw661001s98ki3jle2smb"},{"post_id":"ck8axw65s001f98ki4sfa9nkd","tag_id":"ck8axw65y001n98kibd4m8em7","_id":"ck8axw663001v98ki3l9tee1i"},{"post_id":"ck8axw65u001h98kihmwc12bz","tag_id":"ck8axw661001t98kickiweppz","_id":"ck8axw66a001z98kidsmfa079"},{"post_id":"ck8axw65v001k98kifseq9goa","tag_id":"ck8axw669001y98ki4see0m4q","_id":"ck8axw66e002498ki61l35fd1"},{"post_id":"ck8axw65y001p98ki7kqy37yj","tag_id":"ck8axw66c002298ki4d6qcimk","_id":"ck8axw66i002898ki0tbg63ry"},{"post_id":"ck8axw66d002398kief2w06w3","tag_id":"ck8axw66g002698ki3diz588f","_id":"ck8axw66n002c98kihenyhvko"},{"post_id":"ck8axw66h002798ki1gcifvp0","tag_id":"ck8axw66n002b98ki0gdw98n3","_id":"ck8axw66s002g98kiao0s2a7x"},{"post_id":"ck8axw66r002f98ki477c9vm3","tag_id":"ck8axw66c002298ki4d6qcimk","_id":"ck8axw66u002i98ki8xcnahjf"},{"post_id":"ck8axw66t002h98kibjhfcr5x","tag_id":"ck8axw66x002k98ki83kw96lw","_id":"ck8axw672002p98kieoyh8mhl"},{"post_id":"ck8axw672002q98ki5lj5aacg","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw676002t98ki37yz46j8"},{"post_id":"ck8axw66u002j98ki1k5g7wjk","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw678002v98kici57fphg"},{"post_id":"ck8axw674002r98ki1x6bby3k","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw67a002y98ki2a3ma8t4"},{"post_id":"ck8axw676002u98ki9iihd7bd","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw67c003098ki2d1sb1z7"},{"post_id":"ck8axw66y002l98ki2e9f5o7k","tag_id":"ck8axw675002s98ki2sppc4cf","_id":"ck8axw67e003398ki4apu6yhg"},{"post_id":"ck8axw67b002z98ki54jyhts2","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw67f003598kienda47d7"},{"post_id":"ck8axw66z002m98ki40w8ft3u","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw67i003898kic5m88s7v"},{"post_id":"ck8axw671002n98kigpgp9x1a","tag_id":"ck8axw672002o98ki71wp82vn","_id":"ck8axw67m003a98kieq964wwp"},{"post_id":"ck8axw67i003998kid13ecrgm","tag_id":"ck8axw67h003798kif3okgf7n","_id":"ck8axw67o003c98ki6n197wwj"},{"post_id":"ck8axw679002w98kihernb0z0","tag_id":"ck8axw67h003798kif3okgf7n","_id":"ck8axw67r003f98ki272re3ys"},{"post_id":"ck8axw67c003198kidn4mhex6","tag_id":"ck8axw67h003798kif3okgf7n","_id":"ck8axw67u003j98kia4ix778i"},{"post_id":"ck8axw67e003498ki01975dqo","tag_id":"ck8axw67h003798kif3okgf7n","_id":"ck8axw67x003n98ki4u7xbavj"},{"post_id":"ck8axw67f003698kic2hu71im","tag_id":"ck8axw67h003798kif3okgf7n","_id":"ck8axw681003r98kiesyf68w6"},{"post_id":"ck8axw67m003b98ki33js73dy","tag_id":"ck8axw67z003p98kig0fiawy9","_id":"ck8axw684003v98kif7y3esy7"},{"post_id":"ck8axw67p003e98ki8wikdwrz","tag_id":"ck8axw684003u98kicz3n5c01","_id":"ck8axw68a004098ki27u26q0g"},{"post_id":"ck8axw67r003g98kibmiy2y59","tag_id":"ck8axw688003y98ki82231fvl","_id":"ck8axw68d004498ki3dju7xpu"},{"post_id":"ck8axw68c004398ki0dxh4dfx","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68d004598kidpeg8j1f"},{"post_id":"ck8axw67t003i98ki7vhg98d8","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68g004798ki7saj0pgv"},{"post_id":"ck8axw67u003k98ki1d5vhr3o","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68i004998ki72m47mav"},{"post_id":"ck8axw67v003m98kigi2e6oez","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68j004b98kia8k82ywh"},{"post_id":"ck8axw67y003o98ki7nykhmiq","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68k004d98kiai1i3gh9"},{"post_id":"ck8axw681003s98ki2phn7927","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68o004f98ki46hjfhrg"},{"post_id":"ck8axw683003t98kidphc5fkb","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68q004h98kifuu8e9iv"},{"post_id":"ck8axw685003w98kigh602ri9","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68r004j98ki1s1d9ogh"},{"post_id":"ck8axw686003x98ki4vrihsbf","tag_id":"ck8axw68q004i98ki69703xtg","_id":"ck8axw68r004l98ki9iruhxbr"},{"post_id":"ck8axw689003z98ki7e6q7nfw","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68s004n98ki9zryfnvs"},{"post_id":"ck8axw68a004198ki448m0kyq","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw68t004o98ki6y6i6opt"},{"post_id":"ck8axw69g004p98kihh2k7g7k","tag_id":"ck8axw68b004298kif0dz35yg","_id":"ck8axw69i004q98kifcs6ds9j"},{"post_id":"ck8axw69q004r98kiduhchxqp","tag_id":"ck8axw69x004t98kibvry02f5","_id":"ck8axw6a0004v98ki19xb1xxq"},{"post_id":"ck8axw69u004s98kihovxduyq","tag_id":"ck8axw69z004u98ki9le40vk2","_id":"ck8axw6a0004w98kih9tdeoo1"},{"post_id":"ck8axw6ac004x98kidi2wf9sb","tag_id":"ck8axw6ad004y98kih8p573kr","_id":"ck8axw6ae004z98ki637i5jvt"}],"Tag":[{"name":"hackerrank","_id":"ck8axw64k000298ki7y3z375r"},{"name":"算法 hackerrank","_id":"ck8axw653000k98kicbg746bt"},{"name":"杂事","_id":"ck8axw65b000q98ki0jn95ahq"},{"name":"chaos","_id":"ck8axw65k001398ki08a40gsz"},{"name":"有意的东西","_id":"ck8axw65y001n98kibd4m8em7"},{"name":"有意思的东西","_id":"ck8axw661001t98kickiweppz"},{"name":"过去","_id":"ck8axw669001y98ki4see0m4q"},{"name":"invest","_id":"ck8axw66c002298ki4d6qcimk"},{"name":"OPEC","_id":"ck8axw66g002698ki3diz588f"},{"name":"investment","_id":"ck8axw66n002b98ki0gdw98n3"},{"name":"小钱钱","_id":"ck8axw66x002k98ki83kw96lw"},{"name":"生活","_id":"ck8axw672002o98ki71wp82vn"},{"name":"life","_id":"ck8axw675002s98ki2sppc4cf"},{"name":"小程序","_id":"ck8axw67h003798kif3okgf7n"},{"name":"项目","_id":"ck8axw67z003p98kig0fiawy9"},{"name":"读后感","_id":"ck8axw684003u98kicz3n5c01"},{"name":"cheatsheet","_id":"ck8axw688003y98ki82231fvl"},{"name":"技术","_id":"ck8axw68b004298kif0dz35yg"},{"name":"坑","_id":"ck8axw68q004i98ki69703xtg"},{"name":"Cloud","_id":"ck8axw69x004t98kibvry02f5"},{"name":"mynotes Linux","_id":"ck8axw69z004u98ki9le40vk2"},{"name":"学习笔记","_id":"ck8axw6ad004y98kih8p573kr"}]}}